/**
* DevExpress Analytics (widgets\utils.d.ts)
* Version:  21.2.3
* Build date: Oct 28, 2021
* Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { IPathRequest } from './common/pathRequest';
export interface IDataMemberInfo {
    name: string;
    displayName: string;
    isList?: boolean;
    specifics?: string;
    isSelected?: boolean;
    dataType?: string;
    templateName?: string;
    innerActions?: any;
    relationPath?: string;
    noDragable?: any;
    dragData?: any;
    icon?: string;
    items?: IDataMemberInfo[];
}
export interface IItemsProvider {
    getItems: (path: IPathRequest) => JQueryPromise<IDataMemberInfo[]>;
    getItemByPath?: (path: IPathRequest) => JQueryPromise<IDataMemberInfo>;
    getValues?: (path: IPathRequest) => JQueryPromise<any[]>;
}
export interface IHotKey {
    ctrlKey: boolean;
    keyCode: number;
}
export interface IAction<T = any> {
    id?: string;
    text: string;
    textId?: string;
    group?: () => string;
    displayText?: () => string;
    imageClassName: any;
    imageTemplateName?: any;
    container?: string;
    clickAction: (model?: any) => void;
    disabled?: ko.Observable<boolean> | ko.Computed<boolean>;
    hotKey?: IHotKey;
    hasSeparator?: boolean;
    templateName?: string;
    contentData?: T;
    visible?: any;
    zoomStep?: any;
    zoomLevels?: any;
    zoom?: any;
    zoomItems?: any;
    position?: number;
    selected?: ko.Observable<boolean> | ko.Computed<boolean>;
    displayExpr?: (val: any) => string;
    onCustomItemCreating?: (e: {
        text: string;
        customItem: any;
    }) => void;
}
export interface IActionGroup {
    groupName: string;
    actions: IAction;
}
