/**
* DevExpress Dashboard (_rename-data-source-viewmodel.js)
* Version:  21.2.3
* Build date: Oct 25, 2021
* Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var _default_1 = require("../../../data/localization/_default");
var _helper_classes_1 = require("../../../model/internal/_helper-classes");
var RenameDataSourceViewModel = (function () {
    function RenameDataSourceViewModel(dataSourceBrowser) {
        var _this = this;
        this.title = _default_1.getLocalizationById('DashboardWebStringId.DataSources.RenameDataSource');
        this.label = _default_1.getLocalizationById('DashboardWebStringId.DataSources.NewDataSourceName');
        this.isDataSourceNameValid = ko.observable(true);
        this.popupVisible = ko.observable(false);
        this.toolbarItems = [];
        this.dsName = ko.observable('');
        this._dataSourceNameValid = function (dsName) {
            var otherDataSources = _this._dataSourceBrowser._dataSources().filter(function (ds) { return ds.componentName() !== _this._dataSource.componentName(); });
            return dsName && _helper_classes_1.NameGenerator.isValidName(dsName, otherDataSources, 'name');
        };
        this._dataSourceBrowser = dataSourceBrowser;
        this.toolbarItems = [{
                toolbar: 'bottom',
                location: 'after',
                widget: 'dxButton',
                options: {
                    text: _default_1.getLocalizationById('DashboardWebStringId.DataSources.Rename'),
                    type: 'default',
                    disabled: ko.computed(function () { return !_this.isDataSourceNameValid(); }),
                    onClick: function () {
                        _this._dataSource.name(_this.dsName());
                        _this.popupVisible(false);
                    }
                }
            },
            {
                toolbar: 'bottom',
                location: 'after',
                widget: 'dxButton',
                options: {
                    text: _default_1.getLocalizationById('DashboardWebStringId.DataSources.Cancel'),
                    onClick: function () { _this.popupVisible(false); }
                }
            }];
        this.nameValidationRules = [{
                type: 'required'
            }, {
                type: 'custom',
                validationCallback: function (params) {
                    return _this._dataSourceNameValid(params.value);
                },
                message: _default_1.getLocalizationById('DashboardWebStringId.DataSources.DataSourceNameExistsMessage')
            }];
        this.nameTextBoxOptions = {
            value: this.dsName
        };
        this.nameValidatorOptions = {
            isValid: this.isDataSourceNameValid,
            validationRules: this.nameValidationRules
        };
    }
    RenameDataSourceViewModel.prototype.show = function (dataSource) {
        this._dataSource = dataSource;
        this.dsName(dataSource.name());
        this.popupVisible(true);
    };
    return RenameDataSourceViewModel;
}());
exports.RenameDataSourceViewModel = RenameDataSourceViewModel;
