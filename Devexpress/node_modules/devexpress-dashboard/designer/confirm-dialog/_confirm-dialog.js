/**
* DevExpress Dashboard (_confirm-dialog.js)
* Version:  21.2.3
* Build date: Oct 25, 2021
* Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var _jquery_helpers_1 = require("../../data/_jquery-helpers");
var _utils_1 = require("../../data/_utils");
var ConfirmDialogViewModel = (function () {
    function ConfirmDialogViewModel() {
        this.confirmTitle = ko.observable('');
        this.confirmText = ko.observable('');
        this.confirmVisible = ko.observable(false);
        this.confirmButtons = ko.observable([]);
        this.confirmHidden = function (e) { };
    }
    ConfirmDialogViewModel.prototype.confirm = function (title, message, okButtonText, cancelButtonText) {
        var _this = this;
        var deferred = _jquery_helpers_1.createJQueryDeferred();
        this.confirmTitle(title);
        this.confirmText(message);
        var buttons = [];
        if (_utils_1.type.isDefined(okButtonText))
            buttons.push({
                toolbar: 'bottom', location: 'after', widget: 'dxButton', options: {
                    text: okButtonText,
                    type: 'default',
                    onClick: function () {
                        setTimeout(function () { _this.confirmVisible(false); }, 1);
                        deferred.resolve(true);
                    }
                }
            });
        if (_utils_1.type.isDefined(cancelButtonText))
            buttons.push({
                toolbar: 'bottom', location: 'after', widget: 'dxButton', options: {
                    text: cancelButtonText,
                    onClick: function () {
                        setTimeout(function () { _this.confirmVisible(false); }, 1);
                        deferred.resolve(false);
                    }
                }
            });
        this.confirmButtons(buttons);
        this.confirmHidden = function (e) {
            if (deferred.state() === 'pending')
                deferred.reject();
        };
        this.confirmVisible(true);
        return deferred.promise();
    };
    return ConfirmDialogViewModel;
}());
exports.ConfirmDialogViewModel = ConfirmDialogViewModel;
