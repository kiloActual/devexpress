/**
* DevExpress Dashboard (_simple-filter-editor.js)
* Version:  21.2.3
* Build date: Oct 25, 2021
* Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var _default_1 = require("../../../data/localization/_default");
var disposable_object_1 = require("../../../model/disposable-object");
var _filter_field_wrapper_1 = require("./_filter-field-wrapper");
var _simple_filter_tree_list_1 = require("./_simple-filter-tree-list");
var SimpleFilterEditor = (function (_super) {
    __extends(SimpleFilterEditor, _super);
    function SimpleFilterEditor(dashboardItem, dataSourceBrowser) {
        var _this = _super.call(this) || this;
        _this.dashboardItem = dashboardItem;
        _this.dataSourceBrowser = dataSourceBrowser;
        _this.popupVisible = ko.observable(false);
        _this._filterTreeList = new _simple_filter_tree_list_1.SimpleFilterTreeList(dashboardItem, dataSourceBrowser);
        _this._fieldSelector = new _filter_field_wrapper_1.FilterFieldSelector(dashboardItem, dataSourceBrowser, function (field) {
            _this._filterTreeList.reload(field);
        });
        _this._fieldSelector.init();
        _this.viewModel = {
            getPopupOptions: function (container) {
                return {
                    target: container,
                    container: container,
                    position: {
                        my: 'center',
                        at: 'center',
                        boundary: container
                    },
                    height: '50%',
                    width: '50%',
                    minHeight: '250px',
                    minWidth: '250px',
                    animation: {},
                    focusStateEnabled: true,
                    resizeEnabled: true,
                    closeOnOutsideClick: false,
                    toolbarItems: [
                        { toolbar: 'bottom',
                            location: 'after',
                            widget: 'dxButton',
                            options: {
                                text: _default_1.getLocalizationById('DashboardWebStringId.DataSources.Save'),
                                onClick: function () { return _this._applyHandler(); }
                            }
                        },
                        { toolbar: 'bottom',
                            location: 'after',
                            widget: 'dxButton',
                            options: {
                                text: _default_1.getLocalizationById('DashboardWebStringId.DataSources.Cancel'),
                                onClick: function () { _this._onPopupHidden(); }
                            }
                        }
                    ],
                    onHidden: function () { return _this._onPopupHidden(); },
                    onShown: function () { return _this._onPopupShown(); },
                    visible: _this.popupVisible,
                    shadingColor: 'rgba(0, 0, 0, 0.2)',
                    showTitle: true,
                    title: _default_1.getLocalizationById('DataAccessUIStringId.FiltersView'),
                    wrapperAttr: {
                        class: 'dx-filter-popup dx-dashboard-typography dx-dashboard-simple-filter'
                    }
                };
            },
            fieldSelector: _this._fieldSelector,
            filterTreeList: _this._filterTreeList
        };
        return _this;
    }
    SimpleFilterEditor.prototype._onPopupHidden = function () {
        this.popupVisible(false);
        this._filterTreeList.hide();
    };
    SimpleFilterEditor.prototype._onPopupShown = function () {
        this._filterTreeList.show(this._fieldSelector.selectedField);
    };
    SimpleFilterEditor.prototype._applyHandler = function () {
        var _this = this;
        if (!!this._fieldSelector.selectedField) {
            this.dataSourceBrowser.getDimensionFilterString(this.dashboardItem, this._fieldSelector.selectedField.dataMember(), this._filterTreeList.getTreeListItems().map(function (i) { return i.data; })).done(function (filterString) {
                _this.dashboardItem.filterString(filterString);
            });
        }
        this.popupVisible(false);
    };
    SimpleFilterEditor.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._fieldSelector.dispose();
        this._filterTreeList.dispose();
    };
    return SimpleFilterEditor;
}(disposable_object_1.DisposableObject));
exports.SimpleFilterEditor = SimpleFilterEditor;
