/**
* DevExpress Dashboard (_docking-layout-fullscreen-item.js)
* Version:  21.2.3
* Build date: Oct 25, 2021
* Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var _jquery_helpers_1 = require("../../data/_jquery-helpers");
var _interfaces_1 = require("../internal/_interfaces");
var _layout_item_1 = require("./core/_layout-item");
var FullscreenItemModel = (function () {
    function FullscreenItemModel(dashboardContext, localContext, repaintRequest) {
        if (repaintRequest === void 0) { repaintRequest = _jquery_helpers_1.createJQueryCallbacks(); }
        var _this = this;
        this.dashboardContext = dashboardContext;
        this.localContext = localContext;
        this.repaintRequest = repaintRequest;
        this._dashboardItem = ko.observable(null);
        this._visible = ko.observable(false);
        this.dashboardItem = ko.computed(function () { return _this._dashboardItem(); });
        this.visible = ko.computed(function () { return _this._visible(); });
        this.viewModel = ko.computed(function () {
            return {
                dashboardItem: _this.dashboardItem(),
                dashboardContext: _this.dashboardContext,
                localContext: _this.localContext,
                repaintRequest: _this.repaintRequest,
                getSizeController: function (element) { return new _interfaces_1.SingleItemSizeController(element.closest('.dx-dashboard-fullscreen-item-base'), _this.repaintRequest, _layout_item_1.SplitterSize); }
            };
        });
    }
    Object.defineProperty(FullscreenItemModel.prototype, "maximizedItemName", {
        get: function () {
            if (this._visible() && this.dashboardItem()) {
                return this.dashboardItem().componentName();
            }
            else {
                return '';
            }
        },
        enumerable: true,
        configurable: true
    });
    FullscreenItemModel.prototype.maximizeItem = function (dashboardItem) {
        this._dashboardItem(dashboardItem);
        this._visible(true);
    };
    FullscreenItemModel.prototype.restoreDownItem = function () {
        this._visible(false);
    };
    return FullscreenItemModel;
}());
exports.FullscreenItemModel = FullscreenItemModel;
