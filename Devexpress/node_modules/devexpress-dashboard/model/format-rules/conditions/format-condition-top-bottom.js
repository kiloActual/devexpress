/**
* DevExpress Dashboard (format-condition-top-bottom.js)
* Version:  21.2.3
* Build date: Oct 25, 2021
* Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = require("@devexpress/analytics-core/analytics-utils");
var ko = require("knockout");
var format_condition_style_base_1 = require("./format-condition-style-base");
var _format_condition_top_bottom_1 = require("./metadata/_format-condition-top-bottom");
var FormatConditionTopBottom = (function (_super) {
    __extends(FormatConditionTopBottom, _super);
    function FormatConditionTopBottom(modelJson, serializer) {
        if (serializer === void 0) { serializer = new analytics_utils_1.ModelSerializer(); }
        var _this = _super.call(this, modelJson, serializer) || this;
        _this.getSpecificType = function () { return _this.topBottom(); };
        _this.setSpecificType = function (type) {
            _this.topBottom(type);
        };
        _this._actualRankType = ko.pureComputed({
            read: function () { return _this.rankType() === 'Automatic' ? 'Number' : _this.rankType(); },
            write: function (value) { return _this.rankType(value); }
        });
        return _this;
    }
    FormatConditionTopBottom.prototype._getInfoButStyleSettings = function () {
        return _format_condition_top_bottom_1.formatConditionTopBottomSerializationsInfo;
    };
    return FormatConditionTopBottom;
}(format_condition_style_base_1.FormatConditionStyleBase));
exports.FormatConditionTopBottom = FormatConditionTopBottom;
