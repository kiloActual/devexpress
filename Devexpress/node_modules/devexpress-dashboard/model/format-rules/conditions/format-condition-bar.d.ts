/**
* DevExpress Dashboard (format-condition-bar.d.ts)
* Version:  21.2.3
* Build date: Oct 25, 2021
* Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ModelSerializer } from '@devexpress/analytics-core/analytics-utils';
import * as ko from 'knockout';
import { IDashboardSerializationInfo, IDashboardSerializationInfoArray } from '../../metadata/_base-metadata';
import { StyleSettingsBase } from '../style-settings/style-settings-base';
import { StyleSettingsType } from '../style-settings/_style-settings-utils';
import { FormatConditionBarOptions } from './format-condition-bar-options';
import { FormatConditionMinMaxBase } from './format-condition-min-max-base';
export declare class FormatConditionBar extends FormatConditionMinMaxBase {
    barOptions: FormatConditionBarOptions;
    negativeStyleSettings: ko.Observable<StyleSettingsBase>;
    currentStyleSettingsType: ko.Observable<string>;
    currentStyleSettings: ko.Computed<StyleSettingsBase>;
    readonly _isApplyToRowColumnRestricted: boolean;
    constructor(modelJson?: any, serializer?: ModelSerializer);
    protected _getInfoButStyleSettings(): IDashboardSerializationInfoArray;
    protected _getStyleSettingsInfo(): IDashboardSerializationInfo;
    getSpecificType: () => any;
    setSpecificType: (type: string) => void;
    protected _getDefaultStyleSettingsType(): StyleSettingsType;
    init(): void;
}
