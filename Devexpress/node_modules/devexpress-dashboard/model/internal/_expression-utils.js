/**
* DevExpress Dashboard (_expression-utils.js)
* Version:  21.2.3
* Build date: Oct 25, 2021
* Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_internal_1 = require("@devexpress/analytics-core/analytics-widgets-internal");
var analytics_criteria_1 = require("@devexpress/analytics-core/analytics-criteria");
function getFilterCriteria(filterString) {
    var criteriaSerializer = new analytics_widgets_internal_1.FilterEditorSerializer();
    return criteriaSerializer.deserialize(filterString);
}
exports.getFilterCriteria = getFilterCriteria;
function insertDimensionsExpressionsIntoFilterExpression(filterString, dimensionsExpressions) {
    var criteriaSerializer = new analytics_widgets_internal_1.FilterEditorSerializer();
    var filterCriteria = criteriaSerializer.deserialize(filterString);
    var dimensionsCriteria = {};
    for (var dimensionName in dimensionsExpressions)
        dimensionsCriteria[dimensionName] = analytics_criteria_1.CriteriaOperator.parse(dimensionsExpressions[dimensionName]);
    var patched = DimensionExpressionInserter.patch(filterCriteria, dimensionsCriteria);
    return criteriaSerializer.serialize(patched);
}
exports.insertDimensionsExpressionsIntoFilterExpression = insertDimensionsExpressionsIntoFilterExpression;
var DimensionExpressionInserter = (function () {
    function DimensionExpressionInserter(dimensionsCriteria) {
        this._dimensionsCriteria = dimensionsCriteria;
    }
    DimensionExpressionInserter.patch = function (criteria, dimensionsCriteria) {
        var patcher = new DimensionExpressionInserter(dimensionsCriteria);
        return criteria.accept(patcher);
    };
    DimensionExpressionInserter.prototype.visitOperandProperty = function (element) {
        return this._dimensionsCriteria[element.propertyName];
    };
    return DimensionExpressionInserter;
}());
exports.DimensionExpressionInserter = DimensionExpressionInserter;
