/**
* DevExpress Dashboard (_expanding-manager.js)
* Version:  21.2.3
* Build date: Oct 25, 2021
* Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _date_utils_1 = require("./_date-utils");
var ExpandingManager = (function () {
    function ExpandingManager() {
        this._expandingParams = undefined;
        this._expandingState = undefined;
    }
    ExpandingManager.prototype.getPivotExpandViewState = function () {
        return this._dxPivotState;
    };
    ExpandingManager.prototype.setExpandingParams = function (expandingParams) {
        this._expandingParams = expandingParams;
    };
    ExpandingManager.prototype.onViewStateChanged = function (expandingState, dxPivotState) {
        this._expandingState = expandingState;
        this._dxPivotState = dxPivotState;
    };
    ExpandingManager.prototype.canProvideExpandingState = function () {
        return this._expandingParams || this._expandingState;
    };
    ExpandingManager.prototype.calculateExpandingState = function () {
        var params = this._expandingParams;
        var state = this._expandingState;
        return {
            rows: state && _date_utils_1.toStringArray(state.rows) || [],
            columns: state && _date_utils_1.toStringArray(state.columns) || [],
            values: !!params ? _date_utils_1.toStringArray(params.values) : undefined,
            isColumn: !!params && params.isColumn
        };
    };
    ExpandingManager.prototype.resetExpandingParams = function () {
        this._expandingParams = undefined;
    };
    ExpandingManager.prototype.resetColumnViewState = function (autoExpand) {
        this._expandingState = { rows: this._expandingState.rows, columns: [] };
        if (this._dxPivotState) {
            this._dxPivotState.fields && this._dxPivotState.fields.filter(function (f) { return f.area === 'column'; }).forEach(function (f) { f.expanded = autoExpand; });
            this._dxPivotState.columnExpandedPaths = [];
        }
    };
    ExpandingManager.prototype.resetRowViewState = function (autoExpand) {
        this._expandingState = { rows: [], columns: this._expandingState.columns };
        if (this._dxPivotState) {
            this._dxPivotState.fields && this._dxPivotState.fields.filter(function (f) { return f.area === 'row'; }).forEach(function (f) { f.expanded = autoExpand; });
            this._dxPivotState.rowExpandedPaths = [];
        }
    };
    return ExpandingManager;
}());
exports.ExpandingManager = ExpandingManager;
