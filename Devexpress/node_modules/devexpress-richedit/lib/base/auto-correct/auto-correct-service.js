"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var auto_correct_providers_1 = require("./auto-correct-providers");
var AutoCorrectService = (function () {
    function AutoCorrectService(control, settings) {
        this.control = control;
        this.settings = settings;
        this.providers = [];
        this.registerDefaultProviders();
    }
    AutoCorrectService.prototype.registerDefaultProviders = function () {
        this.providers.push(new auto_correct_providers_1.EventAutoCorrectProvider(this.control));
        if (this.settings.replaceTextAsYouType) {
            this.providers.push(new auto_correct_providers_1.TableBasedSimpleAutoCorrectProvider(this.control, this.settings));
            this.providers.push(new auto_correct_providers_1.TableBasedCompositeAutoCorrectProvider(this.control, this.settings));
            this.providers.push(new auto_correct_providers_1.TableBasedImmediateAutoCorrectProvider(this.control, this.settings));
        }
        if (this.settings.correctTwoInitialCapitals)
            this.providers.push(new auto_correct_providers_1.TwoInitialCapitalsAutoCorrectProvider(this.control));
        if (this.settings.enableAutomaticNumbering)
            this.providers.push(new auto_correct_providers_1.BulletedListAutoCorrectProvider(this.control));
        if (this.settings.detectUrls)
            this.providers.push(new auto_correct_providers_1.UrlAutoCorrectProvider(this.control));
    };
    AutoCorrectService.prototype.performAutoCorrect = function () {
        if (this.control.selection.isCollapsed()) {
            for (var _i = 0, _a = this.providers; _i < _a.length; _i++) {
                var provider = _a[_i];
                if (provider.revise())
                    return;
            }
        }
    };
    return AutoCorrectService;
}());
exports.AutoCorrectService = AutoCorrectService;
