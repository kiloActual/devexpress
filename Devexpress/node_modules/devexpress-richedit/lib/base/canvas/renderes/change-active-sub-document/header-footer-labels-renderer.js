"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var renderer_class_names_1 = require("../../../../core/canvas/renderer-class-names");
var layout_page_1 = require("../../../../core/layout/main-structures/layout-page");
var section_1 = require("../../../../core/model/section/section");
var common_1 = require("@devexpress/utils/lib/utils/common");
var dom_1 = require("@devexpress/utils/lib/utils/dom");
var number_1 = require("@devexpress/utils/lib/utils/map/number");
var document_renderer_1 = require("../common/document-renderer");
var base_renderer_1 = require("./base-renderer");
var HeaderFooterLabelsRenderer = (function (_super) {
    tslib_1.__extends(HeaderFooterLabelsRenderer, _super);
    function HeaderFooterLabelsRenderer(renderer, stringResources) {
        var _this = _super.call(this, renderer) || this;
        _this.stringResources = stringResources;
        _this.elementsMap = {};
        return _this;
    }
    HeaderFooterLabelsRenderer.prototype.handlePageHide = function (pageIndex) {
        var elem = this.elementsMap[pageIndex];
        if (elem) {
            elem.hide();
            delete this.elementsMap[pageIndex];
        }
        return true;
    };
    HeaderFooterLabelsRenderer.prototype.handlePageRender = function (pageIndex, force) {
        var layoutPage = this.renderer.layout.pages[pageIndex];
        var cacheElement = this.renderer.cache[pageIndex];
        if (!cacheElement || !layoutPage)
            return false;
        var layoutPageAreas = layoutPage.getLayoutOtherPageAreasInfo();
        var documentModel = this.getDocumentModel();
        if (!documentModel)
            return false;
        var oldElems = this.elementsMap[pageIndex];
        var deleteOldElems = true;
        if (this.isHeaderFooterActive(layoutPage)) {
            if (!oldElems || force) {
                var container = document_renderer_1.DocumentRenderer.getServiceContainerCore(cacheElement.page);
                var sectionIndex = section_1.Section.getPageSectionIndex(layoutPage, documentModel.sections);
                var section = documentModel.sections[sectionIndex];
                var infoTexts = this.getInfoTexts(sectionIndex, section, layoutPage, layoutPageAreas, documentModel);
                var elements = this.elementsMap[pageIndex] = new HeaderFooterElements();
                deleteOldElems = false;
                this.updateElementInfo(infoTexts.headerInfo, container, layoutPageAreas.headerPageArea, elements.headerInfoElement, HeaderFooterLabelsRenderer.getHeaderInfoTopPosition);
                this.updateElementInfo(infoTexts.footerInfo, container, layoutPageAreas.footerPageArea, elements.footerInfoElement, HeaderFooterLabelsRenderer.getFooterInfoTopPosition);
            }
            else
                oldElems = null;
        }
        if (oldElems) {
            oldElems.hide();
            if (deleteOldElems)
                delete this.elementsMap[pageIndex];
        }
        return true;
    };
    HeaderFooterLabelsRenderer.prototype.getDocumentModel = function () {
        var page = this.renderer.layout.pages[0];
        if (!page)
            return null;
        var pa = page.mainSubDocumentPageAreas[0] || number_1.NumberMapUtils.anyOf(page.otherPageAreas, function (pa) { return pa; });
        return pa ? pa.subDocument.documentModel : null;
    };
    HeaderFooterLabelsRenderer.prototype.getInfoTexts = function (sectionIndex, section, layoutPage, layoutHeaderFooterPageAreas, documentModel) {
        var result = new HeaderFooterInfoTexts();
        if (section.sectionProperties.differentFirstPage && layoutPage.flags.get(layout_page_1.LayoutPageFlags.IsFirstPageOfSection)) {
            result.headerInfo.push(this.stringResources.firstPageHeader);
            result.footerInfo.push(this.stringResources.firstPageFooter);
        }
        else if (!documentModel.differentOddAndEvenPages) {
            result.headerInfo.push(this.stringResources.header);
            result.footerInfo.push(this.stringResources.footer);
        }
        else if (common_1.isEven(layoutPage.layoutPageIndex)) {
            result.headerInfo.push(this.stringResources.evenPageHeader);
            result.footerInfo.push(this.stringResources.evenPageFooter);
        }
        else {
            result.headerInfo.push(this.stringResources.oddPageHeader);
            result.footerInfo.push(this.stringResources.oddPageFooter);
        }
        if (documentModel.sections.length > 1) {
            var sectionLabel = " -Section " + (sectionIndex + 1) + "-";
            result.headerInfo[0] += sectionLabel;
            result.footerInfo[0] += sectionLabel;
        }
        if (layoutHeaderFooterPageAreas.headerPageArea && section.headers.isLinkedToPrevious(layoutHeaderFooterPageAreas.headerPageArea.subDocument.info.headerFooterType))
            result.headerInfo.push(this.stringResources.sameAsPrevious);
        if (layoutHeaderFooterPageAreas.footerPageArea && section.footers.isLinkedToPrevious(layoutHeaderFooterPageAreas.footerPageArea.subDocument.info.headerFooterType))
            result.footerInfo.push(this.stringResources.sameAsPrevious);
        return result;
    };
    HeaderFooterLabelsRenderer.prototype.updateElementInfo = function (infoTexts, container, pageArea, infoElement, getTopPosition) {
        if (!pageArea)
            return;
        var sameAsPrevInfoText = infoTexts[1];
        infoElement.innerHTML = "<b>" + infoTexts[0] + "</b>" + (sameAsPrevInfoText ? "<b>" + sameAsPrevInfoText + "</b>" : "");
        container.appendChild(infoElement);
        infoElement.style.top = getTopPosition(pageArea, infoElement) + "px";
    };
    HeaderFooterLabelsRenderer.getHeaderInfoTopPosition = function (pageArea, _element) {
        return pageArea.y + pageArea.height + 1;
    };
    HeaderFooterLabelsRenderer.getFooterInfoTopPosition = function (pageArea, element) {
        return pageArea.y - element.offsetHeight - 1;
    };
    return HeaderFooterLabelsRenderer;
}(base_renderer_1.BaseRenderer));
exports.HeaderFooterLabelsRenderer = HeaderFooterLabelsRenderer;
var HeaderFooterInfoTexts = (function () {
    function HeaderFooterInfoTexts() {
        this.headerInfo = [];
        this.footerInfo = [];
    }
    return HeaderFooterInfoTexts;
}());
var HeaderFooterElements = (function () {
    function HeaderFooterElements() {
        this.headerInfoElement = document_renderer_1.DocumentRenderer.renderContainer(renderer_class_names_1.RendererClassNames.HEADER_INFO);
        this.footerInfoElement = document_renderer_1.DocumentRenderer.renderContainer(renderer_class_names_1.RendererClassNames.FOOTER_INFO);
    }
    HeaderFooterElements.prototype.hide = function () {
        dom_1.DomUtils.hideNode(this.headerInfoElement);
        dom_1.DomUtils.hideNode(this.footerInfoElement);
    };
    return HeaderFooterElements;
}());
