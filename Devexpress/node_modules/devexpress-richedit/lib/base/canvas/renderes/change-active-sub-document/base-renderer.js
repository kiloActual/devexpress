"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var list_1 = require("@devexpress/utils/lib/utils/list");
var number_1 = require("@devexpress/utils/lib/utils/map/number");
var BaseRenderer = (function () {
    function BaseRenderer(renderer) {
        this.renderer = renderer;
        this.init();
    }
    BaseRenderer.prototype.init = function () {
        this.pageIndex = -2;
        this.subDocumentInfo = null;
        this.handledPages = {};
    };
    BaseRenderer.prototype.update = function (newSubDocumentInfo, newPageIndex) {
        var _this = this;
        this.innerUpdate(newSubDocumentInfo, newPageIndex, function () {
            var renderedPages = _this.renderer.scroll.renderPageIndexInterval();
            var useCache = _this.pageIndex == _this.newPageIndex &&
                _this.subDocumentInfo.subDocumentId == _this.newSubDocumentInfo.subDocumentId;
            var handledPages = useCache ? _this.handledPages : {};
            _this.handledPages = {};
            number_1.NumberMapUtils.forEach(handledPages, function (handledPageIndex) {
                if (!renderedPages.contains(handledPageIndex))
                    if (!_this.handlePageHide(handledPageIndex))
                        _this.handledPages[handledPageIndex] = handledPageIndex;
            });
            list_1.ListUtils.forEachOnInterval(renderedPages, function (renderedPageIndex) {
                if (handledPages[renderedPageIndex] === undefined)
                    if (_this.handlePageRender(renderedPageIndex, false))
                        _this.handledPages[renderedPageIndex] = renderedPageIndex;
            });
        });
    };
    BaseRenderer.prototype.updatePage = function (pageIndex, newSubDocumentInfo, newPageIndex) {
        var _this = this;
        this.innerUpdate(newSubDocumentInfo, newPageIndex, function () {
            if (_this.handlePageRender(pageIndex, true))
                _this.handledPages[pageIndex] = pageIndex;
        });
    };
    BaseRenderer.prototype.innerUpdate = function (newSubDocumentInfo, newPageIndex, action) {
        if (newSubDocumentInfo) {
            this.newSubDocumentInfo = newSubDocumentInfo;
            this.newPageIndex = newPageIndex;
            action();
            this.subDocumentInfo = newSubDocumentInfo;
            this.pageIndex = newPageIndex;
        }
    };
    BaseRenderer.prototype.isHeaderFooterActive = function (layoutPage) {
        if (this.newSubDocumentInfo.isHeaderFooter)
            return true;
        if (!this.newSubDocumentInfo.isTextBox)
            return false;
        var paSdId = this.newSubDocumentInfo.parentSubDocumentId;
        var pa = layoutPage.otherPageAreas[paSdId];
        return pa && pa.subDocument.isHeaderFooter();
    };
    return BaseRenderer;
}());
exports.BaseRenderer = BaseRenderer;
