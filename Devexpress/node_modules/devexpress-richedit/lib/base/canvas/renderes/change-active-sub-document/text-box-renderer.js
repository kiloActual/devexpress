"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var renderer_class_names_1 = require("../../../../core/canvas/renderer-class-names");
var z_index_helper_1 = require("../../../../core/canvas/renderes/z-index-helper");
var dom_1 = require("@devexpress/utils/lib/utils/dom");
var number_1 = require("@devexpress/utils/lib/utils/map/number");
var base_renderer_1 = require("./base-renderer");
var TextBoxRenderer = (function (_super) {
    tslib_1.__extends(TextBoxRenderer, _super);
    function TextBoxRenderer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TextBoxRenderer.prototype.handlePageHide = function (_pageIndex) {
        return true;
    };
    TextBoxRenderer.prototype.handlePageRender = function (pageIndex) {
        var _this = this;
        var cacheElement = this.renderer.cache[pageIndex];
        var layoutPage = this.renderer.layout.pages[pageIndex];
        if (!cacheElement || !layoutPage)
            return false;
        var activeSubDocumentId = this.newSubDocumentInfo.subDocumentId;
        number_1.NumberMapUtils.forEach(cacheElement.otherAreas, function (paNode, textBoxSubDocId) {
            var obj = layoutPage.anchoredObjectHolder.getTextBoxByInternalSubDocId(textBoxSubDocId);
            if (obj) {
                var isTextBoxActive = textBoxSubDocId == activeSubDocumentId;
                var bgNode = cacheElement.textBoxBgElements[textBoxSubDocId];
                var renderLevel = layoutPage.renderLevelCalculator.getRenderLevel(layoutPage.anchoredObjectHolder.getTextBoxByInternalSubDocId(textBoxSubDocId).rendererLevel);
                if (isTextBoxActive) {
                    if (obj.rotationInRadians == 0)
                        dom_1.DomUtils.removeClassName(paNode, z_index_helper_1.ZIndexHelper.getClassName(renderLevel, z_index_helper_1.zIndexCssClassType.TextBox));
                    else
                        dom_1.DomUtils.addClassName(paNode, z_index_helper_1.ZIndexHelper.getClassName(renderLevel, z_index_helper_1.zIndexCssClassType.TextBox));
                    dom_1.DomUtils.addClassName(paNode, renderer_class_names_1.RendererClassNames.SELECTED_TEXTBOX);
                    dom_1.DomUtils.addClassName(bgNode, renderer_class_names_1.RendererClassNames.SELECTED_TEXTBOX);
                }
                else {
                    dom_1.DomUtils.removeClassName(paNode, renderer_class_names_1.RendererClassNames.SELECTED_TEXTBOX);
                    dom_1.DomUtils.removeClassName(bgNode, renderer_class_names_1.RendererClassNames.SELECTED_TEXTBOX);
                    dom_1.DomUtils.addClassName(paNode, z_index_helper_1.ZIndexHelper.getClassName(renderLevel, z_index_helper_1.zIndexCssClassType.TextBox));
                }
                if (isTextBoxActive || obj.belongsToSubDocId == activeSubDocumentId ||
                    (_this.newSubDocumentInfo.isTextBox &&
                        _this.newSubDocumentInfo.parentSubDocumentId == obj.belongsToSubDocId))
                    dom_1.DomUtils.removeClassName(paNode, renderer_class_names_1.RendererClassNames.BLACKOUT);
                else
                    dom_1.DomUtils.addClassName(paNode, renderer_class_names_1.RendererClassNames.BLACKOUT);
            }
        });
        return true;
    };
    return TextBoxRenderer;
}(base_renderer_1.BaseRenderer));
exports.TextBoxRenderer = TextBoxRenderer;
