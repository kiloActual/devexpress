"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var document_layout_details_level_1 = require("../../../core/layout/document-layout-details-level");
var field_1 = require("../../../core/model/fields/field");
var list_1 = require("@devexpress/utils/lib/utils/list");
var ManipulatorHandlerBase = (function () {
    function ManipulatorHandlerBase(control, defaultStateConstructor, boxVisualizerManager) {
        this.mouseWheelEvent = false;
        this.control = control;
        this.boxVisualizerManager = boxVisualizerManager;
        this.defaultState = new defaultStateConstructor(this);
        this.switchToDefaultState();
    }
    ManipulatorHandlerBase.prototype.dispose = function () {
        this.state.dispose();
    };
    ManipulatorHandlerBase.prototype.switchToDefaultState = function () {
        this.switchState(this.defaultState);
    };
    ManipulatorHandlerBase.prototype.switchState = function (state) {
        if (this.state)
            this.state.finish();
        this.state = state;
        this.state.start();
    };
    ManipulatorHandlerBase.prototype.getHyperlinkFieldResult = function (evt) {
        var subDocument = this.control.selection.activeSubDocument;
        var htr = this.control.hitTestManager.calculate(evt.layoutPoint, document_layout_details_level_1.DocumentLayoutDetailsLevel.Max, subDocument);
        if (htr.exactlyDetailLevel == document_layout_details_level_1.DocumentLayoutDetailsLevel.None)
            return null;
        var position = htr.floatingObject ? this.control.layout.anchorObjectsPositionInfo.getPosition(htr.floatingObject.objectId) :
            htr.getPosition();
        var fieldInfos = field_1.FieldVisabilityInfo.getRelativeVisabilityInfo(position, subDocument.fields);
        var fieldVisabilityInfo = list_1.ListUtils.reverseElementBy(fieldInfos, function (info) {
            return info.showResult && info.field.getResultInterval().containsWithIntervalEnd(position) && info.field.isHyperlinkField();
        });
        return fieldVisabilityInfo ? fieldVisabilityInfo.field : null;
    };
    return ManipulatorHandlerBase;
}());
exports.ManipulatorHandlerBase = ManipulatorHandlerBase;
