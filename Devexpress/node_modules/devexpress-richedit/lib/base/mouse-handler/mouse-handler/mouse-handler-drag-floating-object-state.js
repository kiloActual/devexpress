"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var key_1 = require("@devexpress/utils/lib/utils/key");
var drag_floating_objects_helper_1 = require("../drag-floating-objects-helper");
var mouse_handler_drag_content_states_1 = require("./mouse-handler-drag-content-states");
var MouseHandlerDragFloatingObjectState = (function (_super) {
    tslib_1.__extends(MouseHandlerDragFloatingObjectState, _super);
    function MouseHandlerDragFloatingObjectState(handler, evt) {
        var _this = _super.call(this, handler) || this;
        _this.dragFloatingObjectsHelper = new drag_floating_objects_helper_1.DragFloatingObjectsHelper(_this.handler.control, _this.handler.boxVisualizerManager.resizeBoxVisualizer);
        _this.dragFloatingObjectsHelper.start(evt);
        return _this;
    }
    MouseHandlerDragFloatingObjectState.prototype.onMouseMove = function (evt) {
        this.dragFloatingObjectsHelper.move(evt);
    };
    MouseHandlerDragFloatingObjectState.prototype.commitDrag = function (evt) {
        this.dragFloatingObjectsHelper.end(evt);
    };
    MouseHandlerDragFloatingObjectState.prototype.onShortcut = function (shortcutCode) {
        if (shortcutCode === key_1.KeyCode.Esc)
            this.dragFloatingObjectsHelper.rollback();
        _super.prototype.onShortcut.call(this, shortcutCode);
    };
    return MouseHandlerDragFloatingObjectState;
}(mouse_handler_drag_content_states_1.MouseHandlerCancellableDragStateBase));
exports.MouseHandlerDragFloatingObjectState = MouseHandlerDragFloatingObjectState;
