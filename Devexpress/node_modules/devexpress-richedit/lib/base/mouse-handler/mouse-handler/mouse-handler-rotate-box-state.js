"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var rotate_box_helper_1 = require("../rotate-box-helper");
var mouse_handler_drag_content_states_1 = require("./mouse-handler-drag-content-states");
var MouseHandlerRotateBoxState = (function (_super) {
    tslib_1.__extends(MouseHandlerRotateBoxState, _super);
    function MouseHandlerRotateBoxState() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MouseHandlerRotateBoxState.prototype.onMouseDown = function (evt) {
        this.rotateBoxHelper = new rotate_box_helper_1.RotateBoxHelper(this.handler.control, this.handler.boxVisualizerManager.resizeBoxVisualizer);
        this.rotateBoxHelper.start(evt);
    };
    MouseHandlerRotateBoxState.prototype.onMouseMove = function (evt) {
        this.rotateBoxHelper.move(evt);
    };
    MouseHandlerRotateBoxState.prototype.onMouseUp = function (evt) {
        _super.prototype.onMouseUp.call(this, evt);
        this.rotateBoxHelper.end(evt);
    };
    return MouseHandlerRotateBoxState;
}(mouse_handler_drag_content_states_1.MouseHandlerCancellableDragStateBase));
exports.MouseHandlerRotateBoxState = MouseHandlerRotateBoxState;
