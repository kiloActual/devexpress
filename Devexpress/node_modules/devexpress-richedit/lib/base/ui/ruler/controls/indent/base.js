"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var base_1 = require("../base");
var shadow_1 = require("../shadow");
var vertical_line_1 = require("../vertical-line");
exports.RulerMinDistanceBetweenIndents = 10;
var RulerBaseIndentControl = (function (_super) {
    tslib_1.__extends(RulerBaseIndentControl, _super);
    function RulerBaseIndentControl() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.viewState = 0;
        return _this;
    }
    RulerBaseIndentControl.prototype.updateModelState = function () {
        this.currModelState = this.getModelState();
        this.prevModelState = this.currModelState.clone();
    };
    RulerBaseIndentControl.prototype.onMouseDown = function (source, _evt) {
        if (!this.canHandle(source) || !this.currModelState.enabled)
            return false;
        this.controls.lineControl.show(vertical_line_1.RulerLineDisplayType.Normal);
        this.lineControlSetPosition();
        this.shadow = new shadow_1.RulerShadow(this.rootElement);
        return true;
    };
    RulerBaseIndentControl.prototype.onMouseMove = function (distance, _source) {
        this.calculateNewModelState(distance);
        this.updateView();
        this.lineControlSetPosition();
    };
    RulerBaseIndentControl.prototype.onEscPress = function () {
        this.currModelState = this.prevModelState.clone();
        this.finishHandle();
    };
    RulerBaseIndentControl.prototype.finishHandle = function () {
        this.controls.lineControl.hide();
        this.shadow.dispose();
    };
    RulerBaseIndentControl.prototype.lineControlSetPosition = function () {
        this.controls.lineControl.setPosition(this.viewState, vertical_line_1.SnapTo.LeftSide);
    };
    return RulerBaseIndentControl;
}(base_1.RulerBase));
exports.RulerBaseIndentControl = RulerBaseIndentControl;
