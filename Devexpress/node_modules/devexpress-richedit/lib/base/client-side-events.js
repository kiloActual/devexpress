"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ClientSideEvents = (function () {
    function ClientSideEvents(owner) {
        this.owner = owner;
    }
    ClientSideEvents.prototype.raiseHyperlinkClick = function (evt, field) {
        return this.owner.raiseHyperlinkClick(evt, field);
    };
    ClientSideEvents.prototype.raiseKeyDown = function (evt) {
        return this.owner.raiseKeyDown(evt);
    };
    ClientSideEvents.prototype.raiseKeyUp = function (evt) {
        this.owner.raiseKeyUp(evt);
    };
    ClientSideEvents.prototype.raisePointerDown = function (evt) {
        return this.owner.raisePointerDown(evt);
    };
    ClientSideEvents.prototype.raisePointerUp = function (evt) {
        return this.owner.raisePointerUp(evt);
    };
    ClientSideEvents.prototype.raiseContentInserted = function (subDocumentId, interval) {
        this.owner.raiseContentInserted(subDocumentId, interval);
    };
    ClientSideEvents.prototype.raiseContentRemoved = function (subDocumentId, interval, removedText) {
        this.owner.raiseContentRemoved(subDocumentId, interval, removedText);
    };
    ClientSideEvents.prototype.raiseCharacterPropertiesChanged = function (subDocumentId, interval) {
        this.owner.raiseCharacterPropertiesChanged(subDocumentId, interval);
    };
    ClientSideEvents.prototype.raiseParagraphPropertiesChanged = function (subDocumentId, paragraphIndex) {
        this.owner.raiseParagraphPropertiesChanged(subDocumentId, paragraphIndex);
    };
    ClientSideEvents.prototype.raiseAutoCorrect = function (text, interval) {
        return this.owner.raiseAutoCorrect(text, interval);
    };
    ClientSideEvents.prototype.raiseDocumentChanged = function () {
        this.owner.raiseDocumentChanged();
    };
    ClientSideEvents.prototype.raiseDocumentFormatted = function (pageCount) {
        this.owner.raiseDocumentFormatted(pageCount);
    };
    ClientSideEvents.prototype.raiseActiveSubDocumentChanged = function () {
        this.owner.raiseActiveSubDocumentChanged();
    };
    ClientSideEvents.prototype.raiseSelectionChanged = function () {
        this.owner.raiseSelectionChanged();
    };
    ClientSideEvents.prototype.raiseDocumentLoaded = function () {
        this.owner.raiseDocumentLoaded();
    };
    ClientSideEvents.prototype.raiseGotFocus = function () {
        this.owner.raiseGotFocus();
    };
    ClientSideEvents.prototype.raiseLostFocus = function () {
        this.owner.raiseLostFocus();
    };
    return ClientSideEvents;
}());
exports.ClientSideEvents = ClientSideEvents;
