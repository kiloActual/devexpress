"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var table_units_1 = require("../../../../../../core/model/tables/secondary-structures/table-units");
var pair_1 = require("@devexpress/utils/lib/class/pair");
var unit_converter_1 = require("@devexpress/utils/lib/class/unit-converter");
var base_formatter_1 = require("../../base-formatter");
var CCF_TableWidthUnit = (function (_super) {
    tslib_1.__extends(CCF_TableWidthUnit, _super);
    function CCF_TableWidthUnit() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CCF_TableWidthUnit.prototype.isHandleObject = function (obj) {
        return obj instanceof table_units_1.TableWidthUnit;
    };
    CCF_TableWidthUnit.prototype.getShortDescription = function (_config) {
        var list = [
            new pair_1.Pair("", table_units_1.TableWidthUnitType[this.curr.type] + ":"),
        ];
        if (this.curr.type == table_units_1.TableWidthUnitType.FiftiethsOfPercent)
            list.push(new pair_1.Pair("", this.curr.value + "(" + this.curr.value / table_units_1.TableWidthUnit.MAX_PERCENT_WIDTH * 100 + "%)"));
        else
            list.push(new pair_1.Pair("", this.curr.value + "(" + unit_converter_1.UnitConverter.twipsToPixels(this.curr.value) + "px)"));
        return this.stdShow(new base_formatter_1.StdProps(list).showAsLine());
    };
    CCF_TableWidthUnit._foo = base_formatter_1.BaseFormatter.addToFormattersList(new CCF_TableWidthUnit());
    return CCF_TableWidthUnit;
}(base_formatter_1.BaseFormatter));
exports.CCF_TableWidthUnit = CCF_TableWidthUnit;
