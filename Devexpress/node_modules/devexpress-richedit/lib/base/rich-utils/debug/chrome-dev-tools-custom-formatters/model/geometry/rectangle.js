"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var pair_1 = require("@devexpress/utils/lib/class/pair");
var rectangle_1 = require("@devexpress/utils/lib/geometry/rectangle");
var base_formatter_1 = require("../../base-formatter");
var elements_1 = require("../../elements");
var CCF_Rectangle = (function (_super) {
    tslib_1.__extends(CCF_Rectangle, _super);
    function CCF_Rectangle() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CCF_Rectangle.prototype.isHandleObject = function (obj) {
        return obj instanceof rectangle_1.Rectangle;
    };
    CCF_Rectangle.prototype.getShortDescription = function (_config) {
        return new elements_1.DivElement().setText("[" + this.toFixed(this.curr.x) + ", " + this.toFixed(this.curr.y) + ", " + this.toFixed(this.curr.width) + ", " + this.toFixed(this.curr.height) + "]");
    };
    CCF_Rectangle.prototype.availableFullDescription = function (_config) {
        return true;
    };
    CCF_Rectangle.prototype.getFullDescription = function (_config) {
        return this.stdShow(new base_formatter_1.StdProps([
            new pair_1.Pair("x", this.toFixed(this.curr.x)),
            new pair_1.Pair("y", this.toFixed(this.curr.y)),
            new pair_1.Pair("width", this.toFixed(this.curr.width)),
            new pair_1.Pair("height", this.toFixed(this.curr.height)),
            new pair_1.Pair("maxX", this.toFixed(this.curr.right)),
            new pair_1.Pair("maxY", this.toFixed(this.curr.bottom)),
            new pair_1.Pair("center", this.curr.center)
        ])
            .showAsColumn());
    };
    CCF_Rectangle._foo = base_formatter_1.BaseFormatter.addToFormattersList(new CCF_Rectangle());
    return CCF_Rectangle;
}(base_formatter_1.BaseFormatter));
exports.CCF_Rectangle = CCF_Rectangle;
