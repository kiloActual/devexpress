"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var layout_row_1 = require("../../../../../core/layout/main-structures/layout-row");
var log_1 = require("../../../../../core/rich-utils/debug/logger/base-logger/log");
var pair_1 = require("@devexpress/utils/lib/class/pair");
var base_formatter_1 = require("../base-formatter");
var CCF_LayoutRow = (function (_super) {
    tslib_1.__extends(CCF_LayoutRow, _super);
    function CCF_LayoutRow() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CCF_LayoutRow.prototype.isHandleObject = function (obj) {
        return obj instanceof layout_row_1.LayoutRow;
    };
    CCF_LayoutRow.prototype.getShortDescription = function (_config) {
        return this.stdShow(new base_formatter_1.StdProps([
            new pair_1.Pair("offset", this.curr.columnOffset),
        ]).showAsLine());
    };
    CCF_LayoutRow.prototype.availableFullDescription = function (_config) {
        return true;
    };
    CCF_LayoutRow.prototype.getFullDescription = function (_config) {
        return this.stdShow(new base_formatter_1.StdProps([
            new pair_1.Pair("offset", this.curr.columnOffset),
            new pair_1.Pair("bounds", this.curr.createRectangle()),
            new pair_1.Pair("boxes", this.curr.boxes),
            new pair_1.Pair("tableCellInfo", this.curr.tableCellInfo),
            new pair_1.Pair("numberingListBox", this.curr.numberingListBox),
            new pair_1.Pair("flags", log_1.Log.mask(layout_row_1.LayoutRowStateFlags, this.curr.flags.getValue(), layout_row_1.LayoutRowStateFlags.NormallyEnd)),
            new pair_1.Pair("bookmarkBoxes", this.curr.bookmarkBoxes),
            new pair_1.Pair("baseLine", this.curr.baseLine),
        ]).showAsColumn());
    };
    CCF_LayoutRow._foo = base_formatter_1.BaseFormatter.addToFormattersList(new CCF_LayoutRow());
    return CCF_LayoutRow;
}(base_formatter_1.BaseFormatter));
exports.CCF_LayoutRow = CCF_LayoutRow;
