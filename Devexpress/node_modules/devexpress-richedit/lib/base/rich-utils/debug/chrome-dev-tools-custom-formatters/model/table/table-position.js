"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var table_1 = require("../../../../../../core/model/tables/main-structures/table");
var pair_1 = require("@devexpress/utils/lib/class/pair");
var base_formatter_1 = require("../../base-formatter");
var CCF_TablePositionIndexes = (function (_super) {
    tslib_1.__extends(CCF_TablePositionIndexes, _super);
    function CCF_TablePositionIndexes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CCF_TablePositionIndexes.prototype.isHandleObject = function (obj) {
        return obj instanceof table_1.TablePositionIndexes;
    };
    CCF_TablePositionIndexes.prototype.getShortDescription = function (_config) {
        var list = [];
        if (this.curr instanceof table_1.TablePosition)
            list.push(new pair_1.Pair("tableI", this.curr.table.index));
        list.push(new pair_1.Pair("rowI", this.curr.rowIndex));
        list.push(new pair_1.Pair("cellI", this.curr.cellIndex));
        return this.stdShow(new base_formatter_1.StdProps(list).showAsLine());
    };
    CCF_TablePositionIndexes.prototype.availableFullDescription = function (_config) {
        return this.curr instanceof table_1.TablePosition;
    };
    CCF_TablePositionIndexes.prototype.getFullDescription = function (_config) {
        var curr = this.curr;
        var list = [
            new pair_1.Pair("tableIndex", curr.table),
            new pair_1.Pair("rowIndex", curr.rowIndex),
            new pair_1.Pair("cellIndex", curr.cellIndex),
            new pair_1.Pair("row", curr.row),
            new pair_1.Pair("cell", curr.cell),
        ];
        return this.stdShow(new base_formatter_1.StdProps(list).showAsColumn());
    };
    CCF_TablePositionIndexes._foo = base_formatter_1.BaseFormatter.addToFormattersList(new CCF_TablePositionIndexes());
    return CCF_TablePositionIndexes;
}(base_formatter_1.BaseFormatter));
exports.CCF_TablePositionIndexes = CCF_TablePositionIndexes;
