"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var table_1 = require("../../../../../../core/model/tables/main-structures/table");
var table_base_structures_1 = require("../../../../../../core/model/tables/secondary-structures/table-base-structures");
var log_1 = require("../../../../../../core/rich-utils/debug/logger/base-logger/log");
var pair_1 = require("@devexpress/utils/lib/class/pair");
var number_1 = require("@devexpress/utils/lib/utils/map/number");
var base_formatter_1 = require("../../base-formatter");
var CCF_Table = (function (_super) {
    tslib_1.__extends(CCF_Table, _super);
    function CCF_Table() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CCF_Table.prototype.isHandleObject = function (obj) {
        return obj instanceof table_1.Table;
    };
    CCF_Table.prototype.getShortDescription = function (_config) {
        var list = [
            new pair_1.Pair("", this.curr.index + ":"),
            new pair_1.Pair("lvl", this.curr.nestedLevel),
            new pair_1.Pair("rows", this.curr.rows.length)
        ];
        return this.stdShow(new base_formatter_1.StdProps(list).showAsLine());
    };
    CCF_Table.prototype.availableFullDescription = function (_config) {
        return true;
    };
    CCF_Table.prototype.getFullDescription = function (_config) {
        var list = [
            new pair_1.Pair("index", this.curr.index),
            new pair_1.Pair("nestedLevel", this.curr.nestedLevel),
            new pair_1.Pair("interval", this.curr.interval),
            new pair_1.Pair("preferredWidth", this.curr.preferredWidth),
            new pair_1.Pair("properties", this.curr.properties),
            new pair_1.Pair("text", this.getRawText(this.getSubDocument().getText(this.curr.interval)).setLen(30)),
            new pair_1.Pair("runsOnCell", this.getSubDocument().getRunsByInterval(this.curr.interval)),
            new pair_1.Pair("lookTypes", log_1.Log.mask(table_base_structures_1.TableLookTypes, this.curr.lookTypes, table_base_structures_1.TableLookTypes.None)),
            new pair_1.Pair("style", this.curr.style),
            new pair_1.Pair("rows", this.curr.rows),
        ];
        if (this.curr.nestedLevel > 0)
            list.push(new pair_1.Pair("parentCell", this.curr.parentCell));
        return this.stdShow(new base_formatter_1.StdProps(list).showAsColumn());
    };
    CCF_Table.prototype.getSubDocument = function () {
        var _this = this;
        return number_1.NumberMapUtils.elementBy(this.model.subDocuments, function (subDoc) {
            return subDoc.tables[_this.curr.index] == _this.curr;
        });
    };
    CCF_Table._foo = base_formatter_1.BaseFormatter.addToFormattersList(new CCF_Table());
    return CCF_Table;
}(base_formatter_1.BaseFormatter));
exports.CCF_Table = CCF_Table;
