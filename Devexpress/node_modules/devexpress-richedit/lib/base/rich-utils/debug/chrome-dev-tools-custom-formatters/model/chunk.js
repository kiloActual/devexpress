"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var chunk_1 = require("../../../../../core/model/chunk");
var pair_1 = require("@devexpress/utils/lib/class/pair");
var base_formatter_1 = require("../base-formatter");
var short_string_1 = require("../short-string");
var CCF_Chunk = (function (_super) {
    tslib_1.__extends(CCF_Chunk, _super);
    function CCF_Chunk() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CCF_Chunk.prototype.isHandleObject = function (obj) {
        return obj instanceof chunk_1.Chunk;
    };
    CCF_Chunk.prototype.getShortDescription = function (_config) {
        var list = [
            new pair_1.Pair("", "[" + this.curr.startLogPosition.value + ", " + this.curr.textBuffer.length + "]"),
            new pair_1.Pair("", new short_string_1.ShortString(this.curr.textBuffer, 20)),
        ];
        if (this.curr.isLast)
            list.push(new pair_1.Pair("", "last"));
        return this.stdShow(new base_formatter_1.StdProps(list).showAsLine());
    };
    CCF_Chunk.prototype.availableFullDescription = function (_config) {
        return true;
    };
    CCF_Chunk.prototype.getFullDescription = function (_config) {
        var list = [
            new pair_1.Pair("startPos", this.curr.startLogPosition.value),
            new pair_1.Pair("endPos", this.curr.getEndPosition()),
            new pair_1.Pair("length", this.curr.textBuffer.length),
            new pair_1.Pair("runs", this.curr.textRuns),
            new pair_1.Pair("text", this.getRawText(this.curr.textBuffer).setLen(30)),
        ];
        if (this.curr.isLast)
            list.push(new pair_1.Pair("isLast", this.curr.isLast));
        return this.stdShow(new base_formatter_1.StdProps(list).showAsColumn());
    };
    CCF_Chunk._foo = base_formatter_1.BaseFormatter.addToFormattersList(new CCF_Chunk());
    return CCF_Chunk;
}(base_formatter_1.BaseFormatter));
exports.CCF_Chunk = CCF_Chunk;
