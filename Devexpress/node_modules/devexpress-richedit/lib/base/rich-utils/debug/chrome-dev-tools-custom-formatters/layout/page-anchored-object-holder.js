"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var page_anchored_object_holder_1 = require("../../../../../core/layout-formatter/floating/page-anchored-object-holder");
var pair_1 = require("@devexpress/utils/lib/class/pair");
var number_1 = require("@devexpress/utils/lib/utils/map/number");
var base_formatter_1 = require("../base-formatter");
var CCF_PageAnchoredObjectHolder = (function (_super) {
    tslib_1.__extends(CCF_PageAnchoredObjectHolder, _super);
    function CCF_PageAnchoredObjectHolder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CCF_PageAnchoredObjectHolder.prototype.isHandleObject = function (obj) {
        return obj instanceof page_anchored_object_holder_1.PageAnchoredObjectHolder;
    };
    CCF_PageAnchoredObjectHolder.prototype.getShortDescription = function (_config) {
        return this.stdShow(new base_formatter_1.StdProps(this.getList()).showAsLine().setStdNumElements());
    };
    CCF_PageAnchoredObjectHolder.prototype.availableFullDescription = function (_config) {
        return !number_1.NumberMapUtils.isEmpty(this.curr.objects);
    };
    CCF_PageAnchoredObjectHolder.prototype.getFullDescription = function (_config) {
        return this.stdShow(new base_formatter_1.StdProps(this.getList()).showAsColumn());
    };
    CCF_PageAnchoredObjectHolder.prototype.getList = function () {
        return this.mapNumberAsKeyToListOfPairs(this.curr.objects, function (key) { return key; }, function (key, obj) { return new pair_1.Pair(key.toString(), obj); });
    };
    CCF_PageAnchoredObjectHolder._foo = base_formatter_1.BaseFormatter.addToFormattersList(new CCF_PageAnchoredObjectHolder());
    return CCF_PageAnchoredObjectHolder;
}(base_formatter_1.BaseFormatter));
exports.CCF_PageAnchoredObjectHolder = CCF_PageAnchoredObjectHolder;
