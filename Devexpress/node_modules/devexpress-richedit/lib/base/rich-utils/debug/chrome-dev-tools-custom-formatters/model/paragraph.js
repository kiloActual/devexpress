"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var paragraph_1 = require("../../../../../core/model/paragraph/paragraph");
var pair_1 = require("@devexpress/utils/lib/class/pair");
var base_formatter_1 = require("../base-formatter");
var CCF_Paragraph = (function (_super) {
    tslib_1.__extends(CCF_Paragraph, _super);
    function CCF_Paragraph() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CCF_Paragraph.prototype.isHandleObject = function (obj) {
        return obj instanceof paragraph_1.Paragraph;
    };
    CCF_Paragraph.prototype.getShortDescription = function (_config) {
        return this.stdShow(new base_formatter_1.StdProps([
            new pair_1.Pair("pos", this.curr.startLogPosition.value),
            new pair_1.Pair("len", this.curr.length),
        ]).showAsLine());
    };
    CCF_Paragraph.prototype.availableFullDescription = function (_config) {
        return true;
    };
    CCF_Paragraph.prototype.getFullDescription = function (_config) {
        return this.stdShow(new base_formatter_1.StdProps([
            new pair_1.Pair("position", this.curr.startLogPosition.value),
            new pair_1.Pair("length", this.curr.length),
            new pair_1.Pair("endPos", this.curr.getEndPosition()),
            new pair_1.Pair("numberingListIndex", this.curr.numberingListIndex),
            new pair_1.Pair("listLevelIndex", this.curr.listLevelIndex),
            new pair_1.Pair("maskedParagraphProperties", this.curr.maskedParagraphProperties),
            new pair_1.Pair("tabs", this.curr.tabs),
            new pair_1.Pair("subDocument", this.curr.subDocument),
            new pair_1.Pair("text", this.getSubDocumentText(this.curr.subDocument.id, this.curr.interval).setLen(60)),
        ]).showAsColumn());
    };
    CCF_Paragraph._foo = base_formatter_1.BaseFormatter.addToFormattersList(new CCF_Paragraph());
    return CCF_Paragraph;
}(base_formatter_1.BaseFormatter));
exports.CCF_Paragraph = CCF_Paragraph;
