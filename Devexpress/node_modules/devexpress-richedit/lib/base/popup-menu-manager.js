"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layout_position_creator_1 = require("../core/layout-engine/layout-position-creator");
var document_layout_details_level_1 = require("../core/layout/document-layout-details-level");
var layout_point_1 = require("../core/layout/layout-point");
var point_1 = require("@devexpress/utils/lib/geometry/point");
var dom_1 = require("@devexpress/utils/lib/utils/dom");
var PopupMenuManager = (function () {
    function PopupMenuManager(controlOwner, viewManager, measurer, selection) {
        this.rejectNextShowContextMenuId = null;
        this.controlOwner = controlOwner;
        this.viewManager = viewManager;
        this.measurer = measurer;
        this.selection = selection;
    }
    PopupMenuManager.prototype.setSelection = function (selection) {
        this.selection = selection;
    };
    PopupMenuManager.prototype.rejectNextShowContextMenu = function () {
        var _this = this;
        this.rejectNextShowContextMenuId = setTimeout(function () {
            _this.rejectNextShowContextMenuId = null;
        }, 300);
    };
    PopupMenuManager.prototype.showByKey = function () {
        var _this = this;
        this.controlOwner.showPopupMenu(function (_contextMenuBar) {
            var point = _this.getContextMenuAbsPoint(_this.selection.lastSelectedInterval.start);
            return point ? point : _this.undefinedPoint();
        });
    };
    PopupMenuManager.prototype.showByMouseClick = function (point) {
        var _this = this;
        this.controlOwner.showPopupMenu(function (contextMenuBar) {
            if (contextMenuBar.isSpellingMenu) {
                var layoutPoint = _this.getContextMenuAbsPoint(_this.selection.lastSelectedInterval.start);
                if (layoutPoint)
                    return layoutPoint;
            }
            return point;
        });
    };
    PopupMenuManager.prototype.showByTouchClick = function () {
        var _this = this;
        if (this.rejectNextShowContextMenuId !== null)
            return;
        this.controlOwner.showPopupMenu(function (_contextMenuBar) {
            var point = _this.getContextMenuAbsPoint(_this.selection.lastSelectedInterval.start);
            return point ? point : _this.undefinedPoint();
        });
    };
    PopupMenuManager.prototype.undefinedPoint = function () {
        return new point_1.Point(dom_1.DomUtils.getAbsolutePositionX(this.viewManager.canvas), dom_1.DomUtils.getAbsolutePositionY(this.viewManager.canvas));
    };
    PopupMenuManager.prototype.getContextMenuAbsPoint = function (lastSelectedIntervalStartPosition) {
        var subDocument = this.selection.activeSubDocument;
        var layoutPosition = subDocument.isMain() ?
            new layout_position_creator_1.LayoutPositionMainSubDocumentCreator(this.selection.layout, subDocument, lastSelectedIntervalStartPosition, document_layout_details_level_1.DocumentLayoutDetailsLevel.Character)
                .create(new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(true)) :
            new layout_position_creator_1.LayoutPositionOtherSubDocumentCreator(this.selection.layout, subDocument, lastSelectedIntervalStartPosition, this.selection.pageIndex, document_layout_details_level_1.DocumentLayoutDetailsLevel.Box)
                .create(new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(true));
        if (!layoutPosition)
            return null;
        var layoutPoint = new layout_point_1.LayoutPoint(layoutPosition.pageIndex, layoutPosition.getLayoutX(this.measurer), layoutPosition.getLayoutY(document_layout_details_level_1.DocumentLayoutDetailsLevel.Row) + layoutPosition.row.height);
        if (this.viewManager.canvasManager.isVisiblePosition(layoutPoint)) {
            var pageElement = this.viewManager.cache[layoutPoint.pageIndex].page;
            return layoutPoint.offset(dom_1.DomUtils.getAbsolutePositionX(pageElement), dom_1.DomUtils.getAbsolutePositionY(pageElement));
        }
        return null;
    };
    return PopupMenuManager;
}());
exports.PopupMenuManager = PopupMenuManager;
