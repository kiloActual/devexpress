"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var section_property_descriptor_1 = require("../../core/model/section/section-property-descriptor");
var input_position_base_1 = require("../../core/selection/input-position-base");
var search_1 = require("@devexpress/utils/lib/utils/search");
var InputPosition = (function (_super) {
    tslib_1.__extends(InputPosition, _super);
    function InputPosition(selection) {
        var _this = _super.call(this) || this;
        _this.selection = selection;
        _this.setIntervals(_this.selection.getState().intervalsInfo);
        _this.reset();
        return _this;
    }
    InputPosition.prototype.reset = function () {
        this.setIntervals(this.selection.getState().intervalsInfo);
        this.resetReturnValues();
    };
    InputPosition.prototype.resetSectionMergedProperties = function () {
        this.mergedSectionPropertiesRaw = null;
        this.mergedSectionPropertiesFull = null;
    };
    InputPosition.prototype.getMergedSectionPropertiesRaw = function () {
        if (!this.mergedSectionPropertiesRaw) {
            var interval = this.intervalsInfo.interval;
            var intervalStartPosition = interval.start;
            var intervalEndPosition = interval.end;
            var sections = this.model.sections;
            var sectionIndex = search_1.SearchUtils.normedInterpolationIndexOf(sections, function (s) { return s.startLogPosition.value; }, intervalStartPosition);
            this.mergedSectionPropertiesRaw = sections[sectionIndex++].sectionProperties.clone();
            for (var section; (section = sections[sectionIndex]) && (section.startLogPosition.value < intervalEndPosition); sectionIndex++)
                input_position_base_1.InputPositionBase.mergePropertiesRaw(this.mergedSectionPropertiesRaw, section.sectionProperties, section_property_descriptor_1.SectionPropertyDescriptor.ALL_FIELDS);
        }
        return this.mergedSectionPropertiesRaw;
    };
    InputPosition.prototype.getMergedSectionPropertiesFull = function () {
        if (!this.mergedSectionPropertiesFull)
            this.mergedSectionPropertiesFull = input_position_base_1.InputPositionBase.mergePropertiesFull(this.getMergedSectionPropertiesRaw(), section_property_descriptor_1.SectionPropertyDescriptor.ALL_FIELDS);
        return this.mergedSectionPropertiesFull;
    };
    InputPosition.prototype.resetReturnValues = function () {
        _super.prototype.resetReturnValues.call(this);
        this.mergedSectionPropertiesRaw = null;
        this.mergedSectionPropertiesFull = null;
    };
    return InputPosition;
}(input_position_base_1.InputPositionBase));
exports.InputPosition = InputPosition;
