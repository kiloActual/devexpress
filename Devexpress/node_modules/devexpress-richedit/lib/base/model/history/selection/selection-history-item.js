"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var history_item_1 = require("../../../../core/model/history/base/history-item");
var flag_1 = require("@devexpress/utils/lib/class/flag");
var history_item_direction_1 = require("./history-item-direction");
var SelectionHistoryItem = (function (_super) {
    tslib_1.__extends(SelectionHistoryItem, _super);
    function SelectionHistoryItem(modelManipulator, selection, oldState, newState, directionValue) {
        if (directionValue === void 0) { directionValue = history_item_direction_1.HistoryItemDirection.OnRedoAndUndo; }
        var _this = _super.call(this, modelManipulator) || this;
        _this.selection = selection;
        _this.oldState = oldState;
        _this.newState = newState;
        _this.directionFlag = new flag_1.Flag(directionValue);
        return _this;
    }
    SelectionHistoryItem.prototype.canBeMerged = function () {
        return true;
    };
    SelectionHistoryItem.prototype.redo = function () {
        if (this.directionFlag.get(history_item_direction_1.HistoryItemDirection.OnRedo))
            this.selection.setState(this.newState);
    };
    SelectionHistoryItem.prototype.undo = function () {
        if (this.directionFlag.get(history_item_direction_1.HistoryItemDirection.OnUndo) &&
            this.selection.activeSubDocument.id == this.oldState.intervalsInfo.subDocument.id)
            this.selection.setState(this.oldState);
    };
    return SelectionHistoryItem;
}(history_item_1.HistoryItem));
exports.SelectionHistoryItem = SelectionHistoryItem;
