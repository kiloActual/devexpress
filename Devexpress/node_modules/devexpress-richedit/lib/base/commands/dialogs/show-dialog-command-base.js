"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var browser_1 = require("@devexpress/utils/lib/browser");
var command_base_1 = require("../command-base");
var command_states_1 = require("../command-states");
var ShowDialogCommandBase = (function (_super) {
    tslib_1.__extends(ShowDialogCommandBase, _super);
    function ShowDialogCommandBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ShowDialogCommandBase.prototype.getState = function () {
        return new command_states_1.SimpleCommandState(this.isEnabled());
    };
    ShowDialogCommandBase.prototype.executeCore = function (state, options) {
        var _this = this;
        var params = this.createParameters(options);
        var initParams = params.clone();
        params.applyConverter(this.control.uiUnitConverter.twipsToUI);
        this.control.owner.showDialog(this.getDialogName(), params, function (result) {
            if (result) {
                result.applyConverter(_this.control.uiUnitConverter.UIToTwips);
                _this.control.beginUpdate();
                _this.applyParameters(state, result, initParams);
                _this.control.barHolder.forceUpdate(_this.getRelatedCommands());
                _this.control.endUpdate();
            }
            if (!browser_1.Browser.TouchUI && _this.isModal())
                _this.control.focusManager.captureFocus();
        }, function () {
            if (!browser_1.Browser.TouchUI)
                _this.control.focusManager.captureFocus();
            _this.afterClosing(options);
        }, this.isModal());
        return true;
    };
    ShowDialogCommandBase.prototype.applyParameters = function (_state, _newParameters, _oldParameters) {
        return false;
    };
    ShowDialogCommandBase.prototype.afterClosing = function (_options) { };
    ShowDialogCommandBase.prototype.isModal = function () {
        return true;
    };
    return ShowDialogCommandBase;
}(command_base_1.CommandBase));
exports.ShowDialogCommandBase = ShowDialogCommandBase;
var DialogParametersBase = (function () {
    function DialogParametersBase() {
    }
    DialogParametersBase.prototype.copyFrom = function (_obj) { };
    return DialogParametersBase;
}());
exports.DialogParametersBase = DialogParametersBase;
var DialogTitleText;
(function (DialogTitleText) {
    DialogTitleText[DialogTitleText["SaveAsFile"] = 0] = "SaveAsFile";
    DialogTitleText[DialogTitleText["OpenFile"] = 1] = "OpenFile";
    DialogTitleText[DialogTitleText["Font"] = 2] = "Font";
    DialogTitleText[DialogTitleText["Paragraph"] = 3] = "Paragraph";
    DialogTitleText[DialogTitleText["PageSetup"] = 4] = "PageSetup";
    DialogTitleText[DialogTitleText["Columns"] = 5] = "Columns";
    DialogTitleText[DialogTitleText["InsertImage"] = 6] = "InsertImage";
    DialogTitleText[DialogTitleText["Error"] = 7] = "Error";
})(DialogTitleText = exports.DialogTitleText || (exports.DialogTitleText = {}));
