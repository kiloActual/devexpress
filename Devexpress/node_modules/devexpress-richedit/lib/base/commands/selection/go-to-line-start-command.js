"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var layout_position_creator_1 = require("../../../core/layout-engine/layout-position-creator");
var document_layout_details_level_1 = require("../../../core/layout/document-layout-details-level");
var selection_command_base_1 = require("./selection-command-base");
var GoToLineStartCommandBase = (function (_super) {
    tslib_1.__extends(GoToLineStartCommandBase, _super);
    function GoToLineStartCommandBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GoToLineStartCommandBase.prototype.getStartPosition = function () {
        var selection = this.selection;
        var position = selection.forwardDirection ? selection.lastSelectedInterval.end : selection.lastSelectedInterval.start;
        var subDocument = this.selection.activeSubDocument;
        var layoutPosition = (subDocument.isMain()
            ? new layout_position_creator_1.LayoutPositionMainSubDocumentCreator(this.control.layout, subDocument, position, document_layout_details_level_1.DocumentLayoutDetailsLevel.Character)
            : new layout_position_creator_1.LayoutPositionOtherSubDocumentCreator(this.control.layout, subDocument, position, selection.pageIndex, document_layout_details_level_1.DocumentLayoutDetailsLevel.Character))
            .create(new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(selection.endOfLine), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(true));
        if (!layoutPosition)
            return -1;
        return layoutPosition.getLogPosition(document_layout_details_level_1.DocumentLayoutDetailsLevel.Row);
    };
    return GoToLineStartCommandBase;
}(selection_command_base_1.SelectionCommandBase));
exports.GoToLineStartCommandBase = GoToLineStartCommandBase;
var GoToLineStartCommand = (function (_super) {
    tslib_1.__extends(GoToLineStartCommand, _super);
    function GoToLineStartCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GoToLineStartCommand.prototype.executeCore = function (_state, _options) {
        var pos = this.getStartPosition();
        if (pos < 0)
            return false;
        this.selection.deprecatedSetSelection(pos, pos, false, -1, true);
        return true;
    };
    return GoToLineStartCommand;
}(GoToLineStartCommandBase));
exports.GoToLineStartCommand = GoToLineStartCommand;
var ExtendGoToLineStartCommand = (function (_super) {
    tslib_1.__extends(ExtendGoToLineStartCommand, _super);
    function ExtendGoToLineStartCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ExtendGoToLineStartCommand.prototype.executeCore = function (_state, _options) {
        var pos = this.getStartPosition();
        if (pos < 0)
            return false;
        this.selection.changeState(function (newState) { return newState.extendLastInterval(pos).resetKeepX().setEndOfLine(false); });
        return true;
    };
    return ExtendGoToLineStartCommand;
}(GoToLineStartCommandBase));
exports.ExtendGoToLineStartCommand = ExtendGoToLineStartCommand;
