"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var command_base_1 = require("../command-base");
var command_states_1 = require("../command-states");
var GoToDocumentStartCommandBase = (function (_super) {
    tslib_1.__extends(GoToDocumentStartCommandBase, _super);
    function GoToDocumentStartCommandBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GoToDocumentStartCommandBase.prototype.getState = function () {
        return new command_states_1.SimpleCommandState(this.isEnabled());
    };
    GoToDocumentStartCommandBase.prototype.executeCore = function (_state, _options) {
        if (this.control.layout.validPageCount < 1)
            this.control.layoutFormatterManager.forceFormatPage(0);
        this.setSelection(this.control.layout.pages[0].getPosition());
        return true;
    };
    GoToDocumentStartCommandBase.prototype.isEnabledInReadOnlyMode = function () {
        return true;
    };
    return GoToDocumentStartCommandBase;
}(command_base_1.CommandBase));
exports.GoToDocumentStartCommandBase = GoToDocumentStartCommandBase;
var GoToDocumentStartCommand = (function (_super) {
    tslib_1.__extends(GoToDocumentStartCommand, _super);
    function GoToDocumentStartCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GoToDocumentStartCommand.prototype.setSelection = function (position) {
        this.selection.deprecatedSetSelection(position, position, false, -1, true);
    };
    return GoToDocumentStartCommand;
}(GoToDocumentStartCommandBase));
exports.GoToDocumentStartCommand = GoToDocumentStartCommand;
var ExtendGoToDocumentStartCommand = (function (_super) {
    tslib_1.__extends(ExtendGoToDocumentStartCommand, _super);
    function ExtendGoToDocumentStartCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ExtendGoToDocumentStartCommand.prototype.setSelection = function (position) {
        this.selection.changeState(function (newState) { return newState.extendLastInterval(position).resetKeepX().setEndOfLine(false); });
    };
    return ExtendGoToDocumentStartCommand;
}(GoToDocumentStartCommandBase));
exports.ExtendGoToDocumentStartCommand = ExtendGoToDocumentStartCommand;
