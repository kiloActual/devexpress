"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var layout_position_creator_1 = require("../../../core/layout-engine/layout-position-creator");
var document_layout_details_level_1 = require("../../../core/layout/document-layout-details-level");
var fixed_1 = require("@devexpress/utils/lib/intervals/fixed");
var selection_command_base_1 = require("./selection-command-base");
var SelectLineCommand = (function (_super) {
    tslib_1.__extends(SelectLineCommand, _super);
    function SelectLineCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SelectLineCommand.prototype.executeCore = function (_state, options) {
        var selection = this.selection;
        var subDocument = this.selection.activeSubDocument;
        var clickLayoutPosition = (subDocument.isMain()
            ? new layout_position_creator_1.LayoutPositionMainSubDocumentCreator(this.control.layout, subDocument, options.param, document_layout_details_level_1.DocumentLayoutDetailsLevel.Character)
            : new layout_position_creator_1.LayoutPositionOtherSubDocumentCreator(this.control.layout, subDocument, options.param, selection.pageIndex, document_layout_details_level_1.DocumentLayoutDetailsLevel.Character))
            .create(new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(true));
        if (!clickLayoutPosition)
            return false;
        var clickRowEndBox = clickLayoutPosition.row.boxes[clickLayoutPosition.row.boxes.length - 1];
        var clickRowStartPosition = clickLayoutPosition.getRelatedSubDocumentPagePosition() + clickLayoutPosition.pageArea.pageOffset + clickLayoutPosition.column.pageAreaOffset + clickLayoutPosition.row.columnOffset;
        var clickRowEndPosition = clickRowStartPosition + clickRowEndBox.rowOffset + clickRowEndBox.getLength();
        this.setSelection(clickRowStartPosition, clickRowEndPosition);
        return true;
    };
    SelectLineCommand.prototype.setSelection = function (startPosition, endPosition) {
        this.selection.deprecatedSetSelection(startPosition, endPosition, false, -1, true);
    };
    return SelectLineCommand;
}(selection_command_base_1.SelectionCommandBase));
exports.SelectLineCommand = SelectLineCommand;
var AddSelectedLineCommandNoUpdateControlState = (function (_super) {
    tslib_1.__extends(AddSelectedLineCommandNoUpdateControlState, _super);
    function AddSelectedLineCommandNoUpdateControlState() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AddSelectedLineCommandNoUpdateControlState.prototype.setSelection = function (startPosition, endPosition) {
        this.selection.changeState(function (newState) { return newState.addInterval(fixed_1.FixedInterval.fromPositions(startPosition, endPosition))
            .resetKeepX().setEndOfLine(false); });
    };
    return AddSelectedLineCommandNoUpdateControlState;
}(SelectLineCommand));
exports.AddSelectedLineCommandNoUpdateControlState = AddSelectedLineCommandNoUpdateControlState;
var ExtendSelectLineCommand = (function (_super) {
    tslib_1.__extends(ExtendSelectLineCommand, _super);
    function ExtendSelectLineCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ExtendSelectLineCommand.prototype.executeCore = function (_state, options) {
        var clickPosition = options.param;
        var selection = this.selection;
        var currentInterval = selection.lastSelectedInterval;
        var intervalEnd = currentInterval.end;
        if (intervalEnd == this.selection.activeSubDocument.getDocumentEndPosition())
            intervalEnd--;
        var subDocument = this.selection.activeSubDocument;
        var startSelectionRowStartLayoutPosition = (subDocument.isMain()
            ? new layout_position_creator_1.LayoutPositionMainSubDocumentCreator(this.control.layout, subDocument, currentInterval.start, document_layout_details_level_1.DocumentLayoutDetailsLevel.Character)
            : new layout_position_creator_1.LayoutPositionOtherSubDocumentCreator(this.control.layout, subDocument, currentInterval.start, selection.pageIndex, document_layout_details_level_1.DocumentLayoutDetailsLevel.Character))
            .create(new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false));
        if (!startSelectionRowStartLayoutPosition)
            return false;
        var startSelectionEndBox = startSelectionRowStartLayoutPosition.row.boxes[startSelectionRowStartLayoutPosition.row.boxes.length - 1];
        var endSelectionRowStartLayoutPosition = (subDocument.isMain()
            ? new layout_position_creator_1.LayoutPositionMainSubDocumentCreator(this.control.layout, subDocument, intervalEnd, document_layout_details_level_1.DocumentLayoutDetailsLevel.Character)
            : new layout_position_creator_1.LayoutPositionOtherSubDocumentCreator(this.control.layout, subDocument, intervalEnd, selection.pageIndex, document_layout_details_level_1.DocumentLayoutDetailsLevel.Character))
            .create(new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(true), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false));
        if (!endSelectionRowStartLayoutPosition)
            return false;
        var endSelectionEndBox = endSelectionRowStartLayoutPosition.row.boxes[endSelectionRowStartLayoutPosition.row.boxes.length - 1];
        var clickRowStartLayoutPosition = (subDocument.isMain()
            ? new layout_position_creator_1.LayoutPositionMainSubDocumentCreator(this.control.layout, subDocument, clickPosition, document_layout_details_level_1.DocumentLayoutDetailsLevel.Character)
            : new layout_position_creator_1.LayoutPositionOtherSubDocumentCreator(this.control.layout, subDocument, clickPosition, selection.pageIndex, document_layout_details_level_1.DocumentLayoutDetailsLevel.Character))
            .create(new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false));
        if (!clickRowStartLayoutPosition)
            return false;
        var clickEndBox = clickRowStartLayoutPosition.row.boxes[clickRowStartLayoutPosition.row.boxes.length - 1];
        var startSelectionRowStartPosition = startSelectionRowStartLayoutPosition.getRelatedSubDocumentPagePosition() + startSelectionRowStartLayoutPosition.pageArea.pageOffset +
            startSelectionRowStartLayoutPosition.column.pageAreaOffset + startSelectionRowStartLayoutPosition.row.columnOffset;
        var startSelectionRowEndPosition = startSelectionRowStartPosition + startSelectionEndBox.rowOffset + startSelectionEndBox.getLength();
        var endSelectionRowStartPosition = endSelectionRowStartLayoutPosition.getRelatedSubDocumentPagePosition() + endSelectionRowStartLayoutPosition.pageArea.pageOffset +
            endSelectionRowStartLayoutPosition.column.pageAreaOffset + endSelectionRowStartLayoutPosition.row.columnOffset;
        var endSelectionRowEndPosition = endSelectionRowStartPosition + endSelectionEndBox.rowOffset + endSelectionEndBox.getLength();
        var clickStartRowPosition = clickRowStartLayoutPosition.getRelatedSubDocumentPagePosition() + clickRowStartLayoutPosition.pageArea.pageOffset +
            clickRowStartLayoutPosition.column.pageAreaOffset + clickRowStartLayoutPosition.row.columnOffset;
        var clickEndRowPosition = clickStartRowPosition + clickEndBox.rowOffset + clickEndBox.getLength();
        if (currentInterval.start == startSelectionRowStartPosition && currentInterval.end == endSelectionRowEndPosition) {
            if (selection.forwardDirection) {
                if (clickStartRowPosition < startSelectionRowStartPosition)
                    selection.deprecatedSetSelection(startSelectionRowEndPosition, clickStartRowPosition, false, -1, true);
                else
                    selection.deprecatedSetSelection(startSelectionRowStartPosition, clickEndRowPosition, false, -1, true);
            }
            else {
                if (clickStartRowPosition >= endSelectionRowStartPosition)
                    selection.deprecatedSetSelection(endSelectionRowStartPosition, clickEndRowPosition, false, -1, true);
                else
                    selection.deprecatedSetSelection(endSelectionRowEndPosition, clickStartRowPosition, false, -1, true);
            }
        }
        else {
            if (selection.forwardDirection) {
                var selectionEnd = clickStartRowPosition <= currentInterval.start ? Math.min(clickStartRowPosition, startSelectionRowStartPosition) : clickStartRowPosition;
                selection.deprecatedSetSelection(currentInterval.start, selectionEnd, false, -1, true);
            }
            else
                selection.deprecatedSetSelection(intervalEnd, clickStartRowPosition, false, -1, true);
        }
        return true;
    };
    return ExtendSelectLineCommand;
}(selection_command_base_1.SelectionCommandBase));
exports.ExtendSelectLineCommand = ExtendSelectLineCommand;
var SelectLineCommandNoUpdateControlState = (function (_super) {
    tslib_1.__extends(SelectLineCommandNoUpdateControlState, _super);
    function SelectLineCommandNoUpdateControlState() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SelectLineCommandNoUpdateControlState;
}(SelectLineCommand));
exports.SelectLineCommandNoUpdateControlState = SelectLineCommandNoUpdateControlState;
var ExtendSelectLineCommandNoUpdateControlState = (function (_super) {
    tslib_1.__extends(ExtendSelectLineCommandNoUpdateControlState, _super);
    function ExtendSelectLineCommandNoUpdateControlState() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ExtendSelectLineCommandNoUpdateControlState;
}(ExtendSelectLineCommand));
exports.ExtendSelectLineCommandNoUpdateControlState = ExtendSelectLineCommandNoUpdateControlState;
