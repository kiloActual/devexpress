"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var layout_box_iterator_main_sub_document_1 = require("../../../core/layout-engine/layout-box-iterator/layout-box-iterator-main-sub-document");
var layout_box_iterator_other_sub_document_1 = require("../../../core/layout-engine/layout-box-iterator/layout-box-iterator-other-sub-document");
var layout_position_creator_1 = require("../../../core/layout-engine/layout-position-creator");
var document_layout_details_level_1 = require("../../../core/layout/document-layout-details-level");
var layout_box_1 = require("../../../core/layout/main-structures/layout-boxes/layout-box");
var selection_command_base_1 = require("./selection-command-base");
var GoToParagraphStartCommandBase = (function (_super) {
    tslib_1.__extends(GoToParagraphStartCommandBase, _super);
    function GoToParagraphStartCommandBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GoToParagraphStartCommandBase.prototype.executeCore = function (_state, _options) {
        var position = this.getPositionStartParagraph();
        if (position < 0)
            return false;
        var selection = this.selection;
        if (this.extendSelection())
            this.selection.changeState(function (newState) { return newState.extendLastInterval(position).setEndOfLine(false); });
        else
            selection.deprecatedSetSelection(position, position, false, selection.keepX, true);
        return true;
    };
    GoToParagraphStartCommandBase.prototype.getPositionStartParagraph = function () {
        var selection = this.selection;
        var layout = this.control.layout;
        var subDocument = this.selection.activeSubDocument;
        var firstPageStartPos = layout.pages[0].getPosition();
        var currentPos = selection.forwardDirection ? selection.lastSelectedInterval.end : selection.lastSelectedInterval.start;
        var boxIterator = subDocument.isMain() ? new layout_box_iterator_main_sub_document_1.LayoutBoxIteratorMainSubDocument(subDocument, layout, firstPageStartPos, currentPos) : new layout_box_iterator_other_sub_document_1.LayoutBoxIteratorOtherSubDocument(subDocument, layout, firstPageStartPos, currentPos, this.selection.pageIndex);
        if (!boxIterator.isInitialized())
            return -1;
        boxIterator.movePrev(new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(true));
        if (boxIterator.position.getLogPosition() ==
            (this.selection.activeSubDocument.isMain() ? layout.getLastValidPage().getEndPosition() : layout.pages[selection.pageIndex].otherPageAreas[subDocument.id].getEndPosition())) {
            if (boxIterator.position.box.getType() == layout_box_1.LayoutBoxType.ParagraphMark || boxIterator.position.box.getType() == layout_box_1.LayoutBoxType.SectionMark)
                return boxIterator.position.getLogPosition(document_layout_details_level_1.DocumentLayoutDetailsLevel.Box);
            return boxIterator.position.getLogPosition();
        }
        if (boxIterator.position.charOffset == 0)
            boxIterator.movePrev(new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(true));
        while (boxIterator.movePrev(new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(true))) {
            if (boxIterator.position.box.getType() == layout_box_1.LayoutBoxType.ParagraphMark || boxIterator.position.box.getType() == layout_box_1.LayoutBoxType.SectionMark) {
                boxIterator.moveNext(new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(true));
                return boxIterator.position.getLogPosition();
            }
        }
        return firstPageStartPos;
    };
    return GoToParagraphStartCommandBase;
}(selection_command_base_1.SelectionCommandBase));
exports.GoToParagraphStartCommandBase = GoToParagraphStartCommandBase;
var GoToParagraphStartCommand = (function (_super) {
    tslib_1.__extends(GoToParagraphStartCommand, _super);
    function GoToParagraphStartCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GoToParagraphStartCommand.prototype.extendSelection = function () {
        return false;
    };
    return GoToParagraphStartCommand;
}(GoToParagraphStartCommandBase));
exports.GoToParagraphStartCommand = GoToParagraphStartCommand;
var ExtendGoToParagraphStartCommand = (function (_super) {
    tslib_1.__extends(ExtendGoToParagraphStartCommand, _super);
    function ExtendGoToParagraphStartCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ExtendGoToParagraphStartCommand.prototype.extendSelection = function () {
        return true;
    };
    return ExtendGoToParagraphStartCommand;
}(GoToParagraphStartCommandBase));
exports.ExtendGoToParagraphStartCommand = ExtendGoToParagraphStartCommand;
