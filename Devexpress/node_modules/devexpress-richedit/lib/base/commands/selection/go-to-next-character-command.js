"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var layout_position_creator_1 = require("../../../core/layout-engine/layout-position-creator");
var document_layout_details_level_1 = require("../../../core/layout/document-layout-details-level");
var field_1 = require("../../../core/model/fields/field");
var list_1 = require("@devexpress/utils/lib/utils/list");
var client_command_1 = require("../client-command");
var selection_command_base_1 = require("./selection-command-base");
var GoToNextCharacterCommandBase = (function (_super) {
    tslib_1.__extends(GoToNextCharacterCommandBase, _super);
    function GoToNextCharacterCommandBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GoToNextCharacterCommandBase.prototype.executeCore = function (_state, _options) {
        var position = this.getPosition();
        if (position == -1)
            return false;
        this.setSelection(position);
        return true;
    };
    GoToNextCharacterCommandBase.prototype.getPosition = function () {
        var selection = this.selection;
        var subDocument = this.selection.activeSubDocument;
        var initialModelPosition = selection.forwardDirection ? selection.lastSelectedInterval.end : selection.lastSelectedInterval.start;
        var initialLayoutPosition = subDocument.isMain()
            ? layout_position_creator_1.LayoutPositionMainSubDocumentCreator.ensureLayoutPosition(this.control.layoutFormatterManager, subDocument, initialModelPosition, document_layout_details_level_1.DocumentLayoutDetailsLevel.Character, new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(selection.endOfLine), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setCustom(true, true, false, false))
            : new layout_position_creator_1.LayoutPositionOtherSubDocumentCreator(this.control.layout, subDocument, initialModelPosition, selection.pageIndex, document_layout_details_level_1.DocumentLayoutDetailsLevel.Character)
                .create(new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(selection.endOfLine), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setCustom(true, true, false, false));
        var nextCharLayoutPosition;
        if (this.extendSelection()) {
            nextCharLayoutPosition = initialLayoutPosition;
            if (nextCharLayoutPosition.getLogPosition() == initialModelPosition) {
                nextCharLayoutPosition = this.getNextCharacterPosition(nextCharLayoutPosition);
                if (nextCharLayoutPosition.isPositionBeforeFirstBoxInRow())
                    nextCharLayoutPosition = this.getNextCharacterPosition(nextCharLayoutPosition);
            }
            else if (nextCharLayoutPosition.isPositionBeforeFirstBoxInRow())
                nextCharLayoutPosition = this.getNextCharacterPosition(nextCharLayoutPosition);
            else if (nextCharLayoutPosition.getLogPosition() < initialModelPosition)
                nextCharLayoutPosition = this.getNextCharacterPosition(nextCharLayoutPosition);
        }
        else {
            if (!selection.isCollapsed()) {
                var pos;
                if (selection.forwardDirection) {
                    pos = initialLayoutPosition.getLogPosition();
                }
                else {
                    var selectionEndPosition = selection.lastSelectedInterval.end;
                    pos = (subDocument.isMain()
                        ? layout_position_creator_1.LayoutPositionMainSubDocumentCreator.ensureLayoutPosition(this.control.layoutFormatterManager, subDocument, selectionEndPosition, document_layout_details_level_1.DocumentLayoutDetailsLevel.Character, new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(selection.endOfLine), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(true))
                        : new layout_position_creator_1.LayoutPositionOtherSubDocumentCreator(this.control.layout, subDocument, selectionEndPosition, selection.pageIndex, document_layout_details_level_1.DocumentLayoutDetailsLevel.Character)
                            .create(new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(selection.endOfLine), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(true))).getLogPosition();
                }
                return pos < subDocument.getDocumentEndPosition() ? pos : pos - 1;
            }
            nextCharLayoutPosition = initialLayoutPosition;
            var needFindPosition = nextCharLayoutPosition.getLogPosition() == initialModelPosition;
            if (!needFindPosition)
                needFindPosition = field_1.Field.binaryIndexOf(subDocument.fields, initialModelPosition + 1) >= 0;
            if (needFindPosition) {
                if (nextCharLayoutPosition.box.getLength() == nextCharLayoutPosition.charOffset)
                    nextCharLayoutPosition = this.getNextCharacterPosition(nextCharLayoutPosition);
                do {
                    var prevLP = nextCharLayoutPosition;
                    nextCharLayoutPosition = this.getNextCharacterPosition(prevLP);
                    if (prevLP === nextCharLayoutPosition) {
                        nextCharLayoutPosition = initialLayoutPosition;
                        break;
                    }
                } while (!(nextCharLayoutPosition.box.isVisible() || nextCharLayoutPosition.isPositionBeforeFirstBoxInRow()));
            }
        }
        var nextCharModelPosition = Math.max(initialModelPosition, nextCharLayoutPosition.getLogPosition());
        return nextCharModelPosition == initialModelPosition ? -1 : nextCharModelPosition;
    };
    GoToNextCharacterCommandBase.prototype.getNextCharacterPosition = function (layoutPosition) {
        var nextLayoutPosition = layoutPosition.clone();
        if (nextLayoutPosition.charOffset + 1 <= nextLayoutPosition.box.getLength()) {
            nextLayoutPosition.charOffset++;
            return nextLayoutPosition;
        }
        nextLayoutPosition.charOffset = 0;
        if (nextLayoutPosition.boxIndex + 1 < nextLayoutPosition.row.boxes.length) {
            nextLayoutPosition.boxIndex++;
            nextLayoutPosition.box = nextLayoutPosition.row.boxes[nextLayoutPosition.boxIndex];
            return nextLayoutPosition;
        }
        nextLayoutPosition.boxIndex = 0;
        if (nextLayoutPosition.advanceToNextRow(this.control.layout)) {
            nextLayoutPosition.box = nextLayoutPosition.row.boxes[0];
            return nextLayoutPosition;
        }
        else
            return layoutPosition;
    };
    return GoToNextCharacterCommandBase;
}(selection_command_base_1.SelectionCommandBase));
exports.GoToNextCharacterCommandBase = GoToNextCharacterCommandBase;
var GoToNextCharacterCommand = (function (_super) {
    tslib_1.__extends(GoToNextCharacterCommand, _super);
    function GoToNextCharacterCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GoToNextCharacterCommand.prototype.setSelection = function (position) {
        this.selection.deprecatedSetSelection(position, position, false, -1, true);
    };
    GoToNextCharacterCommand.prototype.extendSelection = function () {
        return false;
    };
    return GoToNextCharacterCommand;
}(GoToNextCharacterCommandBase));
exports.GoToNextCharacterCommand = GoToNextCharacterCommand;
var ExtendGoToNextCharacterCommand = (function (_super) {
    tslib_1.__extends(ExtendGoToNextCharacterCommand, _super);
    function ExtendGoToNextCharacterCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ExtendGoToNextCharacterCommand.prototype.setSelection = function (position) {
        if (!this.selection.changeState(function (newState) { return newState.extendLastInterval(position).resetKeepX().setEndOfLine(false); }))
            ExtendGoToNextCharacterCommand.jumpThroughFieldToRight(this.selection);
    };
    ExtendGoToNextCharacterCommand.prototype.extendSelection = function () {
        return true;
    };
    ExtendGoToNextCharacterCommand.prototype.executeCore = function (state, options) {
        var selection = this.selection;
        var tableInfo = selection.tableInfo;
        var rawTblInfo = tableInfo.rawData;
        var canSelectCell = tableInfo.isSelected && rawTblInfo.areCellsSelectedInSeries &&
            rawTblInfo.atLeastOneCellFullySelected(selection.intervals);
        if (!canSelectCell)
            return _super.prototype.executeCore.call(this, state, options);
        var forward = selection.forwardDirection || rawTblInfo.firstRowInfo.cells.length == 1;
        var lastRow = forward ? rawTblInfo.lastRowInfo : rawTblInfo.firstRowInfo;
        var cell = lastRow.row[(forward ? list_1.ListUtils.last(lastRow.cells) : lastRow.cells[0]).cellIndex + 1];
        if (cell) {
            return this.control.commandManager.getCommand(client_command_1.RichEditClientCommand.SelectTableCellsRange).execute(this.control.commandManager.isPublicApiCall, forward ? {
                firstCell: rawTblInfo.firstCell,
                lastCell: cell
            } : {
                firstCell: rawTblInfo.lastCell,
                lastCell: cell
            });
        }
        return this.control.commandManager.getCommand(client_command_1.RichEditClientCommand.ExtendLineDown).execute(this.control.commandManager.isPublicApiCall);
    };
    ExtendGoToNextCharacterCommand.jumpThroughFieldToRight = function (selection) {
        var fields = selection.activeSubDocument.fields;
        if (fields.length == 0 || selection.forwardDirection)
            return;
        var interval = selection.lastSelectedInterval;
        var position = interval.start;
        var field = fields[Math.max(0, field_1.Field.normedBinaryIndexOf(fields, position + 1))];
        if (field.getFieldStartPosition() == position)
            selection.changeState(function (newState) { return newState.extendLastInterval(field.getFieldEndPosition()).setEndOfLine(false).resetKeepX(); });
    };
    return ExtendGoToNextCharacterCommand;
}(GoToNextCharacterCommandBase));
exports.ExtendGoToNextCharacterCommand = ExtendGoToNextCharacterCommand;
