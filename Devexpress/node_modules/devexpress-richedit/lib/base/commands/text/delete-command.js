"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var layout_position_creator_1 = require("../../../core/layout-engine/layout-position-creator");
var document_layout_details_level_1 = require("../../../core/layout/document-layout-details-level");
var linked_interval_1 = require("../../../core/model/position/linked-interval");
var sub_document_1 = require("../../../core/model/sub-document");
var list_1 = require("@devexpress/utils/lib/utils/list");
var selection_history_item_1 = require("../../model/history/selection/selection-history-item");
var command_base_1 = require("../command-base");
var command_states_1 = require("../command-states");
var backspace_command_1 = require("./backspace-command");
var DeleteCommand = (function (_super) {
    tslib_1.__extends(DeleteCommand, _super);
    function DeleteCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DeleteCommand.prototype.getState = function () {
        return new command_states_1.SimpleCommandState(this.isEnabled());
    };
    DeleteCommand.prototype.executeCore = function (_state, options) {
        var _this = this;
        var subDocument = options.subDocument;
        var intervals = list_1.ListUtils.map(options.intervalsInfo.intervals, function (curr) { return new linked_interval_1.LinkedInterval(subDocument.positionManager, curr); });
        this.history.addTransaction(function () {
            for (var _i = 0, intervals_1 = intervals; _i < intervals_1.length; _i++) {
                var selectionInterval = intervals_1[_i];
                var removingInterval = selectionInterval.getFixedInterval();
                var isIntervalCollapsed = selectionInterval.length == 0;
                if (isIntervalCollapsed) {
                    var layoutPosition = subDocument.isMain()
                        ? layout_position_creator_1.LayoutPositionMainSubDocumentCreator.ensureLayoutPosition(_this.control.layoutFormatterManager, subDocument, selectionInterval.start, document_layout_details_level_1.DocumentLayoutDetailsLevel.Character, new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(_this.selection.endOfLine), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false))
                        : new layout_position_creator_1.LayoutPositionOtherSubDocumentCreator(_this.control.layout, subDocument, selectionInterval.start, _this.selection.pageIndex, document_layout_details_level_1.DocumentLayoutDetailsLevel.Character)
                            .create(new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(_this.selection.endOfLine), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false));
                    layoutPosition.switchToStartNextBoxInRow();
                    removingInterval.start = layoutPosition.getLogPosition();
                    removingInterval.length = 1;
                }
                if (selectionInterval.end === subDocument.getDocumentEndPosition() && removingInterval.length === 1)
                    continue;
                if (isIntervalCollapsed && backspace_command_1.BackspaceCommand.getIntervalAccordingFields(subDocument, _this.selection, removingInterval, true))
                    break;
                if (subDocument.isEditable([removingInterval])) {
                    _this.history.addAndRedo(new selection_history_item_1.SelectionHistoryItem(_this.modelManipulator, _this.selection, _this.selection.getState(), _this.selection.getState().setPosition(removingInterval.start)));
                    _this.modelManipulator.range.removeInterval(new sub_document_1.SubDocumentInterval(subDocument, removingInterval), false, true);
                }
            }
        });
        list_1.ListUtils.forEach(intervals, function (curr) { return curr.destructor(subDocument.positionManager); });
        return true;
    };
    return DeleteCommand;
}(command_base_1.CommandBase));
exports.DeleteCommand = DeleteCommand;
