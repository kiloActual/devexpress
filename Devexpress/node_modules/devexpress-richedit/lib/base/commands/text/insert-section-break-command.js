"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var control_1 = require("../../../core/model/options/control");
var enums_1 = require("../../../core/model/section/enums");
var sub_document_1 = require("../../../core/model/sub-document");
var command_base_1 = require("../command-base");
var command_states_1 = require("../command-states");
var section_properties_command_base_1 = require("../section-properties/section-properties-command-base");
var InsertSectionBreakCommand = (function (_super) {
    tslib_1.__extends(InsertSectionBreakCommand, _super);
    function InsertSectionBreakCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InsertSectionBreakCommand.prototype.getState = function () {
        return new command_states_1.SimpleCommandState(this.isEnabled());
    };
    InsertSectionBreakCommand.prototype.isEnabled = function () {
        return _super.prototype.isEnabled.call(this) && control_1.ControlOptions.isEnabled(this.control.modelManager.richOptions.control.sections) &&
            this.selection.tableInfo.extendedData.numRows == 0 && this.selection.activeSubDocument.isMain() &&
            section_properties_command_base_1.SectionPropertiesCommandBase.rangePermissionIncludeFullSection(this.control, this.selection.activeSubDocument, this.selection.intervals);
    };
    InsertSectionBreakCommand.prototype.executeCore = function (_state, options) {
        var _this = this;
        var charPropsBundle = this.inputPosition.charPropsBundle;
        this.insertSomeWithSelection(sub_document_1.SubDocumentInterval.fromPosition(this.selection.activeSubDocument, options.intervalsInfo.position), function (subDocPosition) {
            _this.modelManipulator.section.insertSectionAndSetStartType(subDocPosition.position, _this.getStartType(), charPropsBundle);
            return subDocPosition.position + 1;
        });
        return true;
    };
    return InsertSectionBreakCommand;
}(command_base_1.CommandBase));
exports.InsertSectionBreakCommand = InsertSectionBreakCommand;
var InsertSectionBreakNextPageCommand = (function (_super) {
    tslib_1.__extends(InsertSectionBreakNextPageCommand, _super);
    function InsertSectionBreakNextPageCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InsertSectionBreakNextPageCommand.prototype.getStartType = function () {
        return enums_1.SectionStartType.NextPage;
    };
    return InsertSectionBreakNextPageCommand;
}(InsertSectionBreakCommand));
exports.InsertSectionBreakNextPageCommand = InsertSectionBreakNextPageCommand;
var InsertSectionBreakEvenPageCommand = (function (_super) {
    tslib_1.__extends(InsertSectionBreakEvenPageCommand, _super);
    function InsertSectionBreakEvenPageCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InsertSectionBreakEvenPageCommand.prototype.getStartType = function () {
        return enums_1.SectionStartType.EvenPage;
    };
    return InsertSectionBreakEvenPageCommand;
}(InsertSectionBreakCommand));
exports.InsertSectionBreakEvenPageCommand = InsertSectionBreakEvenPageCommand;
var InsertSectionBreakOddPageCommand = (function (_super) {
    tslib_1.__extends(InsertSectionBreakOddPageCommand, _super);
    function InsertSectionBreakOddPageCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InsertSectionBreakOddPageCommand.prototype.getStartType = function () {
        return enums_1.SectionStartType.OddPage;
    };
    return InsertSectionBreakOddPageCommand;
}(InsertSectionBreakCommand));
exports.InsertSectionBreakOddPageCommand = InsertSectionBreakOddPageCommand;
