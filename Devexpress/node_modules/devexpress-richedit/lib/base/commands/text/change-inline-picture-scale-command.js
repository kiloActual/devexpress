"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var change_rectangular_object_history_item_1 = require("../../../core/model/history/items/change-rectangular-object-history-item");
var sub_document_1 = require("../../../core/model/sub-document");
var size_1 = require("@devexpress/utils/lib/geometry/size");
var fixed_1 = require("@devexpress/utils/lib/intervals/fixed");
var command_base_1 = require("../command-base");
var command_states_1 = require("../command-states");
var ChangeInlinePictureScaleCommand = (function (_super) {
    tslib_1.__extends(ChangeInlinePictureScaleCommand, _super);
    function ChangeInlinePictureScaleCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChangeInlinePictureScaleCommand.prototype.getState = function () {
        var isEnabled = this.isEnabled();
        var value;
        if (isEnabled) {
            var run = this.selection.activeSubDocument.getRunByPosition(this.selection.specialRunInfo.getPicturePosition());
            value = [run.size.scale.width, run.size.scale.height];
        }
        return new command_states_1.SimpleCommandState(this.isEnabled(), value);
    };
    ChangeInlinePictureScaleCommand.prototype.isEnabled = function () {
        return _super.prototype.isEnabled.call(this) &&
            this.selection.specialRunInfo.isPictureSelected() &&
            !this.selection.specialRunInfo.isSelectedAnchorObject;
    };
    ChangeInlinePictureScaleCommand.prototype.executeCore = function (_state, options) {
        this.history.addAndRedo(new change_rectangular_object_history_item_1.ChangeRectangularObjectScaleHistoryItem(this.modelManipulator, new sub_document_1.SubDocumentInterval(options.subDocument, new fixed_1.FixedInterval(this.selection.specialRunInfo.getPicturePosition(), 1)), new size_1.Size(options.param[0], options.param[1])));
        return true;
    };
    return ChangeInlinePictureScaleCommand;
}(command_base_1.CommandBase));
exports.ChangeInlinePictureScaleCommand = ChangeInlinePictureScaleCommand;
