"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var control_1 = require("../../../core/model/options/control");
var command_base_1 = require("../command-base");
var command_states_1 = require("../command-states");
var ChangeHyperlinkCommandOptions = (function (_super) {
    tslib_1.__extends(ChangeHyperlinkCommandOptions, _super);
    function ChangeHyperlinkCommandOptions(control, fieldIndex, hyperlinkInfo, text) {
        var _this = _super.call(this, control) || this;
        _this.fieldIndex = fieldIndex;
        _this.hyperlinkInfo = hyperlinkInfo;
        _this.text = text;
        return _this;
    }
    return ChangeHyperlinkCommandOptions;
}(command_base_1.CommandOptions));
exports.ChangeHyperlinkCommandOptions = ChangeHyperlinkCommandOptions;
var ChangeHyperlinkCommand = (function (_super) {
    tslib_1.__extends(ChangeHyperlinkCommand, _super);
    function ChangeHyperlinkCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChangeHyperlinkCommand.prototype.getState = function (options) {
        return new command_states_1.SimpleCommandState(this.isEnabled() && options.fieldIndex >= 0);
    };
    ChangeHyperlinkCommand.prototype.isEnabled = function () {
        return _super.prototype.isEnabled.call(this) && control_1.ControlOptions.isEnabled(this.control.modelManager.richOptions.control.fields);
    };
    ChangeHyperlinkCommand.prototype.executeCore = function (_state, options) {
        var field = options.subDocument.fields[options.fieldIndex];
        return this.modelManipulator.field.changeHyperlinkInfo(options.subDocument, field, options.hyperlinkInfo, options.text);
    };
    return ChangeHyperlinkCommand;
}(command_base_1.CommandBase));
exports.ChangeHyperlinkCommand = ChangeHyperlinkCommand;
