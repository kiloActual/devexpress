"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var control_1 = require("../../../core/model/options/control");
var number_1 = require("@devexpress/utils/lib/utils/map/number");
var command_base_1 = require("../command-base");
var command_states_1 = require("../command-states");
var ShowAllFieldCodesCommand = (function (_super) {
    tslib_1.__extends(ShowAllFieldCodesCommand, _super);
    function ShowAllFieldCodesCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ShowAllFieldCodesCommand.prototype.getState = function () {
        return new command_states_1.IntervalCommandState(this.isEnabled(), this.selection.lastSelectedInterval);
    };
    ShowAllFieldCodesCommand.prototype.isEnabled = function () {
        return _super.prototype.isEnabled.call(this) && control_1.ControlOptions.isEnabled(this.control.modelManager.richOptions.control.fields);
    };
    ShowAllFieldCodesCommand.prototype.executeCore = function (_state, _options) {
        this.modelManipulator.field.setAllFieldsShowCode(this.baseValue(), number_1.NumberMapUtils.toList(this.modelManipulator.model.subDocuments));
        return true;
    };
    ShowAllFieldCodesCommand.prototype.baseValue = function () {
        return true;
    };
    ShowAllFieldCodesCommand.prototype.isEnabledInReadOnlyMode = function () {
        return true;
    };
    return ShowAllFieldCodesCommand;
}(command_base_1.CommandBase));
exports.ShowAllFieldCodesCommand = ShowAllFieldCodesCommand;
var ShowAllFieldResultCommand = (function (_super) {
    tslib_1.__extends(ShowAllFieldResultCommand, _super);
    function ShowAllFieldResultCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ShowAllFieldResultCommand.prototype.baseValue = function () {
        return false;
    };
    return ShowAllFieldResultCommand;
}(ShowAllFieldCodesCommand));
exports.ShowAllFieldResultCommand = ShowAllFieldResultCommand;
