"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var control_1 = require("../../../core/model/options/control");
var client_command_1 = require("../client-command");
var command_base_1 = require("../command-base");
var command_states_1 = require("../command-states");
var DeleteTableCellsByBackspaceCommand = (function (_super) {
    tslib_1.__extends(DeleteTableCellsByBackspaceCommand, _super);
    function DeleteTableCellsByBackspaceCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DeleteTableCellsByBackspaceCommand.prototype.getState = function () {
        return new command_states_1.SimpleCommandState(this.isEnabled());
    };
    DeleteTableCellsByBackspaceCommand.prototype.isEnabled = function () {
        return _super.prototype.isEnabled.call(this)
            && control_1.ControlOptions.isEnabled(this.control.modelManager.richOptions.control.tables)
            && (this.selection.tableInfo.extendedData.isSquare || this.selection.tableInfo.extendedData.numRows == 1);
    };
    DeleteTableCellsByBackspaceCommand.prototype.executeCore = function (_state, _options) {
        var tableInfo = this.selection.tableInfo;
        if (this.selection.tableInfo.extendedData.isSelectedEntireTable)
            return this.control.commandManager.getCommand(client_command_1.RichEditClientCommand.DeleteTable).execute(this.control.commandManager.isPublicApiCall);
        if (tableInfo.extendedData.numRows == tableInfo.table.rows.length && this.selection.tableInfo.extendedData.isSquare)
            return this.control.commandManager.getCommand(client_command_1.RichEditClientCommand.DeleteTableColumns).execute(this.control.commandManager.isPublicApiCall);
        return this.control.commandManager.getCommand(client_command_1.RichEditClientCommand.ShowDeleteTableCellsForm).execute(this.control.commandManager.isPublicApiCall);
    };
    return DeleteTableCellsByBackspaceCommand;
}(command_base_1.CommandBase));
exports.DeleteTableCellsByBackspaceCommand = DeleteTableCellsByBackspaceCommand;
