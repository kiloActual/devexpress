"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var paragraph_properties_history_items_1 = require("../../../core/model/history/items/paragraph-properties-history-items");
var table_cell_properties_history_items_1 = require("../../../core/model/history/items/tables/table-cell-properties-history-items");
var control_1 = require("../../../core/model/options/control");
var paragraph_properties_1 = require("../../../core/model/paragraph/paragraph-properties");
var sub_document_1 = require("../../../core/model/sub-document");
var table_cell_properties_merger_1 = require("../../../core/model/tables/properties-mergers/table-cell-properties-merger");
var table_cell_properties_1 = require("../../../core/model/tables/properties/table-cell-properties");
var table_base_structures_1 = require("../../../core/model/tables/secondary-structures/table-base-structures");
var list_1 = require("@devexpress/utils/lib/utils/list");
var client_command_1 = require("../client-command");
var command_base_1 = require("../command-base");
var command_states_1 = require("../command-states");
var ChangeTableCellAlignmentCommandBase = (function (_super) {
    tslib_1.__extends(ChangeTableCellAlignmentCommandBase, _super);
    function ChangeTableCellAlignmentCommandBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChangeTableCellAlignmentCommandBase.prototype.getRelatedCommands = function () {
        var _a;
        return _a = {},
            _a[client_command_1.RichEditClientCommand.TableCellAlignBottomCenter] = true,
            _a[client_command_1.RichEditClientCommand.TableCellAlignBottomLeft] = true,
            _a[client_command_1.RichEditClientCommand.TableCellAlignBottomRight] = true,
            _a[client_command_1.RichEditClientCommand.TableCellAlignMiddleCenter] = true,
            _a[client_command_1.RichEditClientCommand.TableCellAlignMiddleLeft] = true,
            _a[client_command_1.RichEditClientCommand.TableCellAlignMiddleRight] = true,
            _a[client_command_1.RichEditClientCommand.TableCellAlignTopCenter] = true,
            _a[client_command_1.RichEditClientCommand.TableCellAlignTopLeft] = true,
            _a[client_command_1.RichEditClientCommand.TableCellAlignTopRight] = true,
            _a;
    };
    ChangeTableCellAlignmentCommandBase.prototype.getState = function () {
        var state = new command_states_1.SimpleCommandState(true, false);
        state.enabled = this.isEnabled() && this.selection.tableInfo.extendedData.numRows > 0;
        state.value = this.isChecked(this.selection.activeSubDocument);
        return state;
    };
    ChangeTableCellAlignmentCommandBase.prototype.isEnabled = function () {
        return _super.prototype.isEnabled.call(this) && control_1.ControlOptions.isEnabled(this.control.modelManager.richOptions.control.tables);
    };
    ChangeTableCellAlignmentCommandBase.prototype.isChecked = function (subDocument) {
        var _this = this;
        var tableInfo = this.selection.tableInfo;
        return tableInfo.extendedData.allOfCells(function (cellInfo) {
            return new table_cell_properties_merger_1.TableCellVerticalAlignmentMerger().getProperty(cellInfo.cell.properties, tableInfo.table.style, cellInfo.cell.conditionalFormatting, _this.control.modelManager.model.defaultTableCellProperties) === _this.verticalAlignment &&
                subDocument.getParagraphByPosition(cellInfo.cell.startParagraphPosition.value).getParagraphMergedProperties().alignment === _this.horizontalAlignment;
        });
    };
    ChangeTableCellAlignmentCommandBase.prototype.executeCore = function (_state, options) {
        var _this = this;
        this.history.beginTransaction();
        var tableInfo = this.selection.tableInfo;
        var subDocument = options.subDocument;
        var table = tableInfo.table;
        tableInfo.extendedData.foreach(function () { }, function (cellInfo, rowInfo) {
            var cell = cellInfo.cell;
            if (cell.properties.verticalAlignment !== _this.verticalAlignment || !cell.properties.getUseValue(table_cell_properties_1.TableCellPropertiesMask.UseVerticalAlignment)) {
                _this.history.addAndRedo(new table_cell_properties_history_items_1.TableCellVerticalAlignmentHistoryItem(_this.modelManipulator, subDocument, table.index, rowInfo.rowIndex, cellInfo.cellIndex, _this.verticalAlignment, true));
            }
            var paragraphIndices = subDocument.getParagraphsIndices(cell.interval);
            list_1.ListUtils.forEach(subDocument.paragraphs, function (paragraph) {
                if (paragraph.getParagraphMergedProperties().alignment !== _this.horizontalAlignment)
                    _this.history.addAndRedo(new paragraph_properties_history_items_1.ParagraphAlignmentHistoryItem(_this.modelManipulator, new sub_document_1.SubDocumentInterval(subDocument, paragraph.interval), _this.horizontalAlignment, true));
            }, paragraphIndices.start, paragraphIndices.end);
        });
        this.history.endTransaction();
        return true;
    };
    return ChangeTableCellAlignmentCommandBase;
}(command_base_1.CommandBase));
exports.ChangeTableCellAlignmentCommandBase = ChangeTableCellAlignmentCommandBase;
var ChangeTableCellTopLeftAlignmentCommand = (function (_super) {
    tslib_1.__extends(ChangeTableCellTopLeftAlignmentCommand, _super);
    function ChangeTableCellTopLeftAlignmentCommand() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.horizontalAlignment = paragraph_properties_1.ParagraphAlignment.Left;
        _this.verticalAlignment = table_base_structures_1.TableCellVerticalAlignment.Top;
        return _this;
    }
    return ChangeTableCellTopLeftAlignmentCommand;
}(ChangeTableCellAlignmentCommandBase));
exports.ChangeTableCellTopLeftAlignmentCommand = ChangeTableCellTopLeftAlignmentCommand;
var ChangeTableCellTopCenterAlignmentCommand = (function (_super) {
    tslib_1.__extends(ChangeTableCellTopCenterAlignmentCommand, _super);
    function ChangeTableCellTopCenterAlignmentCommand() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.horizontalAlignment = paragraph_properties_1.ParagraphAlignment.Center;
        _this.verticalAlignment = table_base_structures_1.TableCellVerticalAlignment.Top;
        return _this;
    }
    return ChangeTableCellTopCenterAlignmentCommand;
}(ChangeTableCellAlignmentCommandBase));
exports.ChangeTableCellTopCenterAlignmentCommand = ChangeTableCellTopCenterAlignmentCommand;
var ChangeTableCellTopRightAlignmentCommand = (function (_super) {
    tslib_1.__extends(ChangeTableCellTopRightAlignmentCommand, _super);
    function ChangeTableCellTopRightAlignmentCommand() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.horizontalAlignment = paragraph_properties_1.ParagraphAlignment.Right;
        _this.verticalAlignment = table_base_structures_1.TableCellVerticalAlignment.Top;
        return _this;
    }
    return ChangeTableCellTopRightAlignmentCommand;
}(ChangeTableCellAlignmentCommandBase));
exports.ChangeTableCellTopRightAlignmentCommand = ChangeTableCellTopRightAlignmentCommand;
var ChangeTableCellMiddleLeftAlignmentCommand = (function (_super) {
    tslib_1.__extends(ChangeTableCellMiddleLeftAlignmentCommand, _super);
    function ChangeTableCellMiddleLeftAlignmentCommand() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.horizontalAlignment = paragraph_properties_1.ParagraphAlignment.Left;
        _this.verticalAlignment = table_base_structures_1.TableCellVerticalAlignment.Center;
        return _this;
    }
    return ChangeTableCellMiddleLeftAlignmentCommand;
}(ChangeTableCellAlignmentCommandBase));
exports.ChangeTableCellMiddleLeftAlignmentCommand = ChangeTableCellMiddleLeftAlignmentCommand;
var ChangeTableCellMiddleCenterAlignmentCommand = (function (_super) {
    tslib_1.__extends(ChangeTableCellMiddleCenterAlignmentCommand, _super);
    function ChangeTableCellMiddleCenterAlignmentCommand() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.horizontalAlignment = paragraph_properties_1.ParagraphAlignment.Center;
        _this.verticalAlignment = table_base_structures_1.TableCellVerticalAlignment.Center;
        return _this;
    }
    return ChangeTableCellMiddleCenterAlignmentCommand;
}(ChangeTableCellAlignmentCommandBase));
exports.ChangeTableCellMiddleCenterAlignmentCommand = ChangeTableCellMiddleCenterAlignmentCommand;
var ChangeTableCellMiddleRightAlignmentCommand = (function (_super) {
    tslib_1.__extends(ChangeTableCellMiddleRightAlignmentCommand, _super);
    function ChangeTableCellMiddleRightAlignmentCommand() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.horizontalAlignment = paragraph_properties_1.ParagraphAlignment.Right;
        _this.verticalAlignment = table_base_structures_1.TableCellVerticalAlignment.Center;
        return _this;
    }
    return ChangeTableCellMiddleRightAlignmentCommand;
}(ChangeTableCellAlignmentCommandBase));
exports.ChangeTableCellMiddleRightAlignmentCommand = ChangeTableCellMiddleRightAlignmentCommand;
var ChangeTableCellBottomLeftAlignmentCommand = (function (_super) {
    tslib_1.__extends(ChangeTableCellBottomLeftAlignmentCommand, _super);
    function ChangeTableCellBottomLeftAlignmentCommand() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.horizontalAlignment = paragraph_properties_1.ParagraphAlignment.Left;
        _this.verticalAlignment = table_base_structures_1.TableCellVerticalAlignment.Bottom;
        return _this;
    }
    return ChangeTableCellBottomLeftAlignmentCommand;
}(ChangeTableCellAlignmentCommandBase));
exports.ChangeTableCellBottomLeftAlignmentCommand = ChangeTableCellBottomLeftAlignmentCommand;
var ChangeTableCellBottomCenterAlignmentCommand = (function (_super) {
    tslib_1.__extends(ChangeTableCellBottomCenterAlignmentCommand, _super);
    function ChangeTableCellBottomCenterAlignmentCommand() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.horizontalAlignment = paragraph_properties_1.ParagraphAlignment.Center;
        _this.verticalAlignment = table_base_structures_1.TableCellVerticalAlignment.Bottom;
        return _this;
    }
    return ChangeTableCellBottomCenterAlignmentCommand;
}(ChangeTableCellAlignmentCommandBase));
exports.ChangeTableCellBottomCenterAlignmentCommand = ChangeTableCellBottomCenterAlignmentCommand;
var ChangeTableCellBottomRightAlignmentCommand = (function (_super) {
    tslib_1.__extends(ChangeTableCellBottomRightAlignmentCommand, _super);
    function ChangeTableCellBottomRightAlignmentCommand() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.horizontalAlignment = paragraph_properties_1.ParagraphAlignment.Right;
        _this.verticalAlignment = table_base_structures_1.TableCellVerticalAlignment.Bottom;
        return _this;
    }
    return ChangeTableCellBottomRightAlignmentCommand;
}(ChangeTableCellAlignmentCommandBase));
exports.ChangeTableCellBottomRightAlignmentCommand = ChangeTableCellBottomRightAlignmentCommand;
