"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var table_row_properties_history_items_1 = require("../../../core/model/history/items/tables/table-row-properties-history-items");
var control_1 = require("../../../core/model/options/control");
var list_1 = require("@devexpress/utils/lib/utils/list");
var command_base_1 = require("../command-base");
var command_states_1 = require("../command-states");
var ChangeTableRowHeightCommand = (function (_super) {
    tslib_1.__extends(ChangeTableRowHeightCommand, _super);
    function ChangeTableRowHeightCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChangeTableRowHeightCommand.prototype.getState = function () {
        var tableInfo = this.selection.tableInfo;
        var state = new command_states_1.SimpleCommandState(true);
        state.enabled = this.isEnabled() && tableInfo.extendedData.numRows > 0;
        if (state.enabled) {
            var templateHeight_1 = tableInfo.table ? tableInfo.extendedData.rows[0].row.height : undefined;
            if (list_1.ListUtils.allOf(tableInfo.extendedData.rows, function (rowInfo) { return rowInfo.row.height.equals(templateHeight_1); }, 1))
                state.value = templateHeight_1;
        }
        return state;
    };
    ChangeTableRowHeightCommand.prototype.isEnabled = function () {
        return _super.prototype.isEnabled.call(this) && control_1.ControlOptions.isEnabled(this.control.modelManager.richOptions.control.tables);
    };
    ChangeTableRowHeightCommand.prototype.executeCore = function (_state, options) {
        var _this = this;
        var tableInfo = this.selection.tableInfo;
        var table = tableInfo.table;
        var changed = false;
        this.history.beginTransaction();
        list_1.ListUtils.forEach(tableInfo.extendedData.rows, function (rowInfo) {
            if (!table.rows[rowInfo.rowIndex].height.equals(options.param)) {
                _this.history.addAndRedo(new table_row_properties_history_items_1.TableRowHeightHistoryItem(_this.modelManipulator, options.subDocument, table.index, rowInfo.rowIndex, options.param.clone()));
                changed = true;
            }
        });
        this.history.endTransaction();
        return changed;
    };
    return ChangeTableRowHeightCommand;
}(command_base_1.CommandBase));
exports.ChangeTableRowHeightCommand = ChangeTableRowHeightCommand;
