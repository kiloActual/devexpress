"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var apply_style_history_items_1 = require("../../../core/model/history/items/apply-style-history-items");
var control_1 = require("../../../core/model/options/control");
var styles_manager_1 = require("../../../core/model/styles-manager");
var command_states_1 = require("../command-states");
var table_command_base_1 = require("./table-command-base");
var ApplyTableStyleCommand = (function (_super) {
    tslib_1.__extends(ApplyTableStyleCommand, _super);
    function ApplyTableStyleCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ApplyTableStyleCommand.prototype.getState = function () {
        var state = new command_states_1.SimpleCommandState(true, false);
        var tableInfo = this.selection.tableInfo;
        state.enabled = this.isEnabled() && tableInfo.extendedData.numRows > 0;
        var items = [];
        for (var i = 0, style = void 0; style = this.control.modelManager.model.tableStyles[i]; i++) {
            if (!style.hidden && !style.semihidden && !style.deleted)
                items.push({ value: style.styleName, text: style.localizedName, data: style.base64EncodedImage });
        }
        for (var i = 0, ts = void 0; ts = styles_manager_1.StylesManager.presetTableStyles[i]; i++) {
            if (!ts.hidden && !ts.semihidden && !ts.deleted && !this.control.modelManager.model.getTableStyleByName(ts.styleName))
                items.push({ value: ts.styleName, text: ts.localizedName, data: ts.base64EncodedImage });
        }
        state.items = items;
        if (state.enabled) {
            var table = tableInfo.table;
            state.value = table.style ? table.style.styleName : null;
        }
        return state;
    };
    ApplyTableStyleCommand.prototype.isEnabled = function () {
        return _super.prototype.isEnabled.call(this) && control_1.ControlOptions.isEnabled(this.control.modelManager.richOptions.control.tables) && control_1.ControlOptions.isEnabled(this.control.modelManager.richOptions.control.tableStyle);
    };
    ApplyTableStyleCommand.prototype.executeCore = function (_state, parameter) {
        this.history.beginTransaction();
        var style = this.control.modelManager.model.getTableStyleByName(parameter.param) ||
            this.control.modelManager.model.stylesManager.addTableStyle(styles_manager_1.StylesManager.getPresetTableStyleByName(parameter.param).clone());
        var table = this.selection.tableInfo.table;
        this.history.addAndRedo(new apply_style_history_items_1.ApplyTableStyleHistoryItem(this.modelManipulator, this.selection.activeSubDocument, table.index, style));
        this.history.endTransaction();
        return true;
    };
    return ApplyTableStyleCommand;
}(table_command_base_1.TableCommandBase));
exports.ApplyTableStyleCommand = ApplyTableStyleCommand;
