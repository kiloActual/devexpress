"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var layout_position_creator_1 = require("../../../core/layout-engine/layout-position-creator");
var document_layout_details_level_1 = require("../../../core/layout/document-layout-details-level");
var control_1 = require("../../../core/model/options/control");
var common_1 = require("@devexpress/utils/lib/utils/common");
var client_command_1 = require("../client-command");
var command_base_1 = require("../command-base");
var command_states_1 = require("../command-states");
var change_active_sub_document_command_1 = require("../sub-document/change-active-sub-document-command");
var InsertHeaderFooterCommandBase = (function (_super) {
    tslib_1.__extends(InsertHeaderFooterCommandBase, _super);
    function InsertHeaderFooterCommandBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InsertHeaderFooterCommandBase.prototype.getState = function () {
        return new command_states_1.SimpleCommandState(this.isEnabled());
    };
    InsertHeaderFooterCommandBase.prototype.isEnabledInReadOnlyMode = function () {
        return true;
    };
    InsertHeaderFooterCommandBase.prototype.isEnabled = function () {
        return _super.prototype.isEnabled.call(this) &&
            control_1.ControlOptions.isEnabled(this.control.modelManager.richOptions.control.sections) &&
            control_1.ControlOptions.isEnabled(this.control.modelManager.richOptions.control.headersFooters) &&
            this.control.innerClientProperties.viewsSettings.isPrintLayoutView &&
            this.selection.activeSubDocument.isMain();
    };
    InsertHeaderFooterCommandBase.prototype.DEPRECATEDConvertOptionsParameter = function (parameter) {
        if (common_1.isNumber(parameter))
            return parameter;
        var subDocument = this.selection.activeSubDocument;
        var cursorPos = layout_position_creator_1.LayoutPositionMainSubDocumentCreator.ensureLayoutPosition(this.control.layoutFormatterManager, subDocument, this.selection.lastSelectedInterval.start, document_layout_details_level_1.DocumentLayoutDetailsLevel.Page, new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(this.selection.endOfLine), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false));
        return cursorPos.pageIndex;
    };
    InsertHeaderFooterCommandBase.prototype.executeCore = function (_state, options) {
        return this.control.commandManager.getCommand(client_command_1.RichEditClientCommand.ChangeActiveSubDocumentToHeaderFooterByPageIndex).execute(this.control.commandManager.isPublicApiCall, new change_active_sub_document_command_1.ChangeActiveSubDocumentToHeaderFooterByPageIndexCommandParameters(this.control, options.param, this.isHeader()));
    };
    return InsertHeaderFooterCommandBase;
}(command_base_1.CommandBase));
exports.InsertHeaderFooterCommandBase = InsertHeaderFooterCommandBase;
var InsertHeaderCommand = (function (_super) {
    tslib_1.__extends(InsertHeaderCommand, _super);
    function InsertHeaderCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InsertHeaderCommand.prototype.isHeader = function () {
        return true;
    };
    return InsertHeaderCommand;
}(InsertHeaderFooterCommandBase));
exports.InsertHeaderCommand = InsertHeaderCommand;
var InsertFooterCommand = (function (_super) {
    tslib_1.__extends(InsertFooterCommand, _super);
    function InsertFooterCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InsertFooterCommand.prototype.isHeader = function () {
        return false;
    };
    return InsertFooterCommand;
}(InsertHeaderFooterCommandBase));
exports.InsertFooterCommand = InsertFooterCommand;
