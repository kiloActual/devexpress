"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var color_1 = require("../../../core/model/color/color");
var document_properties_history_items_1 = require("../../../core/model/history/items/document-properties-history-items");
var command_base_1 = require("../command-base");
var command_states_1 = require("../command-states");
var ChangePageColorCommand = (function (_super) {
    tslib_1.__extends(ChangePageColorCommand, _super);
    function ChangePageColorCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChangePageColorCommand.prototype.getState = function () {
        var state = new command_states_1.SimpleCommandState(this.isEnabled());
        state.value = this.control.modelManager.model.pageBackColor;
        state.denyUpdateValue = true;
        return state;
    };
    ChangePageColorCommand.prototype.executeCore = function (_state, parameter) {
        var newColor = parameter.param;
        if (newColor != this.control.modelManager.model.pageBackColor) {
            this.history.addAndRedo(new document_properties_history_items_1.PageColorHistoryItem(this.modelManipulator, newColor));
            return true;
        }
        return false;
    };
    ChangePageColorCommand.prototype.isEnabled = function () {
        return _super.prototype.isEnabled.call(this) && !this.control.modelManager.model.isDocumentProtectionEnabled;
    };
    ChangePageColorCommand.prototype.DEPRECATEDConvertOptionsParameter = function (parameter) {
        return color_1.ColorHelper.anyToColor(parameter, color_1.ColorHelper.NO_COLOR);
    };
    return ChangePageColorCommand;
}(command_base_1.CommandBase));
exports.ChangePageColorCommand = ChangePageColorCommand;
