"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var control_1 = require("../../../core/model/options/control");
var command_base_1 = require("../command-base");
var command_states_1 = require("../command-states");
var ToggleFullScreenCommand = (function (_super) {
    tslib_1.__extends(ToggleFullScreenCommand, _super);
    function ToggleFullScreenCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ToggleFullScreenCommand.prototype.getState = function () {
        var state = new command_states_1.SimpleCommandState(this.isEnabled());
        state.value = this.control.owner.isInFullScreenMode;
        return state;
    };
    ToggleFullScreenCommand.prototype.executeCore = function (_state, options) {
        if (options.param == this.control.owner.isInFullScreenMode)
            return false;
        this.control.owner.toggleFullScreenMode();
        return true;
    };
    ToggleFullScreenCommand.prototype.isEnabled = function () {
        return _super.prototype.isEnabled.call(this) && control_1.ControlOptions.isEnabled(this.control.modelManager.richOptions.control.fullScreen);
    };
    ToggleFullScreenCommand.prototype.isEnabledInReadOnlyMode = function () {
        return true;
    };
    return ToggleFullScreenCommand;
}(command_base_1.CommandBase));
exports.ToggleFullScreenCommand = ToggleFullScreenCommand;
