"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var section_property_descriptor_1 = require("../../../core/model/section/section-property-descriptor");
var client_command_1 = require("../client-command");
var change_section_properties_command_base_1 = require("./change-section-properties-command-base");
var SetSectionColumnCountBaseCommand = (function (_super) {
    tslib_1.__extends(SetSectionColumnCountBaseCommand, _super);
    function SetSectionColumnCountBaseCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SetSectionColumnCountBaseCommand.prototype.getDescriptor = function () {
        return section_property_descriptor_1.SectionPropertyDescriptor.columnCount;
    };
    SetSectionColumnCountBaseCommand.prototype.isEnabled = function (options) {
        return _super.prototype.isEnabled.call(this, options) && this.selection.activeSubDocument.isMain();
    };
    SetSectionColumnCountBaseCommand.prototype.getCurrentValue = function () {
        return this.inputPosition.getMergedSectionPropertiesRaw().equalWidthColumns ?
            _super.prototype.getCurrentValue.call(this) :
            undefined;
    };
    SetSectionColumnCountBaseCommand.prototype.getRelatedCommands = function () {
        var _a;
        return _a = {},
            _a[client_command_1.RichEditClientCommand.SetSectionOneColumn] = true,
            _a[client_command_1.RichEditClientCommand.SetSectionTwoColumns] = true,
            _a[client_command_1.RichEditClientCommand.SetSectionThreeColumns] = true,
            _a;
    };
    SetSectionColumnCountBaseCommand.prototype.executeCore = function (state, options) {
        var history = this.history;
        history.beginTransaction();
        var isExecuted = _super.prototype.executeCore.call(this, state, options);
        if (isExecuted) {
            var iter = this.getAffectedSectionsIterator(options.intervalsInfo.intervals);
            while (iter.moveNext())
                history.addAndRedo(new (section_property_descriptor_1.SectionPropertyDescriptor.equalWidthColumns.getHistoryItemConstructor())(this.modelManipulator, iter.obj.interval, true));
        }
        history.endTransaction();
        return isExecuted;
    };
    return SetSectionColumnCountBaseCommand;
}(change_section_properties_command_base_1.ChangeSectionPropertiesCommandBase));
exports.SetSectionColumnCountBaseCommand = SetSectionColumnCountBaseCommand;
var SetSectionColumnCountCommand = (function (_super) {
    tslib_1.__extends(SetSectionColumnCountCommand, _super);
    function SetSectionColumnCountCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SetSectionColumnCountCommand;
}(SetSectionColumnCountBaseCommand));
exports.SetSectionColumnCountCommand = SetSectionColumnCountCommand;
var SetSectionColumnPredefinedCountCommand = (function (_super) {
    tslib_1.__extends(SetSectionColumnPredefinedCountCommand, _super);
    function SetSectionColumnPredefinedCountCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SetSectionColumnPredefinedCountCommand.prototype.getStateValue = function (options) {
        return options.param === this.getCurrentValue();
    };
    return SetSectionColumnPredefinedCountCommand;
}(SetSectionColumnCountBaseCommand));
exports.SetSectionColumnPredefinedCountCommand = SetSectionColumnPredefinedCountCommand;
var SetSectionOneColumnCommand = (function (_super) {
    tslib_1.__extends(SetSectionOneColumnCommand, _super);
    function SetSectionOneColumnCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SetSectionOneColumnCommand.prototype.DEPRECATEDConvertOptionsParameter = function (_parameter) {
        return 1;
    };
    return SetSectionOneColumnCommand;
}(SetSectionColumnPredefinedCountCommand));
exports.SetSectionOneColumnCommand = SetSectionOneColumnCommand;
var SetSectionTwoColumnsCommand = (function (_super) {
    tslib_1.__extends(SetSectionTwoColumnsCommand, _super);
    function SetSectionTwoColumnsCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SetSectionTwoColumnsCommand.prototype.DEPRECATEDConvertOptionsParameter = function (_parameter) {
        return 2;
    };
    return SetSectionTwoColumnsCommand;
}(SetSectionColumnPredefinedCountCommand));
exports.SetSectionTwoColumnsCommand = SetSectionTwoColumnsCommand;
var SetSectionThreeColumnsCommand = (function (_super) {
    tslib_1.__extends(SetSectionThreeColumnsCommand, _super);
    function SetSectionThreeColumnsCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SetSectionThreeColumnsCommand.prototype.DEPRECATEDConvertOptionsParameter = function (_parameter) {
        return 3;
    };
    return SetSectionThreeColumnsCommand;
}(SetSectionColumnPredefinedCountCommand));
exports.SetSectionThreeColumnsCommand = SetSectionThreeColumnsCommand;
