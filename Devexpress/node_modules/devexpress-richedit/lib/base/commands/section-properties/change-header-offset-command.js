"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var section_property_descriptor_1 = require("../../../core/model/section/section-property-descriptor");
var change_section_properties_command_base_1 = require("./change-section-properties-command-base");
var ChangeHeaderOffsetCommand = (function (_super) {
    tslib_1.__extends(ChangeHeaderOffsetCommand, _super);
    function ChangeHeaderOffsetCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChangeHeaderOffsetCommand.prototype.getDescriptor = function () {
        return section_property_descriptor_1.SectionPropertyDescriptor.headerOffset;
    };
    return ChangeHeaderOffsetCommand;
}(change_section_properties_command_base_1.ChangeSectionPropertiesCommandBase));
exports.ChangeHeaderOffsetCommand = ChangeHeaderOffsetCommand;
var ChangeHeaderOffsetRibbonCommand = (function (_super) {
    tslib_1.__extends(ChangeHeaderOffsetRibbonCommand, _super);
    function ChangeHeaderOffsetRibbonCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChangeHeaderOffsetRibbonCommand.prototype.DEPRECATEDConvertOptionsParameter = function (parameter) {
        return this.control.uiUnitConverter.UIToTwips(parameter);
    };
    ChangeHeaderOffsetRibbonCommand.prototype.getStateValue = function (options) {
        if (options === void 0) { options = this.convertToCommandOptions(null); }
        return this.control.uiUnitConverter.twipsToUI(_super.prototype.getStateValue.call(this, options));
    };
    return ChangeHeaderOffsetRibbonCommand;
}(ChangeHeaderOffsetCommand));
exports.ChangeHeaderOffsetRibbonCommand = ChangeHeaderOffsetRibbonCommand;
