"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var command_request_1 = require("../../../core/model/json/command-request");
var command_type_1 = require("../../../core/model/json/command-type");
var json_top_level_enums_1 = require("../../../core/model/json/enums/json-top-level-enums");
var selection_intervals_info_1 = require("../../../core/selection/selection-intervals-info");
var command_base_1 = require("../command-base");
var command_states_1 = require("../command-states");
var GetRtfCommandOptions = (function (_super) {
    tslib_1.__extends(GetRtfCommandOptions, _super);
    function GetRtfCommandOptions(interval, callback, subDocument) {
        var _this = _super.call(this, null) || this;
        _this.interval = interval;
        _this.callback = callback;
        if (!_this.intervalsInfo)
            _this.intervalsInfo = selection_intervals_info_1.SelectionIntervalsInfo.fromInterval(subDocument, interval);
        return _this;
    }
    return GetRtfCommandOptions;
}(command_base_1.CommandOptions));
exports.GetRtfCommandOptions = GetRtfCommandOptions;
var GetRtfCommand = (function (_super) {
    tslib_1.__extends(GetRtfCommand, _super);
    function GetRtfCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GetRtfCommand.prototype.getState = function () {
        return new command_states_1.SimpleCommandState(this.isEnabled());
    };
    GetRtfCommand.prototype.executeCore = function (_state, options) {
        var reqParams = {};
        reqParams[json_top_level_enums_1.JSONGetRtfCommand.Position] = options.interval.start;
        reqParams[json_top_level_enums_1.JSONGetRtfCommand.Length] = options.interval.length;
        reqParams[json_top_level_enums_1.JSONGetRtfCommand.SubDocumentId] = options.subDocument.id;
        var request = new command_request_1.LoadCommandRequest(command_type_1.CommandType.GetRtf, options.subDocument.id, reqParams);
        this.control.serverDispatcher.pushRequest(request, new command_request_1.RequestParams(false, true, true));
        this.control.commandManager.rtfCommandsOptions[request.id] = options;
        return true;
    };
    GetRtfCommand.prototype.handleResponce = function (responce) {
        var id = responce[json_top_level_enums_1.JSONGetRtfCommand.Id];
        var options = this.control.commandManager.rtfCommandsOptions[id];
        delete this.control.commandManager.rtfCommandsOptions[id];
        options.callback(responce[json_top_level_enums_1.JSONGetRtfCommand.ResultRtf]);
    };
    return GetRtfCommand;
}(command_base_1.CommandBase));
exports.GetRtfCommand = GetRtfCommand;
