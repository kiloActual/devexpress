"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var character_property_descriptor_1 = require("../../../core/model/character/character-property-descriptor");
var common_1 = require("@devexpress/utils/lib/utils/common");
var change_character_properties_command_base_1 = require("./change-character-properties-command-base");
var ChangeFontNameCommand = (function (_super) {
    tslib_1.__extends(ChangeFontNameCommand, _super);
    function ChangeFontNameCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChangeFontNameCommand.prototype.getDescriptor = function () {
        return character_property_descriptor_1.CharacterPropertyDescriptor.fontInfo;
    };
    ChangeFontNameCommand.prototype.DEPRECATEDConvertOptionsParameter = function (parameter) {
        if (common_1.isNumber(parameter))
            return this.control.modelManager.model.cache.fontInfoCache.getItemByJsonKey(parameter);
        else if (typeof parameter == "string") {
            var fontInfo = this.control.modelManager.model.cache.fontInfoCache.getItemByName(parameter);
            if (!fontInfo) {
                var mergedCharacterProperties = this.inputPosition.getMergedCharacterPropertiesFull();
                if (mergedCharacterProperties.fontInfo) {
                    fontInfo = mergedCharacterProperties.fontInfo.clone();
                    fontInfo.name = parameter;
                    fontInfo.cssString = parameter.match(/^\w+\s/gi) ? "'" + parameter + "'" : parameter;
                    this.modelManipulator.font.loadFontInfo(fontInfo, this.selection.activeSubDocument, this.selection.intervals, this.control.measurer);
                    return fontInfo;
                }
            }
            if (fontInfo)
                return fontInfo;
        }
        return this.getCurrentValue();
    };
    return ChangeFontNameCommand;
}(change_character_properties_command_base_1.ChangeCharacterPropertiesCommandBase));
exports.ChangeFontNameCommand = ChangeFontNameCommand;
