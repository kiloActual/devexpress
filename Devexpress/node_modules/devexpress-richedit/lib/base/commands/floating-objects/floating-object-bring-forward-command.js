"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var anchor_info_property_history_item_1 = require("../../../core/model/history/items/floating-objects/anchor-info-property-history-item");
var sub_document_1 = require("../../../core/model/sub-document");
var errors_1 = require("@devexpress/utils/lib/errors");
var fixed_1 = require("@devexpress/utils/lib/intervals/fixed");
var command_base_1 = require("../command-base");
var command_states_1 = require("../command-states");
var FloatingObjectBringForwardBackwardCommandBase = (function (_super) {
    tslib_1.__extends(FloatingObjectBringForwardBackwardCommandBase, _super);
    function FloatingObjectBringForwardBackwardCommandBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FloatingObjectBringForwardBackwardCommandBase.prototype.isBehindDoc = function () {
        throw new Error(errors_1.Errors.NotImplemented);
    };
    FloatingObjectBringForwardBackwardCommandBase.prototype.getState = function () {
        return new command_states_1.SimpleCommandState(this.isEnabled());
    };
    FloatingObjectBringForwardBackwardCommandBase.prototype.canModify = function () {
        return true;
    };
    FloatingObjectBringForwardBackwardCommandBase.prototype.isEnabled = function () {
        var specialRunInfo = this.selection.specialRunInfo;
        return _super.prototype.isEnabled.call(this) && specialRunInfo.isSelected() && specialRunInfo.isSelectedAnchorObject &&
            this.getFloatingObjectParentSubDocument().isEditable([new fixed_1.FixedInterval(specialRunInfo.getPosition(), 1)]);
    };
    FloatingObjectBringForwardBackwardCommandBase.prototype.executeCore = function (_state, _parameter) {
        var modelManipulator = this.modelManipulator;
        var parentSubDocument = this.selection.specialRunInfo.getParentSubDocument();
        var runPosition = this.selection.specialRunInfo.getPosition();
        var run = parentSubDocument.getRunByPosition(runPosition);
        if (run && run.anchorInfo.isBehindDoc != this.isBehindDoc())
            this.history.addAndRedo(new anchor_info_property_history_item_1.AnchorInfoPropertyHistoryItem(modelManipulator, new sub_document_1.SubDocumentInterval(parentSubDocument, new fixed_1.FixedInterval(runPosition, 1)), this.isBehindDoc(), modelManipulator.floatingObject.anchorInfo.isBehindDoc));
        return true;
    };
    return FloatingObjectBringForwardBackwardCommandBase;
}(command_base_1.CommandBase));
exports.FloatingObjectBringForwardBackwardCommandBase = FloatingObjectBringForwardBackwardCommandBase;
var FloatingObjectBringForwardCommand = (function (_super) {
    tslib_1.__extends(FloatingObjectBringForwardCommand, _super);
    function FloatingObjectBringForwardCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FloatingObjectBringForwardCommand.prototype.executeCore = function (_state, _parameter) {
        return this.modelManipulator.floatingObject.zOrder.bringForward(this.control.modelManager, this.selection.specialRunInfo.getParentSubDocument(), this.selection.specialRunInfo.getPosition());
    };
    return FloatingObjectBringForwardCommand;
}(FloatingObjectBringForwardBackwardCommandBase));
exports.FloatingObjectBringForwardCommand = FloatingObjectBringForwardCommand;
var FloatingObjectBringToFrontCommand = (function (_super) {
    tslib_1.__extends(FloatingObjectBringToFrontCommand, _super);
    function FloatingObjectBringToFrontCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FloatingObjectBringToFrontCommand.prototype.executeCore = function (_state, _parameter) {
        return this.modelManipulator.floatingObject.zOrder.bringToFront(this.control.modelManager, this.selection.specialRunInfo.getParentSubDocument(), this.selection.specialRunInfo.getPosition());
    };
    return FloatingObjectBringToFrontCommand;
}(FloatingObjectBringForwardBackwardCommandBase));
exports.FloatingObjectBringToFrontCommand = FloatingObjectBringToFrontCommand;
var FloatingObjectSendBackwardCommand = (function (_super) {
    tslib_1.__extends(FloatingObjectSendBackwardCommand, _super);
    function FloatingObjectSendBackwardCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FloatingObjectSendBackwardCommand.prototype.executeCore = function (_state, _parameter) {
        return this.modelManipulator.floatingObject.zOrder.sendBackward(this.control.modelManager, this.selection.specialRunInfo.getParentSubDocument(), this.selection.specialRunInfo.getPosition());
    };
    return FloatingObjectSendBackwardCommand;
}(FloatingObjectBringForwardBackwardCommandBase));
exports.FloatingObjectSendBackwardCommand = FloatingObjectSendBackwardCommand;
var FloatingObjectSendToBackCommand = (function (_super) {
    tslib_1.__extends(FloatingObjectSendToBackCommand, _super);
    function FloatingObjectSendToBackCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FloatingObjectSendToBackCommand.prototype.executeCore = function (_state, _parameter) {
        return this.modelManipulator.floatingObject.zOrder.sendToBack(this.control.modelManager, this.selection.specialRunInfo.getParentSubDocument(), this.selection.specialRunInfo.getPosition());
    };
    return FloatingObjectSendToBackCommand;
}(FloatingObjectBringForwardBackwardCommandBase));
exports.FloatingObjectSendToBackCommand = FloatingObjectSendToBackCommand;
var FloatingObjectBringInFrontOfTextCommand = (function (_super) {
    tslib_1.__extends(FloatingObjectBringInFrontOfTextCommand, _super);
    function FloatingObjectBringInFrontOfTextCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FloatingObjectBringInFrontOfTextCommand.prototype.isBehindDoc = function () {
        return false;
    };
    return FloatingObjectBringInFrontOfTextCommand;
}(FloatingObjectBringForwardBackwardCommandBase));
exports.FloatingObjectBringInFrontOfTextCommand = FloatingObjectBringInFrontOfTextCommand;
var FloatingObjectSendBehindTextCommand = (function (_super) {
    tslib_1.__extends(FloatingObjectSendBehindTextCommand, _super);
    function FloatingObjectSendBehindTextCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FloatingObjectSendBehindTextCommand.prototype.isBehindDoc = function () {
        return true;
    };
    return FloatingObjectSendBehindTextCommand;
}(FloatingObjectBringForwardBackwardCommandBase));
exports.FloatingObjectSendBehindTextCommand = FloatingObjectSendBehindTextCommand;
