"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var command_request_1 = require("../../../core/model/json/command-request");
var command_type_1 = require("../../../core/model/json/command-type");
var json_general_enums_1 = require("../../../core/model/json/enums/json-general-enums");
var command_base_1 = require("../command-base");
var command_states_1 = require("../command-states");
var ForceSyncWithServerCommand = (function (_super) {
    tslib_1.__extends(ForceSyncWithServerCommand, _super);
    function ForceSyncWithServerCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ForceSyncWithServerCommand.prototype.getState = function () {
        return new command_states_1.SimpleCommandState(_super.prototype.isEnabled.call(this));
    };
    ForceSyncWithServerCommand.prototype.canModify = function () {
        return true;
    };
    ForceSyncWithServerCommand.prototype.executeCore = function (_state, options) {
        this.control.commandManager.forceSyncWithServerCallbackManager.addCallback(this.control, options.param);
        return true;
    };
    return ForceSyncWithServerCommand;
}(command_base_1.CommandBase));
exports.ForceSyncWithServerCommand = ForceSyncWithServerCommand;
var ForceSyncWithServerCallbackManager = (function () {
    function ForceSyncWithServerCallbackManager() {
        this.reset();
    }
    ForceSyncWithServerCallbackManager.prototype.reset = function () {
        this.map = {};
    };
    ForceSyncWithServerCallbackManager.prototype.addCallback = function (control, callback) {
        var _a;
        var id = ForceSyncWithServerCallbackManager.id++;
        var request = new command_request_1.LoadCommandRequest(command_type_1.CommandType.ForceSyncWithServer, control.modelManager.model.mainSubDocument.id, (_a = {}, _a[json_general_enums_1.JSONForceSyncWithServerCommand.Id] = id, _a));
        control.serverDispatcher.pushRequest(request, new command_request_1.RequestParams(false, true, false));
        this.map[id] = callback;
    };
    ForceSyncWithServerCallbackManager.prototype.handleResponce = function (responce) {
        var id = responce[json_general_enums_1.JSONForceSyncWithServerCommand.Id];
        var callback = this.map[id];
        if (callback) {
            delete this.map[id];
            callback();
        }
    };
    ForceSyncWithServerCallbackManager.id = 0;
    return ForceSyncWithServerCallbackManager;
}());
exports.ForceSyncWithServerCallbackManager = ForceSyncWithServerCallbackManager;
