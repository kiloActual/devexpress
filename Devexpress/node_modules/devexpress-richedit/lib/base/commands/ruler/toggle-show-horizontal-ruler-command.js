"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var command_base_1 = require("../command-base");
var command_states_1 = require("../command-states");
var ToggleShowHorizontalRulerCommand = (function (_super) {
    tslib_1.__extends(ToggleShowHorizontalRulerCommand, _super);
    function ToggleShowHorizontalRulerCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ToggleShowHorizontalRulerCommand.prototype.getState = function () {
        return new command_states_1.SimpleCommandState(this.isEnabled(), this.control.horizontalRulerControl.getVisible());
    };
    ToggleShowHorizontalRulerCommand.prototype.executeCore = function (_state, options) {
        var visible = this.control.horizontalRulerControl.getVisible();
        if (options.param == visible)
            return false;
        this.control.horizontalRulerControl.setVisible(!visible);
        this.control.owner.adjustControl();
        return true;
    };
    ToggleShowHorizontalRulerCommand.prototype.isEnabled = function (_options) {
        return !this.control.innerClientProperties.viewsSettings.isSimpleView && _super.prototype.isEnabled.call(this, _options);
    };
    ToggleShowHorizontalRulerCommand.prototype.isEnabledInReadOnlyMode = function () {
        return true;
    };
    return ToggleShowHorizontalRulerCommand;
}(command_base_1.CommandBase));
exports.ToggleShowHorizontalRulerCommand = ToggleShowHorizontalRulerCommand;
