"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var layout_position_creator_1 = require("../../../core/layout-engine/layout-position-creator");
var document_layout_details_level_1 = require("../../../core/layout/document-layout-details-level");
var rectangle_1 = require("@devexpress/utils/lib/geometry/rectangle");
var base_visualizer_1 = require("./base-visualizer");
var SMAL_ICON_SIZE = 16;
var AnchorVisualizer = (function (_super) {
    tslib_1.__extends(AnchorVisualizer, _super);
    function AnchorVisualizer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AnchorVisualizer.prototype.NotifySelectionChanged = function (_selection) {
        if (this.isFloatingObjectSelected())
            this.show();
        else
            this.hide();
    };
    AnchorVisualizer.prototype.NotifyScrollPositionChanged = function () { };
    AnchorVisualizer.prototype.NotifyPagesReady = function (_pageChanges) {
        if (this.isFloatingObjectSelected())
            this.show();
    };
    AnchorVisualizer.prototype.NotifyFullyFormatted = function (_pageCount) { };
    ;
    AnchorVisualizer.prototype.show = function () {
        var pos = this.control.selection.specialRunInfo.getPosition();
        var subDocument = this.control.selection.specialRunInfo.getParentSubDocument();
        var layoutPosition = (subDocument.isMain()
            ? new layout_position_creator_1.LayoutPositionMainSubDocumentCreator(this.control.layout, subDocument, pos, document_layout_details_level_1.DocumentLayoutDetailsLevel.Character)
            : new layout_position_creator_1.LayoutPositionOtherSubDocumentCreator(this.control.layout, subDocument, pos, this.control.selection.pageIndex, document_layout_details_level_1.DocumentLayoutDetailsLevel.Character))
            .create(new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(true));
        if (layoutPosition != null) {
            var x = layoutPosition.getLayoutX(this.control.measurer);
            var y = layoutPosition.getLayoutY();
            this.bounds = new rectangle_1.Rectangle(x - SMAL_ICON_SIZE, y, SMAL_ICON_SIZE, SMAL_ICON_SIZE);
            this.pageIndex = layoutPosition.pageIndex;
            this.raiseShow();
        }
    };
    AnchorVisualizer.prototype.isFloatingObjectSelected = function () {
        return this.control.selection.specialRunInfo.isSelected() && this.control.selection.specialRunInfo.isSelectedAnchorObject;
    };
    return AnchorVisualizer;
}(base_visualizer_1.BaseVisualizer));
exports.AnchorVisualizer = AnchorVisualizer;
