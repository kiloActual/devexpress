"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var document_layout_details_level_1 = require("../../../core/layout/document-layout-details-level");
var layout_position_1 = require("../../../core/layout/layout-position");
var HitTestResult = (function (_super) {
    tslib_1.__extends(HitTestResult, _super);
    function HitTestResult(subDocument) {
        var _this = _super.call(this, document_layout_details_level_1.DocumentLayoutDetailsLevel.None) || this;
        _this.subDocument = null;
        _this.deviations = {};
        _this.subDocument = subDocument;
        return _this;
    }
    HitTestResult.prototype.correctAsVisibleBox = function () {
        if (!this.box || this.box.isVisible())
            return;
        this.deviations[document_layout_details_level_1.DocumentLayoutDetailsLevel.Box] = undefined;
        this.exactlyDetailLevel = Math.min(this.exactlyDetailLevel, document_layout_details_level_1.DocumentLayoutDetailsLevel.Row);
        var boxIndex = this.row.getLastVisibleBoxIndex();
        this.boxIndex = Math.max(0, boxIndex);
        this.box = this.row.boxes[this.boxIndex];
        this.charOffset = boxIndex < 0 ? 0 : this.box.getLength();
    };
    HitTestResult.prototype.getPosition = function () {
        var result = 0;
        if (this.page && this.subDocument.isMain())
            result += this.page.getPosition();
        if (this.pageArea)
            result += this.pageArea.pageOffset;
        if (this.column)
            result += this.column.pageAreaOffset;
        if (this.row)
            result += this.row.columnOffset;
        if (this.box)
            result += this.box.rowOffset;
        if (this.charOffset >= 0)
            result += this.charOffset;
        return result;
    };
    return HitTestResult;
}(layout_position_1.LayoutPosition));
exports.HitTestResult = HitTestResult;
