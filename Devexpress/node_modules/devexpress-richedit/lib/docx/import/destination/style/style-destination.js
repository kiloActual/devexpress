"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var map_creator_1 = require("../../../../base-utils/map-creator");
var string_1 = require("@devexpress/utils/lib/utils/map/string");
var constants_1 = require("../../../utils/constants");
var linked_style_id_destination_1 = require("./base/linked-style-id-destination");
var next_style_destination_1 = require("./base/next-style-destination");
var style_hidden_destination_1 = require("./base/style-hidden-destination");
var style_name_destination_1 = require("./base/style-name-destination");
var style_parent_id_destination_1 = require("./base/style-parent-id-destination");
var style_qformat_destination_1 = require("./base/style-qformat-destination");
var style_semi_hidden_destination_1 = require("./base/style-semi-hidden-destination");
var style_conditional_table_formatting_1 = require("./style-conditional-table-formatting");
var style_destination_base_1 = require("./style-destination-base");
var StyleDestination = (function (_super) {
    tslib_1.__extends(StyleDestination, _super);
    function StyleDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(StyleDestination.prototype, "currImporter", {
        get: function () { return this.data.stylesImporter.currImporter; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StyleDestination.prototype, "elementHandlerTable", {
        get: function () { return StyleDestination.handlerTable; },
        enumerable: true,
        configurable: true
    });
    StyleDestination.prototype.processElementOpen = function (reader) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                _super.prototype.processElementOpen.call(this, reader);
                switch (reader.getAttributeNS('type', this.data.constants.namespaces[constants_1.DocxNsType.WordProcessing].namespace)) {
                    case 'character':
                        this.data.stylesImporter.currImporter = this.data.stylesImporter.characterManager;
                        break;
                    case 'table':
                        this.data.stylesImporter.currImporter = this.data.stylesImporter.tableManager;
                        break;
                    case 'tableCell':
                        this.data.stylesImporter.currImporter = this.data.stylesImporter.tableCellManager;
                        break;
                    case 'numbering':
                        this.data.stylesImporter.currImporter = this.data.stylesImporter.numberingListManager;
                        break;
                    case 'paragraph':
                    default:
                        this.data.stylesImporter.currImporter = this.data.stylesImporter.paragraphManager;
                        break;
                }
                this.currImporter.startImport();
                this.currImporter.currInfo.id = reader.getAttributeNS('styleId', this.data.constants.namespaces[constants_1.DocxNsType.WordProcessing].namespace);
                this.currImporter.currInfo.isDefault = this.data.readerHelper.getWpSTOnOffValue(reader, 'default', false);
                return [2];
            });
        });
    };
    StyleDestination.prototype.processElementClose = function (reader) {
        _super.prototype.processElementClose.call(this, reader);
        this.currImporter.endImport(this);
    };
    StyleDestination.handlerTable = new map_creator_1.MapCreator(string_1.StringMapUtils.map(style_destination_base_1.StyleDestinationBase.handlerTable, function (e) { return e; }))
        .add('basedOn', function (data, _reader) { return new style_parent_id_destination_1.StyleParentIdDestination(data); })
        .add('hidden', function (data, _reader) { return new style_hidden_destination_1.StyleHiddenDestination(data); })
        .add('qFormat', function (data, _reader) { return new style_qformat_destination_1.StyleQFormatDestination(data); })
        .add('semiHidden', function (data, _reader) { return new style_semi_hidden_destination_1.StyleSemiHiddenDestination(data); })
        .add('name', function (data, _reader) { return new style_name_destination_1.StyleNameDestination(data); })
        .add('link', function (data, _reader) { return new linked_style_id_destination_1.LinkedStyleIdDestination(data); })
        .add('next', function (data, _reader) { return new next_style_destination_1.NextStyleDestination(data); })
        .add('tblStylePr', function (data, _reader) { return new style_conditional_table_formatting_1.StyleConditionalTableFormatting(data); })
        .get();
    return StyleDestination;
}(style_destination_base_1.StyleDestinationBase));
exports.StyleDestination = StyleDestination;
