"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var font_info_cache_1 = require("../../../../../../core/model/caches/hashed-caches/font-info-cache");
var string_1 = require("@devexpress/utils/lib/utils/string");
var word_processing_mlvalue_1 = require("../../../../../translation-table/word-processing-mlvalue");
var font_name_destination_1 = require("../../../character-properties/properties/font-name-destination");
var DefaultFontNameDestination = (function (_super) {
    tslib_1.__extends(DefaultFontNameDestination, _super);
    function DefaultFontNameDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DefaultFontNameDestination.prototype.readFontName = function (reader) {
        var value = reader.getAttributeNS('ascii', this.data.constants.wordProcessingNamespaceConst);
        if (!string_1.StringUtils.isNullOrEmpty(value))
            return value;
        var nameByAnsi = reader.getAttributeNS(new word_processing_mlvalue_1.WordProcessingMLValue('hAnsi', 'h-ansi').openXmlValue, this.data.constants.wordProcessingNamespaceConst);
        if (!string_1.StringUtils.isNullOrEmpty(nameByAnsi))
            return nameByAnsi;
        var nameByCs = reader.getAttributeNS('cs', this.data.constants.wordProcessingNamespaceConst);
        if (!string_1.StringUtils.isNullOrEmpty(nameByCs))
            return nameByCs;
        var eastAsia = reader.getAttributeNS('eastAsia', this.data.constants.wordProcessingNamespaceConst);
        if (!string_1.StringUtils.isNullOrEmpty(eastAsia))
            return eastAsia;
        return font_info_cache_1.FontInfoCache.defaultFontName;
    };
    return DefaultFontNameDestination;
}(font_name_destination_1.FontNameDestination));
exports.DefaultFontNameDestination = DefaultFontNameDestination;
