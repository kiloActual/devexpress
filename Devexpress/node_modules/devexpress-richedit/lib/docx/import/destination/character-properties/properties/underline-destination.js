"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var character_property_descriptor_1 = require("../../../../../core/model/character/character-property-descriptor");
var enums_1 = require("../../../../../core/model/character/enums");
var string_1 = require("@devexpress/utils/lib/utils/string");
var translation_tables_1 = require("../../../../translation-table/translation-tables");
var constants_1 = require("../../../../utils/constants");
var open_xml_color_import_helper_1 = require("../../../color/open-xml-color-import-helper");
var character_formatting_leaf_element_destination_1 = require("../character-formatting-leaf-element-destination");
var UnderlineDestination = (function (_super) {
    tslib_1.__extends(UnderlineDestination, _super);
    function UnderlineDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UnderlineDestination.prototype.processElementOpen = function (reader) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                this.importUnderlineType(reader);
                this.importUnderlineColor(reader);
                return [2];
            });
        });
    };
    UnderlineDestination.prototype.getDescriptor = function () {
        return character_property_descriptor_1.CharacterPropertyDescriptor.underlineType;
    };
    UnderlineDestination.prototype.importUnderlineType = function (reader) {
        var value = reader.getAttributeNS('val', this.data.constants.namespaces[constants_1.DocxNsType.WordProcessing].namespace);
        if (!string_1.StringUtils.isNullOrEmpty(value)) {
            if (value == 'words') {
                this.setProperty(enums_1.UnderlineType.Single);
                this.characterProperties.underlineWordsOnly = true;
                this.characterProperties.setUseValue(enums_1.CharacterPropertiesMask.UseUnderlineWordsOnly, true);
            }
            else
                this.setProperty(translation_tables_1.TranslationTables.underlineTables.getValueOnImport(value, enums_1.UnderlineType.Single));
        }
        else
            this.setProperty(enums_1.UnderlineType.None);
    };
    UnderlineDestination.prototype.importUnderlineColor = function (reader) {
        var colorModelInfo = open_xml_color_import_helper_1.OpenXmlColorImportHelper.createColorModelInfo(this.data, reader, 'color');
        this.characterProperties.underlineColor = this.data.documentModel.cache.colorModelInfoCache.getItem(colorModelInfo);
        this.characterProperties.setUseValue(enums_1.CharacterPropertiesMask.UseUnderlineColorIndex, true);
    };
    return UnderlineDestination;
}(character_formatting_leaf_element_destination_1.CharacterFormattingLeafElementDestination));
exports.UnderlineDestination = UnderlineDestination;
