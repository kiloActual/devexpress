"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var log_1 = require("../../../core/rich-utils/debug/logger/base-logger/log");
var log_source_1 = require("../../../core/rich-utils/debug/logger/base-logger/log-source");
var xml_reader_1 = require("../../zip/xml-reader");
var ElementDestination = (function () {
    function ElementDestination(data) {
        this.forbidProcessElementOpenClose = false;
        this.data = data;
    }
    Object.defineProperty(ElementDestination.prototype, "documentModel", {
        get: function () { return this.data.documentModel; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElementDestination.prototype, "subDocument", {
        get: function () { return this.data.subDocument; },
        enumerable: true,
        configurable: true
    });
    ElementDestination.prototype.processElementOpen = function (_reader) {
        return tslib_1.__awaiter(this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            return [2];
        }); });
    };
    ElementDestination.prototype.processElementClose = function (_reader) { };
    ElementDestination.prototype.processText = function (_reader) {
        return true;
    };
    ElementDestination.prototype.onAlternateContent = function () {
        return new AlternateContentDestination(this.data, this);
    };
    ElementDestination.prototype.isChoiceNamespaceSupported = function (_requeriesNamespaceUri) {
        return false;
    };
    ElementDestination.prototype.processCurrentElementInternal = function (reader) {
        return this.processCurrentElement(reader);
    };
    ElementDestination.prototype.process = function (reader) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a, nextDestination, destination;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = reader.nodeType;
                        switch (_a) {
                            case xml_reader_1.XmlNodeType.Element: return [3, 1];
                            case xml_reader_1.XmlNodeType.SignificantWhitespace: return [3, 6];
                            case xml_reader_1.XmlNodeType.CDATA: return [3, 6];
                            case xml_reader_1.XmlNodeType.Text: return [3, 6];
                            case xml_reader_1.XmlNodeType.EndElement: return [3, 7];
                        }
                        return [3, 8];
                    case 1:
                        log_1.Log.print(log_source_1.LogSource.DocxImporter, 'process', function () { return "Element \"" + reader.localName + "\""; });
                        nextDestination = this.processCurrentElement(reader);
                        if (!nextDestination) return [3, 4];
                        this.data.destinationStack.push(nextDestination);
                        if (!!this.data.destinationStack.last.forbidProcessElementOpenClose) return [3, 3];
                        return [4, this.data.destinationStack.last.processElementOpen(reader)];
                    case 2:
                        _b.sent();
                        _b.label = 3;
                    case 3: return [3, 5];
                    case 4:
                        reader.skipElement();
                        _b.label = 5;
                    case 5: return [3, 8];
                    case 6:
                        {
                            log_1.Log.print(log_source_1.LogSource.DocxImporter, 'process', function () { return "Text \"" + reader.value + "\""; });
                            return [2, this.data.destinationStack.last.processText(reader)];
                        }
                        _b.label = 7;
                    case 7:
                        {
                            log_1.Log.print(log_source_1.LogSource.DocxImporter, 'process', function () { return "Element end \"" + reader.localName + "\""; });
                            destination = this.data.destinationStack.pop();
                            if (!destination.forbidProcessElementOpenClose)
                                destination.processElementClose(reader);
                            return [3, 8];
                        }
                        _b.label = 8;
                    case 8: return [2, Promise.resolve()];
                }
            });
        });
    };
    ElementDestination.prototype.peek = function () {
        return this;
    };
    ElementDestination.prototype.shouldProcessWhitespaces = function (_reader) {
        return false;
    };
    ElementDestination.prototype.processCurrentElement = function (reader) {
        var localName = reader.localName;
        if (localName == 'AlternateContent')
            return this.onAlternateContent();
        var handler = this.elementHandlerTable[localName];
        return handler ? handler(this.data, reader) : null;
    };
    return ElementDestination;
}());
exports.ElementDestination = ElementDestination;
var AlternateContentDestination = (function (_super) {
    tslib_1.__extends(AlternateContentDestination, _super);
    function AlternateContentDestination(data, parentDestination) {
        var _this = _super.call(this, data) || this;
        _this.parentDestination = parentDestination;
        parentDestination.forbidProcessElementOpenClose = true;
        return _this;
    }
    Object.defineProperty(AlternateContentDestination.prototype, "elementHandlerTable", {
        get: function () {
            this.data.options.throwInvalidFile('AlternateContentDestination exception');
            return null;
        },
        enumerable: true,
        configurable: true
    });
    AlternateContentDestination.prototype.processElementClose = function (reader) {
        _super.prototype.processElementClose.call(this, reader);
        this.parentDestination.forbidProcessElementOpenClose = false;
    };
    AlternateContentDestination.prototype.processCurrentElement = function (reader) {
        var localName = reader.localName;
        if (localName == 'Choice' && !this.hasProcessedChoice) {
            var requeries = reader.getAttribute('Requires');
            var namespaceUri = this.data.constants.lookupNamespaceByPrefix(requeries);
            if (this.parentDestination.isChoiceNamespaceSupported(namespaceUri)) {
                this.hasProcessedChoice = true;
                return this.parentDestination;
            }
        }
        else if (localName == 'Fallback' && !this.hasProcessedChoice)
            return this.parentDestination;
        return new EmptyDestination(this.data);
    };
    return AlternateContentDestination;
}(ElementDestination));
exports.AlternateContentDestination = AlternateContentDestination;
var LeafElementDestination = (function (_super) {
    tslib_1.__extends(LeafElementDestination, _super);
    function LeafElementDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(LeafElementDestination.prototype, "elementHandlerTable", {
        get: function () {
            return {};
        },
        enumerable: true,
        configurable: true
    });
    return LeafElementDestination;
}(ElementDestination));
exports.LeafElementDestination = LeafElementDestination;
var LeafSetMaskedPropertyDestination = (function (_super) {
    tslib_1.__extends(LeafSetMaskedPropertyDestination, _super);
    function LeafSetMaskedPropertyDestination(data, properties, desc) {
        var _this = _super.call(this, data) || this;
        _this.properties = properties;
        _this.desc = desc;
        return _this;
    }
    return LeafSetMaskedPropertyDestination;
}(LeafElementDestination));
exports.LeafSetMaskedPropertyDestination = LeafSetMaskedPropertyDestination;
var EmptyDestination = (function (_super) {
    tslib_1.__extends(EmptyDestination, _super);
    function EmptyDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return EmptyDestination;
}(LeafElementDestination));
exports.EmptyDestination = EmptyDestination;
var TransparentDestination = (function (_super) {
    tslib_1.__extends(TransparentDestination, _super);
    function TransparentDestination(data) {
        var _this = _super.call(this, data) || this;
        _this.destination = _this.data.destinationStack.last;
        return _this;
    }
    Object.defineProperty(TransparentDestination.prototype, "elementHandlerTable", {
        get: function () { return {}; },
        enumerable: true,
        configurable: true
    });
    TransparentDestination.prototype.processElementOpen = function (_reader) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2];
            });
        });
    };
    TransparentDestination.prototype.processElementClose = function (_reader) {
    };
    TransparentDestination.prototype.processText = function (reader) {
        return this.destination.processText(reader);
    };
    TransparentDestination.prototype.peek = function () {
        return this.destination.peek();
    };
    TransparentDestination.prototype.processCurrentElement = function (reader) {
        return this.destination.processCurrentElementInternal(reader);
    };
    return TransparentDestination;
}(ElementDestination));
exports.TransparentDestination = TransparentDestination;
var CustomXmlDestination = (function (_super) {
    tslib_1.__extends(CustomXmlDestination, _super);
    function CustomXmlDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CustomXmlDestination;
}(TransparentDestination));
exports.CustomXmlDestination = CustomXmlDestination;
