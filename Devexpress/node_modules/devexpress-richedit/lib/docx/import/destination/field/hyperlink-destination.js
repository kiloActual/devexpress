"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var map_creator_1 = require("../../../../base-utils/map-creator");
var field_1 = require("../../../../core/model/fields/field");
var string_1 = require("@devexpress/utils/lib/utils/string");
var bookmark_end_element_destination_1 = require("../bookmark/bookmark-end-element-destination");
var bookmark_start_element_destination_1 = require("../bookmark/bookmark-start-element-destination");
var destination_1 = require("../destination");
var range_permission_end_element_destination_1 = require("../range-permission/range-permission-end-element-destination");
var range_permission_start_element_destination_1 = require("../range-permission/range-permission-start-element-destination");
var deleted_run_content_destination_1 = require("../runs/deleted-run-content-destination");
var inserted_run_content_destination_1 = require("../runs/inserted-run-content-destination");
var run_destination_1 = require("../runs/run-destination");
var structured_document_destination_1 = require("../structured-document-destination");
var field_destination_base_1 = require("./field-destination-base");
var field_simple_destination_1 = require("./field-simple-destination");
var HyperlinkDestination = (function (_super) {
    tslib_1.__extends(HyperlinkDestination, _super);
    function HyperlinkDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(HyperlinkDestination.prototype, "elementHandlerTable", {
        get: function () {
            return HyperlinkDestination.handlerTable;
        },
        enumerable: true,
        configurable: true
    });
    HyperlinkDestination.prototype.processElementOpen = function (reader) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var attr, locked, hyperlinkInfo, code;
            return tslib_1.__generator(this, function (_a) {
                attr = reader.getAttributeNS('fldLock', this.data.constants.wordProcessingNamespaceConst);
                locked = !string_1.StringUtils.isNullOrEmpty(attr) ? this.data.readerHelper.isBoolStrict(attr) : false;
                this.processFieldBegin(false, locked, false);
                hyperlinkInfo = this.createHyperlinkInfo(reader);
                this.data.subDocumentInfo.fieldImporter.fieldInfoStack.last.hyperlinkInfo = hyperlinkInfo;
                code = field_1.HyperlinkInfo.getNewCodeText(hyperlinkInfo);
                this.data.subDocumentInfo.characterImporter.insertText(code);
                this.processFieldSeparator();
                return [2];
            });
        });
    };
    HyperlinkDestination.prototype.processElementClose = function (_reader) {
        this.processFieldEnd();
    };
    HyperlinkDestination.prototype.createHyperlinkInfo = function (reader) {
        var hyperlinkInfo = new field_1.HyperlinkInfo('', '', '', false);
        for (var ind = 0, attr = void 0; attr = reader.attributes[ind]; ind++) {
            var handler = HyperlinkDestination.attributeHandlerTable[attr.localName];
            if (handler !== undefined)
                handler(this.data, hyperlinkInfo, attr.value);
            else if (attr.name.indexOf('xmlns') < 0)
                this.data.options.throwInvalidFile('incorrect hyperlinkInfo');
        }
        return hyperlinkInfo;
    };
    HyperlinkDestination.handlerTable = new map_creator_1.MapCreator()
        .add('r', function (data) { return new run_destination_1.RunDestination(data); })
        .add('fldSimple', function (data) { return new field_simple_destination_1.FieldSimpleDestination(data); })
        .add('hyperlink', function (data) { return new HyperlinkDestination(data); })
        .add('bookmarkStart', function (data) { return new bookmark_start_element_destination_1.BookmarkStartElementDestination(data); })
        .add('bookmarkEnd', function (data) { return new bookmark_end_element_destination_1.BookmarkEndElementDestination(data); })
        .add('permStart', function (data) { return new range_permission_start_element_destination_1.RangePermissionStartElementDestination(data); })
        .add('permEnd', function (data) { return new range_permission_end_element_destination_1.RangePermissionEndElementDestination(data); })
        .add('sdt', function (data) { return new structured_document_destination_1.StructuredDocumentDestination(data); })
        .add('customXml', function (data) { return new destination_1.CustomXmlDestination(data); })
        .add('del', function (data) { return data.options.ignoreDeletedText ? new destination_1.EmptyDestination(data) : new deleted_run_content_destination_1.DeletedRunContentDestination(data); })
        .add('ins', function (data) { return data.options.ignoreInsertedText ? new destination_1.EmptyDestination(data) : new inserted_run_content_destination_1.InsertedRunContentDestination(data); })
        .get();
    HyperlinkDestination.attributeHandlerTable = new map_creator_1.MapCreator()
        .add('id', function (data, info, value) {
        var relation = data.relationsStack.last.lookupRelationById(value);
        if (relation != null) {
            var target = relation.target;
            if (relation.targetMode == 'External')
                info.uri = target;
            else {
                var charIndex = target.indexOf('#');
                info.anchor = target.substring(charIndex);
            }
        }
    })
        .add('anchor', function (_data, info, value) { return info.anchor = value; })
        .add('tgtFrame', function (_data, _info, _value) { })
        .add('tooltip', function (_data, info, value) { return info.tip = value; })
        .add('history', function (data, info, value) { return info.visited = !data.readerHelper.isBoolStrict(value); })
        .add('docLocation', function (_data, _info, _value) { })
        .get();
    return HyperlinkDestination;
}(field_destination_base_1.FieldDestinationBase));
exports.HyperlinkDestination = HyperlinkDestination;
