"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var map_creator_1 = require("../../../../base-utils/map-creator");
var string_1 = require("@devexpress/utils/lib/utils/string");
var destination_1 = require("../destination");
var deleted_run_content_destination_1 = require("../runs/deleted-run-content-destination");
var inserted_run_content_destination_1 = require("../runs/inserted-run-content-destination");
var run_destination_1 = require("../runs/run-destination");
var structured_document_destination_1 = require("../structured-document-destination");
var field_destination_base_1 = require("./field-destination-base");
var hyperlink_destination_1 = require("./hyperlink-destination");
var FieldSimpleDestination = (function (_super) {
    tslib_1.__extends(FieldSimpleDestination, _super);
    function FieldSimpleDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(FieldSimpleDestination.prototype, "elementHandlerTable", {
        get: function () {
            return FieldSimpleDestination.handlerTable;
        },
        enumerable: true,
        configurable: true
    });
    FieldSimpleDestination.prototype.processElementOpen = function (reader) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var fldLockAttr, locked;
            return tslib_1.__generator(this, function (_a) {
                this.fieldCode = reader.getAttributeNS('instr', this.data.constants.wordProcessingNamespaceConst);
                if (string_1.StringUtils.isNullOrEmpty(this.fieldCode))
                    return [2];
                fldLockAttr = reader.getAttributeNS('fldLock', this.data.constants.wordProcessingNamespaceConst);
                locked = !string_1.StringUtils.isNullOrEmpty(fldLockAttr) ? this.data.readerHelper.isBoolStrict(fldLockAttr) : false;
                this.processFieldBegin(false, locked, false);
                this.data.subDocumentInfo.characterImporter.insertText(this.fieldCode);
                this.processFieldSeparator();
                return [2];
            });
        });
    };
    FieldSimpleDestination.prototype.processElementClose = function (_reader) {
        if (!string_1.StringUtils.isNullOrEmpty(this.fieldCode))
            this.processFieldEnd();
    };
    FieldSimpleDestination.handlerTable = new map_creator_1.MapCreator()
        .add('r', function (data) { return new run_destination_1.RunDestination(data); })
        .add('del', function (data) { return data.options.ignoreDeletedText ? new destination_1.EmptyDestination(data) : new deleted_run_content_destination_1.DeletedRunContentDestination(data); })
        .add('ins', function (data) { return data.options.ignoreInsertedText ? new destination_1.EmptyDestination(data) : new inserted_run_content_destination_1.InsertedRunContentDestination(data); })
        .add('fldSimple', function (data) { return new FieldSimpleDestination(data); })
        .add('hyperlink', function (data) { return new hyperlink_destination_1.HyperlinkDestination(data); })
        .add('sdt', function (data) { return new structured_document_destination_1.StructuredDocumentDestination(data); })
        .add('customXml', function (data) { return new destination_1.CustomXmlDestination(data); })
        .add('ffData', function (_data) {
        return null;
    })
        .get();
    return FieldSimpleDestination;
}(field_destination_base_1.FieldDestinationBase));
exports.FieldSimpleDestination = FieldSimpleDestination;
