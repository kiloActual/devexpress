"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var map_creator_1 = require("../../../../base-utils/map-creator");
var string_1 = require("@devexpress/utils/lib/utils/string");
var field_destination_base_1 = require("./field-destination-base");
var FieldCharDestination = (function (_super) {
    tslib_1.__extends(FieldCharDestination, _super);
    function FieldCharDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(FieldCharDestination.prototype, "elementHandlerTable", {
        get: function () {
            return FieldCharDestination.handlerTable;
        },
        enumerable: true,
        configurable: true
    });
    FieldCharDestination.prototype.processElementOpen = function (reader) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var type, attr, hideByParentAttr, lockedAttr, disableUpdate, hideByParent, locked;
            return tslib_1.__generator(this, function (_a) {
                type = reader.getAttributeNS('fldCharType', this.data.constants.wordProcessingNamespaceConst);
                switch (type) {
                    case 'begin':
                        attr = reader.getAttributeNS('disableUpdate', this.data.constants.wordProcessingNamespaceConst);
                        hideByParentAttr = reader.getAttributeNS('hideByParent', this.data.constants.wordProcessingNamespaceConst);
                        lockedAttr = reader.getAttributeNS('fldLock', this.data.constants.wordProcessingNamespaceConst);
                        disableUpdate = !string_1.StringUtils.isNullOrEmpty(attr) ? this.data.readerHelper.isBoolStrict(attr) : false;
                        hideByParent = !string_1.StringUtils.isNullOrEmpty(hideByParentAttr) ?
                            this.data.readerHelper.isBoolStrict(hideByParentAttr) : false;
                        locked = !string_1.StringUtils.isNullOrEmpty(lockedAttr) ? this.data.readerHelper.isBoolStrict(lockedAttr) : false;
                        this.processFieldBegin(disableUpdate, locked, hideByParent);
                        break;
                    case 'separate':
                        this.processFieldSeparator();
                        break;
                    case 'end':
                        this.processFieldEnd();
                        break;
                    default:
                        break;
                }
                return [2];
            });
        });
    };
    FieldCharDestination.handlerTable = new map_creator_1.MapCreator()
        .add('ffData', function (_data) {
        return null;
    })
        .add('fldData', function (_data) {
        return null;
    })
        .get();
    return FieldCharDestination;
}(field_destination_base_1.FieldDestinationBase));
exports.FieldCharDestination = FieldCharDestination;
