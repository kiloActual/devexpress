"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var map_creator_1 = require("../../../../../base-utils/map-creator");
var table_1 = require("../../../../../core/model/tables/main-structures/table");
var table_base_structures_1 = require("../../../../../core/model/tables/secondary-structures/table-base-structures");
var table_units_1 = require("../../../../../core/model/tables/secondary-structures/table-units");
var table_utils_1 = require("../../../../../core/model/tables/table-utils");
var enum_1 = require("@devexpress/utils/lib/utils/enum");
var list_1 = require("@devexpress/utils/lib/utils/list");
var bookmark_end_element_destination_1 = require("../../bookmark/bookmark-end-element-destination");
var bookmark_start_element_destination_1 = require("../../bookmark/bookmark-start-element-destination");
var destination_1 = require("../../destination");
var range_permission_end_element_destination_1 = require("../../range-permission/range-permission-end-element-destination");
var range_permission_start_element_destination_1 = require("../../range-permission/range-permission-start-element-destination");
var deleted_run_content_destination_1 = require("../../runs/deleted-run-content-destination");
var inserted_run_content_destination_1 = require("../../runs/inserted-run-content-destination");
var structured_document_destination_1 = require("../../structured-document-destination");
var table_row_destination_1 = require("../row/table-row-destination");
var table_properties_destination_1 = require("./properties/table-properties-destination");
var table_grid_destination_1 = require("./table-grid-destination");
var TableDestination = (function (_super) {
    tslib_1.__extends(TableDestination, _super);
    function TableDestination(data, parentCell) {
        if (parentCell === void 0) { parentCell = null; }
        var _this = _super.call(this, data) || this;
        _this.table = new table_1.Table(_this.data.subDocumentInfo.tableImporter.createDefaultTableProperties(), _this.data.documentModel.stylesManager.getDefaultTableStyle());
        _this.table.nestedLevel = _this.data.subDocumentInfo.tableStack.count;
        _this.table.parentCell = parentCell;
        _this.tableGrid = [];
        return _this;
    }
    Object.defineProperty(TableDestination.prototype, "elementHandlerTable", {
        get: function () {
            return TableDestination.handlerTable;
        },
        enumerable: true,
        configurable: true
    });
    TableDestination.getThis = function (data) {
        return data.destinationStack.getThis();
    };
    TableDestination.prototype.processElementOpen = function (_reader) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                this.data.subDocument.tables.push(this.table);
                this.data.subDocumentInfo.tableStack.push(this.table);
                return [2];
            });
        });
    };
    TableDestination.prototype.processElementClose = function (_reader) {
        if (!this.table.rows.length)
            return this.data.subDocumentInfo.tableImporter.cancelTable(this.table);
        if (this.table.properties.layoutType == table_base_structures_1.TableLayoutType.Fixed && this.tableGrid.length > 0)
            this.ensureTableCellsWidth(this.table);
        this.data.subDocumentInfo.tableStack.pop();
        table_utils_1.TableConditionalFormattingCalculator.updateTableWithoutHistory(this.data.documentModel, this.table);
    };
    TableDestination.prototype.ensureTableCellsWidth = function (table) {
        var _this = this;
        var _loop_1 = function (tableRow) {
            var columnIndex = 0;
            var cellsCount = tableRow.cells.length;
            list_1.ListUtils.forEach(tableRow.cells, function (cell, cellIndex) {
                var remainedCellsCount = cellsCount - cellIndex - 1;
                var maxAvailableColumnSpan = _this.tableGrid.length - columnIndex - remainedCellsCount;
                var columnSpan = Math.min(maxAvailableColumnSpan, cell.columnSpan);
                var prefWidth = cell.preferredWidth;
                if (enum_1.EnumUtils.isAnyOf(prefWidth.type, table_units_1.TableWidthUnitType.Nil, table_units_1.TableWidthUnitType.Auto)) {
                    prefWidth.value = list_1.ListUtils.accumulateNumber(_this.tableGrid, function (v) { return v; }, 0, columnIndex, columnIndex + columnSpan);
                    prefWidth.type = table_units_1.TableWidthUnitType.ModelUnits;
                }
                columnIndex += columnSpan;
            });
        };
        for (var _i = 0, _a = table.rows; _i < _a.length; _i++) {
            var tableRow = _a[_i];
            _loop_1(tableRow);
        }
    };
    TableDestination.handlerTable = new map_creator_1.MapCreator()
        .add('tr', function (data) { return new table_row_destination_1.TableRowDestination(data, TableDestination.getThis(data).table); })
        .add('tblPr', function (data) { return new table_properties_destination_1.TablePropertiesDestination(data, TableDestination.getThis(data).table); })
        .add('sdt', function (data) { return new structured_document_destination_1.StructuredDocumentDestination(data); })
        .add('customXml', function (data) { return new destination_1.CustomXmlDestination(data); })
        .add('tblGrid', function (data) { return new table_grid_destination_1.TableGridDestination(data, TableDestination.getThis(data).tableGrid); })
        .add('del', function (data) { return data.options.ignoreDeletedText ? new destination_1.EmptyDestination(data) : new deleted_run_content_destination_1.DeletedRunContentDestination(data); })
        .add('ins', function (data) { return data.options.ignoreInsertedText ? new destination_1.EmptyDestination(data) : new inserted_run_content_destination_1.InsertedRunContentDestination(data); })
        .add('bookmarkStart', function (data) { return new bookmark_start_element_destination_1.BookmarkStartElementDestination(data); })
        .add('bookmarkEnd', function (data) { return new bookmark_end_element_destination_1.BookmarkEndElementDestination(data); })
        .add('permStart', function (data) { return new range_permission_start_element_destination_1.RangePermissionStartElementDestination(data); })
        .add('permEnd', function (data) { return new range_permission_end_element_destination_1.RangePermissionEndElementDestination(data); })
        .get();
    return TableDestination;
}(destination_1.ElementDestination));
exports.TableDestination = TableDestination;
