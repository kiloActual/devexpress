"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var map_creator_1 = require("../../../../../../base-utils/map-creator");
var table_cell_properties_1 = require("../../../../../../core/model/tables/properties/table-cell-properties");
var table_cell_borders_destination_1 = require("../../../borders/table-cell-borders-destination");
var destination_1 = require("../../../destination");
var table_cell_margins_destination_1 = require("../../table/properties/table-cell-margins-destination");
var width_unit_destination_1 = require("../../width-unit-destination");
var table_cell_column_span_destination_1 = require("./table-cell-column-span-destination");
var table_cell_conditional_formatting_destination_1 = require("./table-cell-conditional-formatting-destination");
var table_cell_fit_text_destination_1 = require("./table-cell-fit-text-destination");
var table_cell_hide_mark_destination_1 = require("./table-cell-hide-mark-destination");
var table_cell_no_wrap_destination_1 = require("./table-cell-no-wrap-destination");
var table_cell_shading_destination_1 = require("./table-cell-shading-destination");
var table_cell_text_direction_destination_1 = require("./table-cell-text-direction-destination");
var table_cell_vertical_alignment_destination_1 = require("./table-cell-vertical-alignment-destination");
var table_cell_vertical_merging_state_destination_1 = require("./table-cell-vertical-merging-state-destination");
var TableCellPropertiesDestinationCore = (function (_super) {
    tslib_1.__extends(TableCellPropertiesDestinationCore, _super);
    function TableCellPropertiesDestinationCore(data, cell) {
        var _this = _super.call(this, data) || this;
        _this.cell = cell;
        return _this;
    }
    Object.defineProperty(TableCellPropertiesDestinationCore.prototype, "elementHandlerTable", {
        get: function () {
            return TableCellPropertiesDestinationCore.handlerTable;
        },
        enumerable: true,
        configurable: true
    });
    TableCellPropertiesDestinationCore.getThis = function (data) {
        return data.destinationStack.getThis();
    };
    TableCellPropertiesDestinationCore.handlerTable = new map_creator_1.MapCreator()
        .add('tcW', function (data) { return new width_unit_destination_1.WidthUnitNonNegativeDestination(data, TableCellPropertiesDestinationCore.getThis(data).cell.preferredWidth, function () { }); })
        .add('tcBorders', function (data) { return new table_cell_borders_destination_1.TableCellBordersDestination(data, TableCellPropertiesDestinationCore.getThis(data).cell); })
        .add('vMerge', function (data) { return new table_cell_vertical_merging_state_destination_1.TableCellVerticalMergingStateDestination(data, TableCellPropertiesDestinationCore.getThis(data).cell); })
        .add('gridSpan', function (data) { return new table_cell_column_span_destination_1.TableCellColumnSpanDestination(data, TableCellPropertiesDestinationCore.getThis(data).cell); })
        .add('shd', function (data) { return new table_cell_shading_destination_1.TableCellShadingDestination(data, TableCellPropertiesDestinationCore.getThis(data).cell); })
        .add('tcMar', function (data) { return new table_cell_margins_destination_1.TableCellMarginsDestination(data, TableCellPropertiesDestinationCore.getThis(data).cell.properties, {
        top: table_cell_properties_1.TableCellPropertyDescriptor.topMargin,
        right: table_cell_properties_1.TableCellPropertyDescriptor.rightMargin,
        bottom: table_cell_properties_1.TableCellPropertyDescriptor.bottomMargin,
        left: table_cell_properties_1.TableCellPropertyDescriptor.leftMargin
    }); })
        .add('tcFitText', function (data) { return new table_cell_fit_text_destination_1.TableCellFitTextDestination(data, TableCellPropertiesDestinationCore.getThis(data).cell); })
        .add('noWrap', function (data) { return new table_cell_no_wrap_destination_1.TableCellNoWrapDestination(data, TableCellPropertiesDestinationCore.getThis(data).cell); })
        .add('hideMark', function (data) { return new table_cell_hide_mark_destination_1.TableCellHideMarkDestination(data, TableCellPropertiesDestinationCore.getThis(data).cell); })
        .add('textDirection', function (data) { return new table_cell_text_direction_destination_1.TableCellTextDirectionDestination(data, TableCellPropertiesDestinationCore.getThis(data).cell); })
        .add('vAlign', function (data) { return new table_cell_vertical_alignment_destination_1.TableCellVerticalAlignmentDestination(data, TableCellPropertiesDestinationCore.getThis(data).cell); })
        .add('cnfStyle', function (data) { return new table_cell_conditional_formatting_destination_1.TableCellConditionalFormattingDestination(data, TableCellPropertiesDestinationCore.getThis(data).cell); })
        .get();
    return TableCellPropertiesDestinationCore;
}(destination_1.ElementDestination));
exports.TableCellPropertiesDestinationCore = TableCellPropertiesDestinationCore;
