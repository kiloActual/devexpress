"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var table_units_1 = require("../../../../core/model/tables/secondary-structures/table-units");
var constants_1 = require("@devexpress/utils/lib/constants");
var translation_tables_1 = require("../../../translation-table/translation-tables");
var destination_1 = require("../destination");
var WidthUnitDestination = (function (_super) {
    tslib_1.__extends(WidthUnitDestination, _super);
    function WidthUnitDestination(data, widthUnit, setMaskTrue) {
        var _this = _super.call(this, data) || this;
        _this.widthUnit = widthUnit;
        _this.setMaskTrue = setMaskTrue;
        return _this;
    }
    WidthUnitDestination.prototype.processElementOpen = function (reader) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var unitType, value;
            return tslib_1.__generator(this, function (_a) {
                unitType = this.data.readerHelper.getWpEnumValue(reader, 'type', translation_tables_1.TranslationTables.widthUnitTypesTable.importMap, table_units_1.TableWidthUnitType.Auto);
                value = this.data.readerHelper.getWpSTIntegerValue(reader, 'w');
                if (this.isValid(value)) {
                    this.widthUnit.type = unitType;
                    this.widthUnit.value = value;
                }
                else
                    this.widthUnit.type = table_units_1.TableWidthUnitType.Auto;
                this.setMaskTrue();
                return [2];
            });
        });
    };
    WidthUnitDestination.prototype.isValid = function (value) {
        return value != constants_1.Constants.MIN_SAFE_INTEGER;
    };
    return WidthUnitDestination;
}(destination_1.LeafElementDestination));
exports.WidthUnitDestination = WidthUnitDestination;
var WidthUnitNonNegativeDestination = (function (_super) {
    tslib_1.__extends(WidthUnitNonNegativeDestination, _super);
    function WidthUnitNonNegativeDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WidthUnitNonNegativeDestination.prototype.isValid = function (value) {
        return _super.prototype.isValid.call(this, value) && value >= 0;
    };
    return WidthUnitNonNegativeDestination;
}(WidthUnitDestination));
exports.WidthUnitNonNegativeDestination = WidthUnitNonNegativeDestination;
