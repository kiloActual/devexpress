"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var map_creator_1 = require("../../../../base-utils/map-creator");
var numbering_list_index_constants_1 = require("../../../../core/formats/utils/numbering-list-index-constants");
var numbering_list_1 = require("../../../../core/model/numbering-lists/numbering-list");
var paragraph_properties_1 = require("../../../../core/model/paragraph/paragraph-properties");
var constants_1 = require("@devexpress/utils/lib/constants");
var constants_2 = require("../../../utils/constants");
var bookmark_end_element_destination_1 = require("../bookmark/bookmark-end-element-destination");
var bookmark_start_element_destination_1 = require("../bookmark/bookmark-start-element-destination");
var comment_end_element_destination_1 = require("../comments/comment-end-element-destination");
var comment_start_element_destination_1 = require("../comments/comment-start-element-destination");
var destination_1 = require("../destination");
var alt_chunk_destination_1 = require("../document/alt-chunk-destination");
var smart_tag_destination_1 = require("../document/smart-tag-destination");
var drawing_destination_1 = require("../drawing/drawing-destination");
var field_char_destination_1 = require("../field/field-char-destination");
var field_simple_destination_1 = require("../field/field-simple-destination");
var hyperlink_destination_1 = require("../field/hyperlink-destination");
var paragraph_properties_destination_1 = require("../paragraph-properties/paragraph-properties-destination");
var range_permission_end_element_destination_1 = require("../range-permission/range-permission-end-element-destination");
var range_permission_start_element_destination_1 = require("../range-permission/range-permission-start-element-destination");
var deleted_run_content_destination_1 = require("../runs/deleted-run-content-destination");
var inline_picture_destination_1 = require("../runs/inline-picture-destination");
var inserted_run_content_destination_1 = require("../runs/inserted-run-content-destination");
var run_destination_1 = require("../runs/run-destination");
var text_destination_1 = require("../runs/text-destination");
var structured_document_destination_1 = require("../structured-document-destination");
var ParagraphDestination = (function (_super) {
    tslib_1.__extends(ParagraphDestination, _super);
    function ParagraphDestination(data) {
        var _this = _super.call(this, data) || this;
        _this.listLevelIndex = constants_1.Constants.MIN_SAFE_INTEGER;
        _this.numberingId = constants_1.Constants.MIN_SAFE_INTEGER;
        _this.data.subDocumentInfo.paragraphImporter
            .resetProperties()
            .resetStyle()
            .resetTabs()
            .resetParMarkCharProperties()
            .resetParMarkCharacterStyle();
        _this.data.subDocumentInfo.characterImporter.resetProperties();
        if (_this.data.subDocument.isMain())
            _this.data.sectionImporter.shouldInsertSection = false;
        return _this;
    }
    Object.defineProperty(ParagraphDestination.prototype, "elementHandlerTable", {
        get: function () {
            return ParagraphDestination.handlerTable;
        },
        enumerable: true,
        configurable: true
    });
    ParagraphDestination.getThis = function (data) {
        return data.destinationStack.getThis();
    };
    ParagraphDestination.prototype.isChoiceNamespaceSupported = function (requeriesNamespaceUri) {
        return requeriesNamespaceUri.toLowerCase() == this.data.constants.namespaces[constants_2.DocxNsType.Wps].namespace.toLowerCase() ||
            _super.prototype.isChoiceNamespaceSupported.call(this, requeriesNamespaceUri);
    };
    ParagraphDestination.prototype.processElementOpen = function (reader) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var val;
            return tslib_1.__generator(this, function (_a) {
                val = reader.getAttributeNS('paraId', this.data.constants.w14NamespaceConst);
                this.data.subDocumentInfo.paragraphImporter.paraId = this.data.readerHelper.getIntegerValueCore(val, constants_1.Constants.MIN_SAFE_INTEGER, 16);
                return [2];
            });
        });
    };
    ParagraphDestination.prototype.processElementClose = function (_reader) {
        this.data.subDocumentInfo.characterImporter.properties = this.data.subDocumentInfo.paragraphImporter.parMarkCharProperties.clone();
        this.data.subDocumentInfo.characterImporter.style = this.data.subDocumentInfo.paragraphImporter.parMarkCharacterStyle;
        if (this.data.sectionImporter.shouldInsertSection && this.data.subDocument.isMain())
            this.data.sectionImporter.insertSection();
        else
            this.addNumbering(this.data.subDocumentInfo.paragraphImporter.insertParagraph());
        this.data.subDocumentInfo.characterImporter.style = this.data.documentModel.characterStyles[0];
    };
    ParagraphDestination.prototype.createParagraphPropertiesDestination = function () {
        return new paragraph_properties_destination_1.ParagraphPropertiesDestination(this.data, this, this.data.subDocumentInfo.paragraphImporter.properties, this.data.subDocumentInfo.paragraphImporter.tabs);
    };
    ParagraphDestination.prototype.addNumbering = function (paragraph) {
        this.listLevelIndex = Math.max(0, this.listLevelIndex);
        if (this.numberingId != constants_1.Constants.MIN_SAFE_INTEGER) {
            var listInfo = this.data.stylesImporter.findNumberingListInfoById(this.numberingId);
            if (listInfo) {
                paragraph.listLevelIndex = this.listLevelIndex;
                paragraph.numberingListIndex = listInfo.listIndex;
            }
            else if (this.numberingId == numbering_list_1.NumberingList.NoNumberingListIndex &&
                paragraph.paragraphStyle.getNumberingListIndex() >= numbering_list_index_constants_1.NumberingListIndexConstants.minValue) {
                paragraph.listLevelIndex = this.listLevelIndex;
                paragraph.numberingListIndex = numbering_list_1.NumberingList.NoNumberingListIndex;
                if (!paragraph.maskedParagraphProperties.getUseValue(paragraph_properties_1.ParagraphPropertiesMask.UseFirstLineIndent)) {
                    paragraph.maskedParagraphProperties.firstLineIndentType = paragraph_properties_1.ParagraphFirstLineIndent.None;
                    paragraph.maskedParagraphProperties.firstLineIndent = 0;
                }
                if (!paragraph.maskedParagraphProperties.getUseValue(paragraph_properties_1.ParagraphPropertiesMask.UseLeftIndent))
                    paragraph.maskedParagraphProperties.leftIndent = 0;
            }
        }
    };
    ParagraphDestination.handlerTable = new map_creator_1.MapCreator()
        .add('pPr', function (data) {
        data.subDocumentInfo.paragraphImporter.properties = paragraph_properties_1.MaskedParagraphProperties.createDefault(data.documentModel);
        return ParagraphDestination.getThis(data).createParagraphPropertiesDestination();
    })
        .add('r', function (data) { return new run_destination_1.RunDestination(data); })
        .add('del', function (data) { return data.options.ignoreDeletedText ? new destination_1.EmptyDestination(data) : new deleted_run_content_destination_1.DeletedRunContentDestination(data); })
        .add('ins', function (data) { return data.options.ignoreInsertedText ? new destination_1.EmptyDestination(data) : new inserted_run_content_destination_1.InsertedRunContentDestination(data); })
        .add('pict', function (data) { return new inline_picture_destination_1.InlinePictureDestination(data); })
        .add('fldSimple', function (data) { return new field_simple_destination_1.FieldSimpleDestination(data); })
        .add('hyperlink', function (data) { return new hyperlink_destination_1.HyperlinkDestination(data); })
        .add('fldChar', function (data) { return new field_char_destination_1.FieldCharDestination(data); })
        .add('instrText', function (data) { return new text_destination_1.TextDestination(data); })
        .add('bookmarkStart', function (data) { return new bookmark_start_element_destination_1.BookmarkStartElementDestination(data); })
        .add('bookmarkEnd', function (data) { return new bookmark_end_element_destination_1.BookmarkEndElementDestination(data); })
        .add('permStart', function (data) { return new range_permission_start_element_destination_1.RangePermissionStartElementDestination(data); })
        .add('permEnd', function (data) { return new range_permission_end_element_destination_1.RangePermissionEndElementDestination(data); })
        .add('commentRangeStart', function (data) { return new comment_start_element_destination_1.CommentStartElementDestination(data); })
        .add('commentRangeEnd', function (data) { return new comment_end_element_destination_1.CommentEndElementDestination(data); })
        .add('smartTag', function (data) { return new smart_tag_destination_1.SmartTagDestination(data); })
        .add('sdt', function (data) { return new structured_document_destination_1.StructuredDocumentDestination(data); })
        .add('customXml', function (data) { return new destination_1.CustomXmlDestination(data); })
        .add('drawing', function (data) { return new drawing_destination_1.DrawingDestination(data); })
        .add('altChunk', function (data) { return new alt_chunk_destination_1.AltChunkDestination(data); })
        .get();
    return ParagraphDestination;
}(destination_1.ElementDestination));
exports.ParagraphDestination = ParagraphDestination;
