"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var layout_tab_space_box_1 = require("../../../../core/layout/main-structures/layout-boxes/layout-tab-space-box");
var paragraph_1 = require("../../../../core/model/paragraph/paragraph");
var paragraph_style_1 = require("../../../../core/model/paragraph/paragraph-style");
var constants_1 = require("@devexpress/utils/lib/constants");
var string_1 = require("@devexpress/utils/lib/utils/string");
var translation_tables_1 = require("../../../translation-table/translation-tables");
var tabs_leaf_element_destination_1 = require("./tabs-leaf-element-destination");
var TabDestination = (function (_super) {
    tslib_1.__extends(TabDestination, _super);
    function TabDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TabDestination.prototype.processElementOpen = function (reader) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var pos, leader, value, align;
            return tslib_1.__generator(this, function (_a) {
                pos = this.data.readerHelper.getWpSTIntegerValue(reader, 'pos', constants_1.Constants.MIN_SAFE_INTEGER);
                if (pos == constants_1.Constants.MIN_SAFE_INTEGER)
                    return [2];
                leader = this.data.readerHelper.getWpEnumValue(reader, 'leader', translation_tables_1.TranslationTables.tabLeaderTable.importMap, layout_tab_space_box_1.TabLeaderType.None);
                value = reader.getAttributeNS('val', this.data.constants.wordProcessingNamespaceConst);
                align = string_1.StringUtils.isNullOrEmpty(value) ? paragraph_1.TabAlign.Left :
                    this.data.readerHelper.getWpEnumValueCore(value, (this.data.constants.strictMode ? translation_tables_1.TranslationTables.strictTabAlignmentTable : translation_tables_1.TranslationTables.tabAlignmentTable).importMap, paragraph_1.TabAlign.Left);
                this.tabs.add(new paragraph_style_1.TabInfo(pos, align, leader, (value == 'clear'), false));
                return [2];
            });
        });
    };
    return TabDestination;
}(tabs_leaf_element_destination_1.TabsLeafElementDestination));
exports.TabDestination = TabDestination;
