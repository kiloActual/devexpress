"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var map_creator_1 = require("../../../../base-utils/map-creator");
var table_cell_properties_1 = require("../../../../core/model/tables/properties/table-cell-properties");
var table_cell_properties_element_base_destination_1 = require("../table/cell/properties/table-cell-properties-element-base-destination");
var table_cell_border_element_destination_1 = require("./table-cell-border-element-destination");
var TableCellBordersDestination = (function (_super) {
    tslib_1.__extends(TableCellBordersDestination, _super);
    function TableCellBordersDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellBordersDestination.getProps = function (data) {
        return data.destinationStack.getThis().cell.properties;
    };
    Object.defineProperty(TableCellBordersDestination.prototype, "elementHandlerTable", {
        get: function () {
            return TableCellBordersDestination.handlerTable;
        },
        enumerable: true,
        configurable: true
    });
    TableCellBordersDestination.handlerTable = new map_creator_1.MapCreator()
        .add('top', function (data) { return new table_cell_border_element_destination_1.TableCellBorderElementDestination(data, TableCellBordersDestination.getProps(data), table_cell_properties_1.TableCellPropertyDescriptor.topBorder); })
        .add('left', function (data) { return new table_cell_border_element_destination_1.TableCellBorderElementDestination(data, TableCellBordersDestination.getProps(data), table_cell_properties_1.TableCellPropertyDescriptor.leftBorder); })
        .add('start', function (data) { return new table_cell_border_element_destination_1.TableCellBorderElementDestination(data, TableCellBordersDestination.getProps(data), table_cell_properties_1.TableCellPropertyDescriptor.leftBorder); })
        .add('bottom', function (data) { return new table_cell_border_element_destination_1.TableCellBorderElementDestination(data, TableCellBordersDestination.getProps(data), table_cell_properties_1.TableCellPropertyDescriptor.bottomBorder); })
        .add('right', function (data) { return new table_cell_border_element_destination_1.TableCellBorderElementDestination(data, TableCellBordersDestination.getProps(data), table_cell_properties_1.TableCellPropertyDescriptor.rightBorder); })
        .add('end', function (data) { return new table_cell_border_element_destination_1.TableCellBorderElementDestination(data, TableCellBordersDestination.getProps(data), table_cell_properties_1.TableCellPropertyDescriptor.rightBorder); })
        .add('insideH', function (_data) {
        return null;
    })
        .add('insideV', function (_data) {
        return null;
    })
        .add('tl2br', function (data) { return new table_cell_border_element_destination_1.TableCellBorderElementDestination(data, TableCellBordersDestination.getProps(data), table_cell_properties_1.TableCellPropertyDescriptor.topLeftDiagonalBorder); })
        .add('tr2bl', function (data) { return new table_cell_border_element_destination_1.TableCellBorderElementDestination(data, TableCellBordersDestination.getProps(data), table_cell_properties_1.TableCellPropertyDescriptor.topRightDiagonalBorder); })
        .get();
    return TableCellBordersDestination;
}(table_cell_properties_element_base_destination_1.TableCellPropertiesElementBaseDestination));
exports.TableCellBordersDestination = TableCellBordersDestination;
