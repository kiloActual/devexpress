"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var map_creator_1 = require("../../../../../base-utils/map-creator");
var drawing_color_model_info_1 = require("../../../../../core/model/drawing/drawing-color-model-info");
var destination_1 = require("../../destination");
var color_transform_destination_alpha_1 = require("./props/color-transform-destination-alpha");
var color_transform_destination_alpha_modulation_1 = require("./props/color-transform-destination-alpha-modulation");
var color_transform_destination_alpha_offset_1 = require("./props/color-transform-destination-alpha-offset");
var color_transform_destination_blue_1 = require("./props/color-transform-destination-blue");
var color_transform_destination_blue_modification_1 = require("./props/color-transform-destination-blue-modification");
var color_transform_destination_blue_offset_1 = require("./props/color-transform-destination-blue-offset");
var color_transform_destination_complement_1 = require("./props/color-transform-destination-complement");
var color_transform_destination_gamma_1 = require("./props/color-transform-destination-gamma");
var color_transform_destination_gray_1 = require("./props/color-transform-destination-gray");
var color_transform_destination_green_1 = require("./props/color-transform-destination-green");
var color_transform_destination_green_modification_1 = require("./props/color-transform-destination-green-modification");
var color_transform_destination_green_offset_1 = require("./props/color-transform-destination-green-offset");
var color_transform_destination_hue_1 = require("./props/color-transform-destination-hue");
var color_transform_destination_hue_modulate_1 = require("./props/color-transform-destination-hue-modulate");
var color_transform_destination_hue_offset_1 = require("./props/color-transform-destination-hue-offset");
var color_transform_destination_inverse_1 = require("./props/color-transform-destination-inverse");
var color_transform_destination_inverse_gamma_1 = require("./props/color-transform-destination-inverse-gamma");
var color_transform_destination_luminance_1 = require("./props/color-transform-destination-luminance");
var color_transform_destination_luminance_modulation_1 = require("./props/color-transform-destination-luminance-modulation");
var color_transform_destination_luminance_offset_1 = require("./props/color-transform-destination-luminance-offset");
var color_transform_destination_red_1 = require("./props/color-transform-destination-red");
var color_transform_destination_red_modulation_1 = require("./props/color-transform-destination-red-modulation");
var color_transform_destination_red_offset_1 = require("./props/color-transform-destination-red-offset");
var color_transform_destination_saturation_1 = require("./props/color-transform-destination-saturation");
var color_transform_destination_saturation_modulation_1 = require("./props/color-transform-destination-saturation-modulation");
var color_transform_destination_saturation_offset_1 = require("./props/color-transform-destination-saturation-offset");
var color_transform_destination_shade_1 = require("./props/color-transform-destination-shade");
var color_transform_destination_tint_1 = require("./props/color-transform-destination-tint");
var DrawingColorPropertiesDestinationBase = (function (_super) {
    tslib_1.__extends(DrawingColorPropertiesDestinationBase, _super);
    function DrawingColorPropertiesDestinationBase(data, color) {
        var _this = _super.call(this, data) || this;
        _this.color = color;
        _this.colorModelInfo = new drawing_color_model_info_1.DrawingColorModelInfo();
        return _this;
    }
    Object.defineProperty(DrawingColorPropertiesDestinationBase.prototype, "elementHandlerTable", {
        get: function () {
            return DrawingColorPropertiesDestinationBase.handlerTable;
        },
        enumerable: true,
        configurable: true
    });
    DrawingColorPropertiesDestinationBase.getThis = function (data) {
        return data.destinationStack.getThis();
    };
    DrawingColorPropertiesDestinationBase.prototype.processElementOpen = function (reader) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                this.setColorPropertyValue(reader);
                return [2];
            });
        });
    };
    DrawingColorPropertiesDestinationBase.prototype.processElementClose = function (_reader) {
        this.color.color = this.colorModelInfo;
    };
    DrawingColorPropertiesDestinationBase.handlerTable = new map_creator_1.MapCreator()
        .add('alpha', function (data) { return new color_transform_destination_alpha_1.ColorTransformDestinationAlpha(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('alphaMod', function (data) { return new color_transform_destination_alpha_modulation_1.ColorTransformDestinationAlphaModulation(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('alphaOff', function (data) { return new color_transform_destination_alpha_offset_1.ColorTransformDestinationAlphaOffset(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('blue', function (data) { return new color_transform_destination_blue_1.ColorTransformDestinationBlue(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('blueMod', function (data) { return new color_transform_destination_blue_modification_1.ColorTransformDestinationBlueModification(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('blueOff', function (data) { return new color_transform_destination_blue_offset_1.ColorTransformDestinationBlueOffset(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('comp', function (data) { return new color_transform_destination_complement_1.ColorTransformDestinationComplement(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('gamma', function (data) { return new color_transform_destination_gamma_1.ColorTransformDestinationGamma(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('gray', function (data) { return new color_transform_destination_gray_1.ColorTransformDestinationGray(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('green', function (data) { return new color_transform_destination_green_1.ColorTransformDestinationGreen(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('greenMod', function (data) { return new color_transform_destination_green_modification_1.ColorTransformDestinationGreenModification(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('greenOff', function (data) { return new color_transform_destination_green_offset_1.ColorTransformDestinationGreenOffset(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('hue', function (data) { return new color_transform_destination_hue_1.ColorTransformDestinationHue(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('hueMod', function (data) { return new color_transform_destination_hue_modulate_1.ColorTransformDestinationHueModulate(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('hueOff', function (data) { return new color_transform_destination_hue_offset_1.ColorTransformDestinationHueOffset(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('inv', function (data) { return new color_transform_destination_inverse_1.ColorTransformDestinationInverse(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('invGamma', function (data) { return new color_transform_destination_inverse_gamma_1.ColorTransformDestinationInverseGamma(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('lum', function (data) { return new color_transform_destination_luminance_1.ColorTransformDestinationLuminance(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('lumMod', function (data) { return new color_transform_destination_luminance_modulation_1.ColorTransformDestinationLuminanceModulation(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('lumOff', function (data) { return new color_transform_destination_luminance_offset_1.ColorTransformDestinationLuminanceOffset(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('red', function (data) { return new color_transform_destination_red_1.ColorTransformDestinationRed(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('redMod', function (data) { return new color_transform_destination_red_modulation_1.ColorTransformDestinationRedModulation(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('redOff', function (data) { return new color_transform_destination_red_offset_1.ColorTransformDestinationRedOffset(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('sat', function (data) { return new color_transform_destination_saturation_1.ColorTransformDestinationSaturation(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('satMod', function (data) { return new color_transform_destination_saturation_modulation_1.ColorTransformDestinationSaturationModulation(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('satOff', function (data) { return new color_transform_destination_saturation_offset_1.ColorTransformDestinationSaturationOffset(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('shade', function (data) { return new color_transform_destination_shade_1.ColorTransformDestinationShade(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .add('tint', function (data) { return new color_transform_destination_tint_1.ColorTransformDestinationTint(data, DrawingColorPropertiesDestinationBase.getThis(data).color); })
        .get();
    return DrawingColorPropertiesDestinationBase;
}(destination_1.ElementDestination));
exports.DrawingColorPropertiesDestinationBase = DrawingColorPropertiesDestinationBase;
