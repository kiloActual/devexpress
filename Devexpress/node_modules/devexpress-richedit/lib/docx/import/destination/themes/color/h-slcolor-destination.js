"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var color_hsl_1 = require("../../../../../core/model/color/color-hsl");
var constants_1 = require("@devexpress/utils/lib/constants");
var drawing_color_properties_destination_base_1 = require("./drawing-color-properties-destination-base");
var HSLColorDestination = (function (_super) {
    tslib_1.__extends(HSLColorDestination, _super);
    function HSLColorDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HSLColorDestination.prototype.setColorPropertyValue = function (reader) {
        var hue = this.data.readerHelper.getIntegerValue(reader, 'hue', constants_1.Constants.MIN_SAFE_INTEGER);
        var sat = this.data.readerHelper.getIntegerValue(reader, 'sat', constants_1.Constants.MIN_SAFE_INTEGER);
        var lum = this.data.readerHelper.getIntegerValue(reader, 'lum', constants_1.Constants.MIN_SAFE_INTEGER);
        if ((hue == constants_1.Constants.MIN_SAFE_INTEGER) || (sat == constants_1.Constants.MIN_SAFE_INTEGER) || (lum == constants_1.Constants.MIN_SAFE_INTEGER))
            this.data.options.throwInvalidFile('Incorrect hsl value');
        this.colorModelInfo.hsl = new color_hsl_1.ColorHSL(hue, sat, lum);
    };
    return HSLColorDestination;
}(drawing_color_properties_destination_base_1.DrawingColorPropertiesDestinationBase));
exports.HSLColorDestination = HSLColorDestination;
