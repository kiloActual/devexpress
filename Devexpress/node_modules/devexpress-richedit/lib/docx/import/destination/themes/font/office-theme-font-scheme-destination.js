"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var map_creator_1 = require("../../../../../base-utils/map-creator");
var destination_1 = require("../../destination");
var office_theme_font_collection_scheme_destination_1 = require("./office-theme-font-collection-scheme-destination");
var OfficeThemeFontSchemeDestination = (function (_super) {
    tslib_1.__extends(OfficeThemeFontSchemeDestination, _super);
    function OfficeThemeFontSchemeDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OfficeThemeFontSchemeDestination.getThis = function (data) {
        return data.destinationStack.getThis();
    };
    Object.defineProperty(OfficeThemeFontSchemeDestination.prototype, "elementHandlerTable", {
        get: function () {
            return OfficeThemeFontSchemeDestination.handlerTable;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OfficeThemeFontSchemeDestination.prototype, "majorFont", {
        get: function () { return this.data.documentModel.colorProvider.officeTheme.fontScheme.majorFont; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OfficeThemeFontSchemeDestination.prototype, "minorFont", {
        get: function () { return this.data.documentModel.colorProvider.officeTheme.fontScheme.minorFont; },
        enumerable: true,
        configurable: true
    });
    OfficeThemeFontSchemeDestination.prototype.processElementOpen = function (reader) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                this.data.documentModel.colorProvider.officeTheme.fontScheme.name = this.data.readerHelper.readAttribute(reader, 'name');
                return [2];
            });
        });
    };
    OfficeThemeFontSchemeDestination.handlerTable = new map_creator_1.MapCreator()
        .add('majorFont', function (data) { return new office_theme_font_collection_scheme_destination_1.OfficeThemeFontCollectionSchemeDestination(data, OfficeThemeFontSchemeDestination.getThis(data).majorFont); })
        .add('minorFont', function (data) { return new office_theme_font_collection_scheme_destination_1.OfficeThemeFontCollectionSchemeDestination(data, OfficeThemeFontSchemeDestination.getThis(data).minorFont); })
        .get();
    return OfficeThemeFontSchemeDestination;
}(destination_1.ElementDestination));
exports.OfficeThemeFontSchemeDestination = OfficeThemeFontSchemeDestination;
