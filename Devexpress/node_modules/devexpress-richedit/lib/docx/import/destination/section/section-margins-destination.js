"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var constants_1 = require("@devexpress/utils/lib/constants");
var destination_1 = require("../destination");
var SectionMarginsDestination = (function (_super) {
    tslib_1.__extends(SectionMarginsDestination, _super);
    function SectionMarginsDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(SectionMarginsDestination.prototype, "secProps", {
        get: function () {
            return this.data.sectionImporter.properties;
        },
        enumerable: true,
        configurable: true
    });
    SectionMarginsDestination.prototype.processElementOpen = function (reader) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var value;
            return tslib_1.__generator(this, function (_a) {
                value = this.data.readerHelper.getWpSTIntegerValue(reader, 'left', constants_1.Constants.MIN_SAFE_INTEGER);
                if (value != constants_1.Constants.MIN_SAFE_INTEGER)
                    this.secProps.margins.left = Math.max(0, value);
                value = this.data.readerHelper.getWpSTIntegerValue(reader, 'right', constants_1.Constants.MIN_SAFE_INTEGER);
                if (value != constants_1.Constants.MIN_SAFE_INTEGER)
                    this.secProps.margins.right = Math.max(0, value);
                value = this.data.readerHelper.getWpSTIntegerValue(reader, 'top', constants_1.Constants.MIN_SAFE_INTEGER);
                if (value != constants_1.Constants.MIN_SAFE_INTEGER)
                    this.secProps.margins.top = Math.max(0, value);
                value = this.data.readerHelper.getWpSTIntegerValue(reader, 'bottom', constants_1.Constants.MIN_SAFE_INTEGER);
                if (value != constants_1.Constants.MIN_SAFE_INTEGER)
                    this.secProps.margins.bottom = Math.max(0, value);
                value = this.data.readerHelper.getWpSTIntegerValue(reader, 'header', constants_1.Constants.MIN_SAFE_INTEGER);
                if (value != constants_1.Constants.MIN_SAFE_INTEGER)
                    this.secProps.headerOffset = Math.max(0, value);
                value = this.data.readerHelper.getWpSTIntegerValue(reader, 'footer', constants_1.Constants.MIN_SAFE_INTEGER);
                if (value != constants_1.Constants.MIN_SAFE_INTEGER)
                    this.secProps.footerOffset = Math.max(0, value);
                return [2];
            });
        });
    };
    return SectionMarginsDestination;
}(destination_1.LeafElementDestination));
exports.SectionMarginsDestination = SectionMarginsDestination;
