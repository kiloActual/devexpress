"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var paper_kind_1 = require("../../../../core/model/section/paper-kind");
var constants_1 = require("@devexpress/utils/lib/constants");
var size_1 = require("@devexpress/utils/lib/geometry/size");
var destination_1 = require("../destination");
var SectionPageSizeDestination = (function (_super) {
    tslib_1.__extends(SectionPageSizeDestination, _super);
    function SectionPageSizeDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(SectionPageSizeDestination.prototype, "secProps", {
        get: function () {
            return this.data.sectionImporter.properties;
        },
        enumerable: true,
        configurable: true
    });
    SectionPageSizeDestination.prototype.processElementOpen = function (reader) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var value, paperKind;
            return tslib_1.__generator(this, function (_a) {
                value = this.data.readerHelper.getWpSTIntegerValue(reader, 'w', constants_1.Constants.MIN_SAFE_INTEGER);
                if (value != constants_1.Constants.MIN_SAFE_INTEGER)
                    this.secProps.pageSize.width = value;
                value = this.data.readerHelper.getWpSTIntegerValue(reader, 'h', constants_1.Constants.MIN_SAFE_INTEGER);
                if (value != constants_1.Constants.MIN_SAFE_INTEGER)
                    this.secProps.pageSize.height = value;
                value = this.data.readerHelper.getWpSTIntegerValue(reader, 'code', constants_1.Constants.MIN_SAFE_INTEGER);
                paperKind = value == constants_1.Constants.MIN_SAFE_INTEGER ? paper_kind_1.PaperKind.Custom : value;
                this.secProps.landscape = (reader.getAttributeNS('orient', this.data.constants.wordProcessingNamespaceConst) == 'landscape');
                this.validatePaperKind(paperKind, this.secProps);
                return [2, Promise.resolve()];
            });
        });
    };
    SectionPageSizeDestination.prototype.validatePaperKind = function (paperKind, secProps) {
        var paperKindSize = paper_kind_1.PaperSizeConverter.calculatePaperSize(paperKind);
        if (secProps.pageSize.width <= 0)
            secProps.pageSize.width = secProps.landscape ? paperKindSize.height : paperKindSize.width;
        if (secProps.pageSize.height <= 0)
            secProps.pageSize.height = secProps.landscape ? paperKindSize.width : paperKindSize.height;
        else {
            var size = secProps.landscape ? new size_1.Size(secProps.pageSize.height, secProps.pageSize.width) : secProps.pageSize.clone();
            paperKind = paper_kind_1.PaperSizeConverter.calculatePaperKind(size, paper_kind_1.PaperKind.Custom, 0, paper_kind_1.PaperKind.Letter);
            secProps.paperKind = paperKind;
        }
    };
    return SectionPageSizeDestination;
}(destination_1.LeafElementDestination));
exports.SectionPageSizeDestination = SectionPageSizeDestination;
