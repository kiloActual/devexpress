"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var enums_1 = require("../../../../../core/model/enums");
var enums_2 = require("../../../../../core/model/section/enums");
var string_1 = require("@devexpress/utils/lib/utils/string");
var path_helper_1 = require("../../../../utils/path-helper");
var destination_1 = require("../../destination");
var header_footer_destination_1 = require("./header-footer-destination");
var HeaderFooterReferenceDestinationBase = (function (_super) {
    tslib_1.__extends(HeaderFooterReferenceDestinationBase, _super);
    function HeaderFooterReferenceDestinationBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HeaderFooterReferenceDestinationBase.prototype.processElementOpen = function (reader) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var id, sdType, hdrReader;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        id = reader.getAttributeNS('id', this.data.constants.relsNamespaceConst);
                        if (string_1.StringUtils.isNullOrEmpty(id))
                            this.data.options.throwInvalidFile('Invalid file. Not found header');
                        sdType = reader.getAttributeNS('type', this.data.constants.wordProcessingNamespaceConst);
                        return [4, this.data.relationsStack.last.lookupPackageFileStreamByRelationId(id, this.data.documentRootFolder)];
                    case 1:
                        hdrReader = _a.sent();
                        return [4, this.data.addRelations(this.data.documentRootFolder + "/_rels/" + path_helper_1.PathHelper.getFileName(hdrReader.filePath) + ".rels")];
                    case 2:
                        _a.sent();
                        if (!hdrReader.readToFollowingNS(this.isHeader() ? 'hdr' : 'ftr', this.data.constants.wordProcessingNamespaceConst)) return [3, 4];
                        this.data.pushCurrentSubDocument(this.createSubDocument(sdType));
                        return [4, this.data.importContent(hdrReader, new header_footer_destination_1.HeaderFooterDestination(this.data))];
                    case 3:
                        _a.sent();
                        return [3, 5];
                    case 4:
                        reader.skipElement();
                        this.data.options.throwInvalidFile("Invalid file. (Don't find header/footer reference)");
                        _a.label = 5;
                    case 5: return [2];
                }
            });
        });
    };
    HeaderFooterReferenceDestinationBase.prototype.processElementClose = function (_reader) {
        this.data.altChunkImporter.insertAltChunks();
        this.data.fixLastParagraph();
        this.data.popCurrentSubDocument();
        this.data.relationsStack.pop();
    };
    HeaderFooterReferenceDestinationBase.prototype.createSubDocument = function (type) {
        if (string_1.StringUtils.isNullOrEmpty(type))
            type = 'default';
        var section = this.data.sectionImporter.section;
        var createdSubDocument = this.documentModel.createSubDocument(this.isHeader() ? enums_1.SubDocumentInfoType.Header : enums_1.SubDocumentInfoType.Footer, -1, true);
        var hfType;
        switch (type) {
            case 'first':
                hfType = enums_2.HeaderFooterType.First;
                break;
            case 'even':
                hfType = enums_2.HeaderFooterType.Even;
                break;
            case 'odd':
            case 'default':
                hfType = enums_2.HeaderFooterType.Odd;
                break;
            default:
                this.data.options.throwInvalidFile('Inknown section type');
        }
        (this.isHeader() ?
            section.headers.setObjectIndex(hfType, this.documentModel.headers.push(createdSubDocument.info) - 1) :
            section.footers.setObjectIndex(hfType, this.documentModel.footers.push(createdSubDocument.info) - 1));
        return createdSubDocument;
    };
    return HeaderFooterReferenceDestinationBase;
}(destination_1.LeafElementDestination));
exports.HeaderFooterReferenceDestinationBase = HeaderFooterReferenceDestinationBase;
var FooterReferenceDestination = (function (_super) {
    tslib_1.__extends(FooterReferenceDestination, _super);
    function FooterReferenceDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FooterReferenceDestination.prototype.isHeader = function () { return false; };
    return FooterReferenceDestination;
}(HeaderFooterReferenceDestinationBase));
exports.FooterReferenceDestination = FooterReferenceDestination;
var HeaderReferenceDestination = (function (_super) {
    tslib_1.__extends(HeaderReferenceDestination, _super);
    function HeaderReferenceDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HeaderReferenceDestination.prototype.isHeader = function () { return true; };
    return HeaderReferenceDestination;
}(HeaderFooterReferenceDestinationBase));
exports.HeaderReferenceDestination = HeaderReferenceDestination;
