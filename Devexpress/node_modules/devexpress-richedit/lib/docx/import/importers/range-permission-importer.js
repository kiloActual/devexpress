"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var range_permissions_1 = require("../../../core/model/range-permissions");
var boundary_1 = require("@devexpress/utils/lib/intervals/boundary");
var number_1 = require("@devexpress/utils/lib/utils/map/number");
var RangePermissionImporter = (function () {
    function RangePermissionImporter(data) {
        this.data = data;
        this.rangePermissions = {};
    }
    RangePermissionImporter.prototype.insertRangePermissions = function () {
        var _this = this;
        number_1.NumberMapUtils.forEach(this.rangePermissions, function (range) {
            if (range.validate(_this.data.subDocument)) {
                if (range.columnFirst < 0 && range.columnLast < 0) {
                    _this.addPermission(range, range.start, range.end);
                    return;
                }
                for (var i = range.firstRowIndex; i <= range.lastRowIndex; i++)
                    _this.createDocumentPermissions(range, i);
            }
        });
        this.data.subDocument.rangePermissions.sort(function (a, b) { return a.start != b.start ? a.start - b.start : a.end - b.end; });
    };
    RangePermissionImporter.prototype.createDocumentPermissions = function (range, rowIndex) {
        var cells = range.table.rows[rowIndex].cells;
        var cellsCount = cells.length;
        if (range.columnFirst < cellsCount) {
            var firstCellStartLogPosition = cells[range.columnFirst].startParagraphPosition.value;
            var lastCellEndLogPosition = cells[Math.min(range.columnLast, cellsCount - 1)].endParagrapPosition.value;
            if (range.start < lastCellEndLogPosition && range.end > firstCellStartLogPosition)
                this.addPermission(range, Math.max(range.start, firstCellStartLogPosition), Math.min(range.end, lastCellEndLogPosition));
        }
    };
    RangePermissionImporter.prototype.addPermission = function (info, start, end) {
        if (end >= start)
            this.data.subDocument.rangePermissions.push(new range_permissions_1.RangePermission(this.data.subDocument.positionManager, new boundary_1.BoundaryInterval(start, end + 1), info.userName ? info.userName : '', info.group ? info.group : ''));
    };
    return RangePermissionImporter;
}());
exports.RangePermissionImporter = RangePermissionImporter;
