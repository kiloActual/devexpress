"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var character_properties_1 = require("../../../core/model/character/character-properties");
var chunk_1 = require("../../../core/model/chunk");
var text_manipulator_1 = require("../../../core/model/manipulators/text-manipulator/text-manipulator");
var text_run_1 = require("../../../core/model/runs/text-run");
var properties_bundle_1 = require("../../../core/rich-utils/properties-bundle");
var list_1 = require("@devexpress/utils/lib/utils/list");
var search_1 = require("@devexpress/utils/lib/utils/search");
var CharacterImporter = (function () {
    function CharacterImporter(data) {
        this.data = data;
        this.resetProperties();
        if (!this.data.subDocument.chunks[0])
            this.data.subDocument.chunks = [new chunk_1.Chunk(this.data.subDocument.positionManager.registerPosition(0), '', true)];
    }
    Object.defineProperty(CharacterImporter.prototype, "style", {
        get: function () {
            if (!this._style)
                this.resetStyle();
            return this._style;
        },
        set: function (value) {
            this._style = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CharacterImporter.prototype, "charPropsBundle", {
        get: function () { return new properties_bundle_1.MaskedCharacterPropertiesBundle(this.properties, this.style); },
        enumerable: true,
        configurable: true
    });
    CharacterImporter.prototype.resetProperties = function () {
        this.properties = character_properties_1.MaskedCharacterProperties.createDefault(this.data.documentModel);
        return this;
    };
    CharacterImporter.prototype.resetStyle = function () {
        this._style = this.data.stylesImporter.characterManager.defaultStyle;
        return this;
    };
    CharacterImporter.prototype.insertText = function (text) {
        var length = text.length;
        this.addRun(new text_run_1.TextRun(this.data.subDocumentInfo.positionImporter.currPosition, length, this.data.subDocumentInfo.paragraphImporter.paragraph, this.charPropsBundle), text);
    };
    CharacterImporter.prototype.addRun = function (run, text) {
        var chunk = list_1.ListUtils.last(this.data.subDocument.chunks);
        chunk.textRuns.push(run);
        chunk.textBuffer += text;
        this.data.subDocumentInfo.positionImporter.currPosition += run.getLength();
    };
    CharacterImporter.prototype.addRunAtPos = function (run, text, pos) {
        var chunkIndex = search_1.SearchUtils.normedInterpolationIndexOf(this.data.subDocument.chunks, function (c) { return c.startLogPosition.value; }, pos);
        var chunk = this.data.subDocument.chunks[chunkIndex];
        var startOffsetAtChunk = pos - chunk.startLogPosition.value;
        var currentRunIndex = search_1.SearchUtils.normedInterpolationIndexOf(chunk.textRuns, function (r) { return r.startOffset; }, startOffsetAtChunk);
        if (chunk.textRuns[currentRunIndex].startOffset < startOffsetAtChunk)
            this.addRun(run, text);
        else {
            chunk.textRuns.splice(currentRunIndex, 0, run);
            text_manipulator_1.TextManipulator.moveRunsInChunk(chunk, currentRunIndex + 1, text.length);
            chunk.textBuffer = [chunk.textBuffer.substr(0, startOffsetAtChunk), text, chunk.textBuffer.substr(startOffsetAtChunk)].join('');
            this.data.subDocumentInfo.positionImporter.currPosition += run.getLength();
        }
    };
    CharacterImporter.prototype.deleteOneSimpleRun = function (_start) {
    };
    return CharacterImporter;
}());
exports.CharacterImporter = CharacterImporter;
