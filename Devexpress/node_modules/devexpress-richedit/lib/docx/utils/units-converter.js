"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var unit_converter_1 = require("@devexpress/utils/lib/class/unit-converter");
var string_1 = require("@devexpress/utils/lib/utils/string");
var UnitsConverter = (function () {
    function UnitsConverter() {
    }
    UnitsConverter.valueUnitToModelUnitsF = function (info) {
        if (string_1.StringUtils.isNullOrEmpty(info.unit))
            return info.value;
        switch (info.unit.toLowerCase()) {
            case 'km':
                return unit_converter_1.UnitConverter.centimetersToTwips(info.value * 100000);
            case 'm':
                return unit_converter_1.UnitConverter.centimetersToTwips(info.value * 100);
            case 'cm':
                return unit_converter_1.UnitConverter.centimetersToTwips(info.value);
            case 'mm':
                return unit_converter_1.UnitConverter.centimetersToTwips(info.value / 10);
            case 'in':
            case 'inch':
                return unit_converter_1.UnitConverter.inchesToTwips(info.value);
            case 'ft':
                return unit_converter_1.UnitConverter.inchesToTwips(info.value * 12);
            case 'pt':
                return unit_converter_1.UnitConverter.pointsToTwips(info.value);
            case 'pc':
                return unit_converter_1.UnitConverter.picasToTwips(info.value);
            case 'mi':
            case '%':
                return info.value / 100;
        }
        return info.value;
    };
    UnitsConverter.rotationUnitToModelUnits = function (info) {
        if (string_1.StringUtils.isNullOrEmpty(info.unit))
            return info.value;
        switch (info.unit.toLowerCase()) {
            case 'fd':
                return unit_converter_1.UnitConverter.fdToTwips(info.value);
            case '':
                return unit_converter_1.UnitConverter.degreesToTwips(info.value);
            default:
                throw new Error('Invalid rotation value');
        }
    };
    return UnitsConverter;
}());
exports.UnitsConverter = UnitsConverter;
