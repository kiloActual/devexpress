"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var map_creator_1 = require("../../base-utils/map-creator");
var layout_tab_space_box_1 = require("../../core/layout/main-structures/layout-boxes/layout-tab-space-box");
var enums_1 = require("../../core/model/borders/enums");
var enums_2 = require("../../core/model/character/enums");
var color_1 = require("../../core/model/color/color");
var dx_color_1 = require("../../core/model/color/dx-color");
var enums_3 = require("../../core/model/color/enums");
var enums_4 = require("../../core/model/floating-objects/enums");
var list_level_properties_1 = require("../../core/model/numbering-lists/list-level-properties");
var numbering_list_1 = require("../../core/model/numbering-lists/numbering-list");
var paragraph_1 = require("../../core/model/paragraph/paragraph");
var paragraph_properties_1 = require("../../core/model/paragraph/paragraph-properties");
var rich_utils_1 = require("../../core/model/rich-utils");
var enums_5 = require("../../core/model/section/enums");
var shading_pattern_1 = require("../../core/model/shadings/shading-pattern");
var table_base_structures_1 = require("../../core/model/tables/secondary-structures/table-base-structures");
var table_units_1 = require("../../core/model/tables/secondary-structures/table-units");
var enums_6 = require("../../core/model/themes/enums");
var color_2 = require("@devexpress/utils/lib/utils/color");
var number_1 = require("@devexpress/utils/lib/utils/map/number");
var ml_table_data_1 = require("./ml-table-data");
var translation_tables_data_1 = require("./translation-tables-data");
var word_processing_mlvalue_1 = require("./word-processing-mlvalue");
var TranslationTables = (function () {
    function TranslationTables() {
    }
    TranslationTables.createHorizontalPositionTypeAttributeTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionType.Column, 'text');
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionType.Margin, 'margin');
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionType.Page, 'page');
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionType.Character, 'char');
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionType.LeftMargin, 'left-margin-area');
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionType.RightMargin, 'right-margin-area');
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionType.InsideMargin, 'inner-margin-area');
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionType.OutsideMargin, 'outer-margin-area');
        return data;
    };
    TranslationTables.createVerticalPositionTypeAttributeTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionType.Margin, 'margin');
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionType.Page, 'page');
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionType.Line, 'line');
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionType.Paragraph, 'text');
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionType.TopMargin, 'top-margin-area');
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionType.BottomMargin, 'bottom-margin-area');
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionType.InsideMargin, 'inner-margin-area');
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionType.OutsideMargin, 'outer-margin-area');
        return data;
    };
    TranslationTables.createSchemeColorTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_6.SchemeColorValues.Accent1, 'accent1');
        TranslationTables.makeData(data, enums_6.SchemeColorValues.Accent2, 'accent2');
        TranslationTables.makeData(data, enums_6.SchemeColorValues.Accent3, 'accent3');
        TranslationTables.makeData(data, enums_6.SchemeColorValues.Accent4, 'accent4');
        TranslationTables.makeData(data, enums_6.SchemeColorValues.Accent5, 'accent5');
        TranslationTables.makeData(data, enums_6.SchemeColorValues.Accent6, 'accent6');
        TranslationTables.makeData(data, enums_6.SchemeColorValues.Background1, 'bg1');
        TranslationTables.makeData(data, enums_6.SchemeColorValues.Background2, 'bg2');
        TranslationTables.makeData(data, enums_6.SchemeColorValues.Dark1, 'dk1');
        TranslationTables.makeData(data, enums_6.SchemeColorValues.Dark2, 'dk2');
        TranslationTables.makeData(data, enums_6.SchemeColorValues.FollowedHyperlink, 'folHlink');
        TranslationTables.makeData(data, enums_6.SchemeColorValues.Hyperlink, 'hlink');
        TranslationTables.makeData(data, enums_6.SchemeColorValues.Light1, 'lt1');
        TranslationTables.makeData(data, enums_6.SchemeColorValues.Light2, 'lt2');
        TranslationTables.makeData(data, enums_6.SchemeColorValues.Style, 'phClr');
        TranslationTables.makeData(data, enums_6.SchemeColorValues.Text1, 'tx1');
        TranslationTables.makeData(data, enums_6.SchemeColorValues.Text2, 'tx2');
        return data;
    };
    TranslationTables.createSystemColorTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_6.SystemColorValues.Sc3dDkShadow, '3dDkShadow');
        TranslationTables.makeData(data, enums_6.SystemColorValues.Sc3dLight, '3dLight');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScActiveBorder, 'activeBorder');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScActiveCaption, 'activeCaption');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScAppWorkspace, 'appWorkspace');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScBackground, 'background');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScBtnFace, 'btnFace');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScBtnHighlight, 'btnHighlight');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScBtnShadow, 'btnShadow');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScBtnText, 'btnText');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScCaptionText, 'captionText');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScGradientActiveCaption, 'gradientActiveCaption');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScGradientInactiveCaption, 'gradientInactiveCaption');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScGrayText, 'grayText');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScHighlight, 'highlight');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScHighlightText, 'highlightText');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScHotLight, 'hotLight');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScInactiveBorder, 'inactiveBorder');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScInactiveCaption, 'inactiveCaption');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScInactiveCaptionText, 'inactiveCaptionText');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScInfoBk, 'infoBk');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScInfoText, 'infoText');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScMenu, 'menu');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScMenuBar, 'menuBar');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScMenuHighlight, 'menuHighlight');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScMenuText, 'menuText');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScScrollBar, 'scrollBar');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScWindow, 'window');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScWindowFrame, 'windowFrame');
        TranslationTables.makeData(data, enums_6.SystemColorValues.ScWindowText, 'windowText');
        return data;
    };
    TranslationTables.createSimpleThemeColorIndexTable = function () {
        return new map_creator_1.MapCreator()
            .add(enums_3.ThemeColorIndexConstants.Accent1, 'accent1')
            .add(enums_3.ThemeColorIndexConstants.Accent2, 'accent2')
            .add(enums_3.ThemeColorIndexConstants.Accent3, 'accent3')
            .add(enums_3.ThemeColorIndexConstants.Accent4, 'accent4')
            .add(enums_3.ThemeColorIndexConstants.Accent5, 'accent5')
            .add(enums_3.ThemeColorIndexConstants.Accent6, 'accent6')
            .add(enums_3.ThemeColorIndexConstants.Dark1, 'dark1')
            .add(enums_3.ThemeColorIndexConstants.Dark2, 'dark2')
            .add(enums_3.ThemeColorIndexConstants.FollowedHyperlink, 'followedHyperlink')
            .add(enums_3.ThemeColorIndexConstants.Hyperlink, 'hyperlink')
            .add(enums_3.ThemeColorIndexConstants.Light1, 'light1')
            .add(enums_3.ThemeColorIndexConstants.Light2, 'light2')
            .add(enums_3.ThemeColorIndexConstants.None, 'none')
            .get();
    };
    TranslationTables.createSimple2ThemeColorIndexTable = function () {
        return new map_creator_1.MapCreator()
            .add(enums_3.ThemeColorIndexConstants.Accent1, 'accent1')
            .add(enums_3.ThemeColorIndexConstants.Accent2, 'accent2')
            .add(enums_3.ThemeColorIndexConstants.Accent3, 'accent3')
            .add(enums_3.ThemeColorIndexConstants.Accent4, 'accent4')
            .add(enums_3.ThemeColorIndexConstants.Accent5, 'accent5')
            .add(enums_3.ThemeColorIndexConstants.Accent6, 'accent6')
            .add(enums_3.ThemeColorIndexConstants.Dark1, 'dk1')
            .add(enums_3.ThemeColorIndexConstants.Dark2, 'dk2')
            .add(enums_3.ThemeColorIndexConstants.FollowedHyperlink, 'folHlink')
            .add(enums_3.ThemeColorIndexConstants.Hyperlink, 'hlink')
            .add(enums_3.ThemeColorIndexConstants.Light1, 'lt1')
            .add(enums_3.ThemeColorIndexConstants.Light2, 'lt2')
            .get();
    };
    TranslationTables.makeData = function (data, modelValue, key, wordMLValue) {
        data.importMap[key] = data.exportMap[modelValue]
            = new ml_table_data_1.MLTableData(modelValue, new word_processing_mlvalue_1.WordProcessingMLValue(key, wordMLValue));
    };
    TranslationTables.createUnderlineTables = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_2.UnderlineType.None, 'none');
        TranslationTables.makeData(data, enums_2.UnderlineType.Single, 'single');
        TranslationTables.makeData(data, enums_2.UnderlineType.Double, 'double');
        TranslationTables.makeData(data, enums_2.UnderlineType.Dotted, 'dotted');
        TranslationTables.makeData(data, enums_2.UnderlineType.Dashed, 'dash');
        TranslationTables.makeData(data, enums_2.UnderlineType.LongDashed, 'dashLong');
        TranslationTables.makeData(data, enums_2.UnderlineType.DashDotted, 'dotDash');
        TranslationTables.makeData(data, enums_2.UnderlineType.DashDotDotted, 'dotDotDash');
        TranslationTables.makeData(data, enums_2.UnderlineType.DoubleWave, 'wavyDouble');
        TranslationTables.makeData(data, enums_2.UnderlineType.HeavyWave, 'wavyHeavy');
        TranslationTables.makeData(data, enums_2.UnderlineType.ThickDashDotDotted, 'dashDotDotHeavy');
        TranslationTables.makeData(data, enums_2.UnderlineType.ThickDashDotted, 'dashDotHeavy');
        TranslationTables.makeData(data, enums_2.UnderlineType.ThickDashed, 'dashedHeavy');
        TranslationTables.makeData(data, enums_2.UnderlineType.ThickDotted, 'dottedHeavy');
        TranslationTables.makeData(data, enums_2.UnderlineType.ThickLongDashed, 'dashLongHeavy');
        TranslationTables.makeData(data, enums_2.UnderlineType.ThickSingle, 'thick');
        TranslationTables.makeData(data, enums_2.UnderlineType.Wave, 'wave');
        return data;
    };
    TranslationTables.createThemeColorValuesTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_3.ThemeColorValues.Accent1, 'accent1');
        TranslationTables.makeData(data, enums_3.ThemeColorValues.Accent2, 'accent2');
        TranslationTables.makeData(data, enums_3.ThemeColorValues.Accent3, 'accent3');
        TranslationTables.makeData(data, enums_3.ThemeColorValues.Accent4, 'accent4');
        TranslationTables.makeData(data, enums_3.ThemeColorValues.Accent5, 'accent5');
        TranslationTables.makeData(data, enums_3.ThemeColorValues.Accent6, 'accent6');
        TranslationTables.makeData(data, enums_3.ThemeColorValues.Dark1, 'dark1');
        TranslationTables.makeData(data, enums_3.ThemeColorValues.Dark2, 'dark2');
        TranslationTables.makeData(data, enums_3.ThemeColorValues.FollowedHyperlink, 'followedHyperlink');
        TranslationTables.makeData(data, enums_3.ThemeColorValues.Hyperlink, 'hyperlink');
        TranslationTables.makeData(data, enums_3.ThemeColorValues.Light1, 'light1');
        TranslationTables.makeData(data, enums_3.ThemeColorValues.Light2, 'light2');
        TranslationTables.makeData(data, enums_3.ThemeColorValues.None, 'none');
        TranslationTables.makeData(data, enums_3.ThemeColorValues.Background1, 'background1');
        TranslationTables.makeData(data, enums_3.ThemeColorValues.Background2, 'background2');
        TranslationTables.makeData(data, enums_3.ThemeColorValues.Text1, 'text1');
        TranslationTables.makeData(data, enums_3.ThemeColorValues.Text2, 'text2');
        return data;
    };
    TranslationTables.createSectionStartTypeTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_5.SectionStartType.NextPage, 'nextPage');
        TranslationTables.makeData(data, enums_5.SectionStartType.OddPage, 'oddPage');
        TranslationTables.makeData(data, enums_5.SectionStartType.EvenPage, 'evenPage');
        TranslationTables.makeData(data, enums_5.SectionStartType.Column, 'nextColumn');
        TranslationTables.makeData(data, enums_5.SectionStartType.Continuous, 'continuous');
        return data;
    };
    TranslationTables.createLineNumberingRestartTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, list_level_properties_1.LineNumberingRestart.Continuous, 'continuous');
        TranslationTables.makeData(data, list_level_properties_1.LineNumberingRestart.NewPage, 'newPage');
        TranslationTables.makeData(data, list_level_properties_1.LineNumberingRestart.NewSection, 'newSection');
        return data;
    };
    TranslationTables.createPageNumberingFormatTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.None, 'none');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.Decimal, 'decimal');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.AIUEOFullWidthHiragana, 'aiueoFullWidth');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.AIUEOHiragana, 'aiueo');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.ArabicAbjad, 'arabicAbjad');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.ArabicAlpha, 'arabicAlpha');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.Bullet, 'bullet');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.CardinalText, 'cardinalText');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.Chicago, 'chicago');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.ChineseCounting, 'chineseCounting');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.ChineseCountingThousand, 'chineseCountingThousand');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.ChineseLegalSimplified, 'chineseLegalSimplified');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.Chosung, 'chosung');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.DecimalEnclosedCircle, 'decimalEnclosedCircle');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.DecimalEnclosedCircleChinese, 'decimalEnclosedCircleChinese');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.DecimalEnclosedFullstop, 'decimalEnclosedFullstop');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.DecimalEnclosedParentheses, 'decimalEnclosedParen');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.DecimalFullWidth, 'decimalFullWidth');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.DecimalFullWidth2, 'decimalFullWidth2');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.DecimalHalfWidth, 'decimalHalfWidth');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.DecimalZero, 'decimalZero');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.Ganada, 'ganada');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.Hebrew1, 'hebrew1');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.Hebrew2, 'hebrew2');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.Hex, 'hex');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.HindiConsonants, 'hindiConsonants');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.HindiDescriptive, 'hindiCounting');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.HindiNumbers, 'hindiNumbers');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.HindiVowels, 'hindiVowels');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.IdeographDigital, 'ideographDigital');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.IdeographEnclosedCircle, 'ideographEnclosedCircle');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.IdeographLegalTraditional, 'ideographLegalTraditional');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.IdeographTraditional, 'ideographTraditional');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.IdeographZodiac, 'ideographZodiac');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.IdeographZodiacTraditional, 'ideographZodiacTraditional');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.Iroha, 'iroha');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.IrohaFullWidth, 'irohaFullWidth');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.JapaneseCounting, 'japaneseCounting');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.JapaneseDigitalTenThousand, 'japaneseDigitalTenThousand');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.JapaneseLegal, 'japaneseLegal');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.KoreanCounting, 'koreanCounting');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.KoreanDigital, 'koreanDigital');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.KoreanDigital2, 'koreanDigital2');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.KoreanLegal, 'koreanLegal');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.LowerLetter, 'lowerLetter');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.LowerRoman, 'lowerRoman');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.NumberInDash, 'numberInDash');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.Ordinal, 'ordinal');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.OrdinalText, 'ordinalText');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.RussianLower, 'russianLower');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.RussianUpper, 'russianUpper');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.TaiwaneseCounting, 'taiwaneseCounting');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.TaiwaneseCountingThousand, 'taiwaneseCountingThousand');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.TaiwaneseDigital, 'taiwaneseDigital');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.ThaiDescriptive, 'thaiCounting');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.ThaiLetters, 'thaiLetters');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.ThaiNumbers, 'thaiNumbers');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.UpperLetter, 'upperLetter');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.UpperRoman, 'upperRoman');
        TranslationTables.makeData(data, list_level_properties_1.NumberingFormat.VietnameseDescriptive, 'vietnameseCounting');
        return data;
    };
    TranslationTables.createChapterSeparatorsTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, ':'.charCodeAt(0), 'colon');
        TranslationTables.makeData(data, rich_utils_1.RichUtils.specialCharacters.EmDash.charCodeAt(0), 'emDash');
        TranslationTables.makeData(data, rich_utils_1.RichUtils.specialCharacters.EnDash.charCodeAt(0), 'enDash');
        TranslationTables.makeData(data, rich_utils_1.RichUtils.specialCharacters.Hyphen.charCodeAt(0), 'hyphen');
        TranslationTables.makeData(data, '.'.charCodeAt(0), 'period');
        return data;
    };
    TranslationTables.createVerticalAlignmentTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, table_base_structures_1.TableCellVerticalAlignment.Top, 'top');
        TranslationTables.makeData(data, table_base_structures_1.TableCellVerticalAlignment.Center, 'center');
        TranslationTables.makeData(data, table_base_structures_1.TableCellVerticalAlignment.Bottom, 'bottom');
        TranslationTables.makeData(data, table_base_structures_1.TableCellVerticalAlignment.Both, 'both');
        return data;
    };
    TranslationTables.createDrawingTextAnchoringTypeTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_4.DrawingTextAnchoringType.Top, 't', 'top');
        TranslationTables.makeData(data, enums_4.DrawingTextAnchoringType.Center, 'ctr', 'middle');
        TranslationTables.makeData(data, enums_4.DrawingTextAnchoringType.Justified, 'just');
        TranslationTables.makeData(data, enums_4.DrawingTextAnchoringType.Bottom, 'b', 'bottom');
        return data;
    };
    TranslationTables.createBorderLineStyleTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Nil, 'nil');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.DashDotStroked, 'dashDotStroked');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Dashed, 'dashed');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.DashSmallGap, 'dashSmallGap');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.DotDash, 'dotDash');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.DotDotDash, 'dotDotDash');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Dotted, 'dotted');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Double, 'double');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.DoubleWave, 'doubleWave');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Inset, 'inset');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Disabled, 'disabled');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.None, 'none');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Outset, 'outset');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Single, 'single');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Thick, 'thick');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ThickThinLargeGap, 'thickThinLargeGap');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ThickThinMediumGap, 'thickThinMediumGap');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ThickThinSmallGap, 'thickThinSmallGap');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ThinThickLargeGap, 'thinThickLargeGap');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ThinThickMediumGap, 'thinThickMediumGap');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ThinThickSmallGap, 'thinThickSmallGap');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ThinThickThinLargeGap, 'thinThickThinLargeGap');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ThinThickThinMediumGap, 'thinThickThinMediumGap');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ThinThickThinSmallGap, 'thinThickThinSmallGap');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ThreeDEmboss, 'threeDEmboss');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ThreeDEngrave, 'threeDEngrave');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Triple, 'triple');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Wave, 'wave');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Apples, 'apples');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ArchedScallops, 'archedScallops');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.BabyPacifier, 'babyPacifier');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.BabyRattle, 'babyRattle');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Balloons3Colors, 'balloons3Colors');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.BalloonsHotAir, 'balloonsHotAir');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.BasicBlackDashes, 'basicBlackDashes');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.BasicBlackDots, 'basicBlackDots');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.BasicBlackSquares, 'basicBlackSquares');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.BasicThinLines, 'basicThinLines');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.BasicWhiteDashes, 'basicWhiteDashes');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.BasicWhiteDots, 'basicWhiteDots');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.BasicWhiteSquares, 'basicWhiteSquares');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.BasicWideInline, 'basicWideInline');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.BasicWideMidline, 'basicWideMidline');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.BasicWideOutline, 'basicWideOutline');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Bats, 'bats');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Birds, 'birds');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.BirdsFlight, 'birdsFlight');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Cabins, 'cabins');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.CakeSlice, 'cakeSlice');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.CandyCorn, 'candyCorn');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.CelticKnotwork, 'celticKnotwork');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.CertificateBanner, 'certificateBanner');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ChainLink, 'chainLink');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ChampagneBottle, 'champagneBottle');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.CheckedBarBlack, 'checkedBarBlack');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.CheckedBarColor, 'checkedBarColor');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Checkered, 'checkered');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ChristmasTree, 'christmasTree');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.CirclesLines, 'circlesLines');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.CirclesRectangles, 'circlesRectangles');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ClassicalWave, 'classicalWave');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Clocks, 'clocks');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Compass, 'compass');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Confetti, 'confetti');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ConfettiGrays, 'confettiGrays');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ConfettiOutline, 'confettiOutline');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ConfettiStreamers, 'confettiStreamers');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ConfettiWhite, 'confettiWhite');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.CornerTriangles, 'cornerTriangles');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.CouponCutoutDashes, 'couponCutoutDashes');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.CouponCutoutDots, 'couponCutoutDots');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.CrazyMaze, 'crazyMaze');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.CreaturesButterfly, 'creaturesButterfly');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.CreaturesFish, 'creaturesFish');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.CreaturesInsects, 'creaturesInsects');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.CreaturesLadyBug, 'creaturesLadyBug');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.CrossStitch, 'crossStitch');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Cup, 'cup');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.DecoArch, 'decoArch');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.DecoArchColor, 'decoArchColor');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.DecoBlocks, 'decoBlocks');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.DiamondsGray, 'diamondsGray');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.DoubleD, 'doubleD');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.DoubleDiamonds, 'doubleDiamonds');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Earth1, 'earth1');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Earth2, 'earth2');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.EclipsingSquares1, 'eclipsingSquares1');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.EclipsingSquares2, 'eclipsingSquares2');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.EggsBlack, 'eggsBlack');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Fans, 'fans');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Film, 'film');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Firecrackers, 'firecrackers');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.FlowersBlockPrint, 'flowersBlockPrint');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.FlowersDaisies, 'flowersDaisies');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.FlowersModern1, 'flowersModern1');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.FlowersModern2, 'flowersModern2');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.FlowersPansy, 'flowersPansy');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.FlowersRedRose, 'flowersRedRose');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.FlowersRoses, 'flowersRoses');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.FlowersTeacup, 'flowersTeacup');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.FlowersTiny, 'flowersTiny');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Gems, 'gems');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.GingerbreadMan, 'gingerbreadMan');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Gradient, 'gradient');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Handmade1, 'handmade1');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Handmade2, 'handmade2');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.HeartBalloon, 'heartBalloon');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.HeartGray, 'heartGray');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Hearts, 'hearts');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.HeebieJeebies, 'heebieJeebies');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Holly, 'holly');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.HouseFunky, 'houseFunky');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Hypnotic, 'hypnotic');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.IceCreamCones, 'iceCreamCones');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.LightBulb, 'lightBulb');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Lightning1, 'lightning1');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Lightning2, 'lightning2');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.MapleLeaf, 'mapleLeaf');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.MapleMuffins, 'mapleMuffins');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.MapPins, 'mapPins');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Marquee, 'marquee');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.MarqueeToothed, 'marqueeToothed');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Moons, 'moons');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Mosaic, 'mosaic');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.MusicNotes, 'musicNotes');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Northwest, 'northwest');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Ovals, 'ovals');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Packages, 'packages');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.PalmsBlack, 'palmsBlack');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.PalmsColor, 'palmsColor');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.PaperClips, 'paperClips');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Papyrus, 'papyrus');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.PartyFavor, 'partyFavor');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.PartyGlass, 'partyGlass');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Pencils, 'pencils');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.People, 'people');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.PeopleHats, 'peopleHats');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.PeopleWaving, 'peopleWaving');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Poinsettias, 'poinsettias');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.PostageStamp, 'postageStamp');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Pumpkin1, 'pumpkin1');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.PushPinNote1, 'pushPinNote1');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.PushPinNote2, 'pushPinNote2');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Pyramids, 'pyramids');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.PyramidsAbove, 'pyramidsAbove');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Quadrants, 'quadrants');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Rings, 'rings');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Safari, 'safari');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Sawtooth, 'sawtooth');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.SawtoothGray, 'sawtoothGray');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ScaredCat, 'scaredCat');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Seattle, 'seattle');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ShadowedSquares, 'shadowedSquares');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.SharksTeeth, 'sharksTeeth');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ShorebirdTracks, 'shorebirdTracks');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Skyrocket, 'skyrocket');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.SnowflakeFancy, 'snowflakeFancy');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Snowflakes, 'snowflakes');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Sombrero, 'sombrero');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Southwest, 'southwest');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Stars, 'stars');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Stars3d, 'stars3d');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.StarsBlack, 'starsBlack');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.StarsShadowed, 'starsShadowed');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.StarsTop, 'starsTop');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Sun, 'sun');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Swirligig, 'swirligig');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.TornPaper, 'tornPaper');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.TornPaperBlack, 'tornPaperBlack');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Trees, 'trees');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.TriangleParty, 'triangleParty');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Triangles, 'triangles');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Tribal1, 'tribal1');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Tribal2, 'tribal2');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Tribal3, 'tribal3');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Tribal4, 'tribal4');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Tribal5, 'tribal5');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Tribal6, 'tribal6');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.TwistedLines1, 'twistedLines1');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.TwistedLines2, 'twistedLines2');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Vine, 'vine');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Waveline, 'waveline');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.WeavingAngles, 'weavingAngles');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.WeavingBraid, 'weavingBraid');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.WeavingRibbon, 'weavingRibbon');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.WeavingStrips, 'weavingStrips');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.WhiteFlowers, 'whiteFlowers');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.Woodwork, 'woodwork');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.XIllusions, 'xIllusions');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ZanyTriangles, 'zanyTriangles');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ZigZag, 'zigZag');
        TranslationTables.makeData(data, enums_1.BorderLineStyle.ZigZagStitch, 'zigZagStitch');
        return data;
    };
    TranslationTables.createShadingPatternTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Clear, 'clear');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.DiagCross, 'diagCross');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.DiagStripe, 'diagStripe');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.HorzCross, 'horzCross');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.HorzStripe, 'horzStripe');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Nil, 'nil');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct10, 'pct10');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct12, 'pct12');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct15, 'pct15');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct20, 'pct20');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct25, 'pct25');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct30, 'pct30');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct35, 'pct35');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct37, 'pct37');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct40, 'pct40');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct45, 'pct45');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct5, 'pct5');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct50, 'pct50');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct55, 'pct55');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct60, 'pct60');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct62, 'pct62');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct65, 'pct65');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct70, 'pct70');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct75, 'pct75');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct80, 'pct80');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct85, 'pct85');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct87, 'pct87');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct90, 'pct90');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Pct95, 'pct95');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.ReverseDiagStripe, 'reverseDiagStripe');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.Solid, 'solid');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.ThinDiagCross, 'thinDiagCross');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.ThinDiagStripe, 'ThinDiagStripe');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.ThinHorzCross, 'thinHorzCross');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.ThinHorzStripe, 'thinHorzStripe');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.ThinReverseDiagStripe, 'thinReverseDiagStripe');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.ThinVertStripe, 'thinVertStripe');
        TranslationTables.makeData(data, shading_pattern_1.ShadingPattern.VertStripe, 'vertStripe');
        return data;
    };
    TranslationTables.createParagraphLineSpacingTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, paragraph_properties_1.ParagraphLineSpacingType.Single, 'auto');
        TranslationTables.makeData(data, paragraph_properties_1.ParagraphLineSpacingType.Double, 'auto');
        TranslationTables.makeData(data, paragraph_properties_1.ParagraphLineSpacingType.Sesquialteral, 'auto');
        TranslationTables.makeData(data, paragraph_properties_1.ParagraphLineSpacingType.Multiple, 'auto');
        TranslationTables.makeData(data, paragraph_properties_1.ParagraphLineSpacingType.Exactly, 'exact');
        TranslationTables.makeData(data, paragraph_properties_1.ParagraphLineSpacingType.AtLeast, 'atLeast');
        return data;
    };
    TranslationTables.createParagraphAlignmentTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, paragraph_properties_1.ParagraphAlignment.Left, 'left');
        TranslationTables.makeData(data, paragraph_properties_1.ParagraphAlignment.Right, 'right');
        TranslationTables.makeData(data, paragraph_properties_1.ParagraphAlignment.Center, 'center');
        TranslationTables.makeData(data, paragraph_properties_1.ParagraphAlignment.Justify, 'both');
        return data;
    };
    TranslationTables.createPredefinedBackgroundColors = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, dx_color_1.DXColor.empty, 'none');
        TranslationTables.makeData(data, color_1.ColorHelper.getPredefinedColor(color_2.ColorUtils.colorNames.black), 'black');
        TranslationTables.makeData(data, dx_color_1.DXColor.fromRgb(0x00, 0x00, 0xFF), 'blue');
        TranslationTables.makeData(data, dx_color_1.DXColor.fromRgb(0x00, 0xFF, 0xFF), 'cyan');
        TranslationTables.makeData(data, dx_color_1.DXColor.fromRgb(0x00, 0x00, 0x80), 'darkBlue');
        TranslationTables.makeData(data, dx_color_1.DXColor.fromRgb(0x00, 0x80, 0x80), 'darkCyan');
        TranslationTables.makeData(data, dx_color_1.DXColor.fromRgb(0x80, 0x80, 0x80), 'darkGray');
        TranslationTables.makeData(data, dx_color_1.DXColor.fromRgb(0x00, 0x80, 0x00), 'darkGreen');
        TranslationTables.makeData(data, dx_color_1.DXColor.fromRgb(0x80, 0x00, 0x80), 'darkMagenta');
        TranslationTables.makeData(data, dx_color_1.DXColor.fromRgb(0x80, 0x00, 0x00), 'darkRed');
        TranslationTables.makeData(data, dx_color_1.DXColor.fromRgb(0x80, 0x80, 0x00), 'darkYellow');
        TranslationTables.makeData(data, dx_color_1.DXColor.fromRgb(0x00, 0xFF, 0x00), 'green');
        TranslationTables.makeData(data, dx_color_1.DXColor.fromRgb(0xC0, 0xC0, 0xC0), 'lightGray');
        TranslationTables.makeData(data, dx_color_1.DXColor.fromRgb(0xFF, 0x00, 0xFF), 'magenta');
        TranslationTables.makeData(data, dx_color_1.DXColor.fromRgb(0xFF, 0x00, 0x00), 'red');
        TranslationTables.makeData(data, dx_color_1.DXColor.fromRgb(0xFF, 0xFF, 0xFF), 'white');
        TranslationTables.makeData(data, dx_color_1.DXColor.fromRgb(0xFF, 0xFF, 0x00), 'yellow');
        return data;
    };
    TranslationTables.createRunBreaksTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, rich_utils_1.RichUtils.specialCharacters.LineBreak.charCodeAt(0), 'textWrapping');
        TranslationTables.makeData(data, rich_utils_1.RichUtils.specialCharacters.PageBreak.charCodeAt(0), 'page');
        TranslationTables.makeData(data, rich_utils_1.RichUtils.specialCharacters.ColumnBreak.charCodeAt(0), 'column');
        return data;
    };
    TranslationTables.createHorizontalAnchorTypesTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, table_base_structures_1.HorizontalAnchorTypes.Column, 'text');
        TranslationTables.makeData(data, table_base_structures_1.HorizontalAnchorTypes.Margin, 'margin');
        TranslationTables.makeData(data, table_base_structures_1.HorizontalAnchorTypes.Page, 'page');
        return data;
    };
    TranslationTables.createVerticalAnchorTypesTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, table_base_structures_1.VerticalAnchorTypes.Paragraph, 'text');
        TranslationTables.makeData(data, table_base_structures_1.VerticalAnchorTypes.Margin, 'margin');
        TranslationTables.makeData(data, table_base_structures_1.VerticalAnchorTypes.Page, 'page');
        return data;
    };
    TranslationTables.createHorizontalAlignModeTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, table_base_structures_1.HorizontalAlignMode.Center, 'center');
        TranslationTables.makeData(data, table_base_structures_1.HorizontalAlignMode.Inside, 'inside');
        TranslationTables.makeData(data, table_base_structures_1.HorizontalAlignMode.Left, 'left');
        TranslationTables.makeData(data, table_base_structures_1.HorizontalAlignMode.Outside, 'outside');
        TranslationTables.makeData(data, table_base_structures_1.HorizontalAlignMode.Right, 'right');
        return data;
    };
    TranslationTables.createVerticalAlignModeTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, table_base_structures_1.VerticalAlignMode.Bottom, 'bottom');
        TranslationTables.makeData(data, table_base_structures_1.VerticalAlignMode.Center, 'center');
        TranslationTables.makeData(data, table_base_structures_1.VerticalAlignMode.Inline, 'inline');
        TranslationTables.makeData(data, table_base_structures_1.VerticalAlignMode.Inside, 'inside');
        TranslationTables.makeData(data, table_base_structures_1.VerticalAlignMode.Outside, 'outside');
        TranslationTables.makeData(data, table_base_structures_1.VerticalAlignMode.Top, 'top');
        return data;
    };
    TranslationTables.createWidthUnitTypesTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, table_units_1.TableWidthUnitType.Auto, 'auto');
        TranslationTables.makeData(data, table_units_1.TableWidthUnitType.FiftiethsOfPercent, 'pct');
        TranslationTables.makeData(data, table_units_1.TableWidthUnitType.ModelUnits, 'dxa');
        TranslationTables.makeData(data, table_units_1.TableWidthUnitType.Nil, 'nil');
        return data;
    };
    TranslationTables.createTableRowAlignmentTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, table_base_structures_1.TableRowAlignment.Both, 'both');
        TranslationTables.makeData(data, table_base_structures_1.TableRowAlignment.Center, 'center');
        TranslationTables.makeData(data, table_base_structures_1.TableRowAlignment.Distribute, 'distribute');
        TranslationTables.makeData(data, table_base_structures_1.TableRowAlignment.Left, 'left');
        TranslationTables.makeData(data, table_base_structures_1.TableRowAlignment.NumTab, 'numTab');
        TranslationTables.makeData(data, table_base_structures_1.TableRowAlignment.Right, 'right');
        return data;
    };
    TranslationTables.createStrictTableRowAlignmentTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, table_base_structures_1.TableRowAlignment.Both, 'both');
        TranslationTables.makeData(data, table_base_structures_1.TableRowAlignment.Center, 'center');
        TranslationTables.makeData(data, table_base_structures_1.TableRowAlignment.Distribute, 'distribute');
        TranslationTables.makeData(data, table_base_structures_1.TableRowAlignment.Left, 'start');
        TranslationTables.makeData(data, table_base_structures_1.TableRowAlignment.NumTab, 'numTab');
        TranslationTables.makeData(data, table_base_structures_1.TableRowAlignment.Right, 'end');
        return data;
    };
    TranslationTables.createTableLayoutTypeTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, table_base_structures_1.TableLayoutType.Autofit, 'autofit');
        TranslationTables.makeData(data, table_base_structures_1.TableLayoutType.Fixed, 'fixed');
        return data;
    };
    TranslationTables.createHeightUnitTypeTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, table_units_1.TableHeightUnitType.Auto, 'auto');
        TranslationTables.makeData(data, table_units_1.TableHeightUnitType.Exact, 'exact');
        TranslationTables.makeData(data, table_units_1.TableHeightUnitType.Minimum, 'atLeast');
        return data;
    };
    TranslationTables.createMergingStateTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, table_base_structures_1.TableCellMergingState.None, 'none');
        TranslationTables.makeData(data, table_base_structures_1.TableCellMergingState.Restart, 'restart');
        TranslationTables.makeData(data, table_base_structures_1.TableCellMergingState.Continue, 'continue');
        return data;
    };
    TranslationTables.createHeaderFooterTypeTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_5.HeaderFooterType.Even, 'even');
        TranslationTables.makeData(data, enums_5.HeaderFooterType.First, 'first');
        TranslationTables.makeData(data, enums_5.HeaderFooterType.Odd, 'default');
        return data;
    };
    TranslationTables.createNumberingListTypeTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, numbering_list_1.NumberingType.Bullet, 'hybridMultilevel', 'HybridMultilevel');
        TranslationTables.makeData(data, numbering_list_1.NumberingType.Simple, 'hybridMultilevel', 'HybridMultilevel');
        TranslationTables.makeData(data, numbering_list_1.NumberingType.MultiLevel, 'multilevel', 'Multilevel');
        return data;
    };
    TranslationTables.createListNumberSeparatorTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, '\0'.charCodeAt(0), 'nothing');
        TranslationTables.makeData(data, ' '.charCodeAt(0), 'space');
        TranslationTables.makeData(data, rich_utils_1.RichUtils.specialCharacters.TabMark.charCodeAt(0), 'tab');
        return data;
    };
    TranslationTables.createListNumberAlignmentTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, list_level_properties_1.ListNumberAlignment.Left, 'left');
        TranslationTables.makeData(data, list_level_properties_1.ListNumberAlignment.Right, 'right');
        TranslationTables.makeData(data, list_level_properties_1.ListNumberAlignment.Center, 'center');
        return data;
    };
    TranslationTables.createTabLeaderTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, layout_tab_space_box_1.TabLeaderType.None, 'none');
        TranslationTables.makeData(data, layout_tab_space_box_1.TabLeaderType.Dots, 'dot');
        TranslationTables.makeData(data, layout_tab_space_box_1.TabLeaderType.Hyphens, 'hyphen');
        TranslationTables.makeData(data, layout_tab_space_box_1.TabLeaderType.EqualSign, 'hyphen');
        TranslationTables.makeData(data, layout_tab_space_box_1.TabLeaderType.MiddleDots, 'middleDot');
        TranslationTables.makeData(data, layout_tab_space_box_1.TabLeaderType.ThickLine, 'heavy');
        TranslationTables.makeData(data, layout_tab_space_box_1.TabLeaderType.Underline, 'underscore');
        return data;
    };
    TranslationTables.createTabAlignmentTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, paragraph_1.TabAlign.Left, 'left');
        TranslationTables.makeData(data, paragraph_1.TabAlign.Right, 'right');
        TranslationTables.makeData(data, paragraph_1.TabAlign.Center, 'center');
        TranslationTables.makeData(data, paragraph_1.TabAlign.Decimal, 'decimal');
        return data;
    };
    TranslationTables.createStrictTabAlignmentTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, paragraph_1.TabAlign.Left, 'start');
        TranslationTables.makeData(data, paragraph_1.TabAlign.Right, 'end');
        TranslationTables.makeData(data, paragraph_1.TabAlign.Center, 'center');
        TranslationTables.makeData(data, paragraph_1.TabAlign.Decimal, 'decimal');
        return data;
    };
    TranslationTables.createTextBoxVerticalAlignmentTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_4.TextBoxVerticalAlignment.Top, 't', 'top');
        TranslationTables.makeData(data, enums_4.TextBoxVerticalAlignment.Center, 'ctr', 'middle');
        TranslationTables.makeData(data, enums_4.TextBoxVerticalAlignment.Both, 'just');
        TranslationTables.makeData(data, enums_4.TextBoxVerticalAlignment.Bottom, 'b', 'bottom');
        return data;
    };
    TranslationTables.createConditionalTableStyleFormattingTypesTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, table_base_structures_1.ConditionalTableStyleFormatting.BottomLeftCell, 'swCell', 'swCell');
        TranslationTables.makeData(data, table_base_structures_1.ConditionalTableStyleFormatting.BottomRightCell, 'seCell', 'seCell');
        TranslationTables.makeData(data, table_base_structures_1.ConditionalTableStyleFormatting.EvenColumnBanding, 'band2Vert', 'band2Vert');
        TranslationTables.makeData(data, table_base_structures_1.ConditionalTableStyleFormatting.EvenRowBanding, 'band2Horz', 'band2Horz');
        TranslationTables.makeData(data, table_base_structures_1.ConditionalTableStyleFormatting.FirstColumn, 'firstCol', 'firstCol');
        TranslationTables.makeData(data, table_base_structures_1.ConditionalTableStyleFormatting.FirstRow, 'firstRow', 'firstRow');
        TranslationTables.makeData(data, table_base_structures_1.ConditionalTableStyleFormatting.LastColumn, 'lastCol', 'lastCol');
        TranslationTables.makeData(data, table_base_structures_1.ConditionalTableStyleFormatting.LastRow, 'lastRow', 'lastRow');
        TranslationTables.makeData(data, table_base_structures_1.ConditionalTableStyleFormatting.OddColumnBanding, 'band1Vert', 'band1Vert');
        TranslationTables.makeData(data, table_base_structures_1.ConditionalTableStyleFormatting.OddRowBanding, 'band1Horz', 'band1Horz');
        TranslationTables.makeData(data, table_base_structures_1.ConditionalTableStyleFormatting.TopLeftCell, 'nwCell', 'nwCell');
        TranslationTables.makeData(data, table_base_structures_1.ConditionalTableStyleFormatting.TopRightCell, 'neCell', 'neCell');
        TranslationTables.makeData(data, table_base_structures_1.ConditionalTableStyleFormatting.WholeTable, 'wholeTable', 'wholeTable');
        return data;
    };
    TranslationTables.createFloatingObjectHorizontalPositionTypeTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionType.Column, 'column', 'text');
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionType.Margin, 'margin');
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionType.Page, 'page');
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionType.Character, 'character', 'char');
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionType.LeftMargin, 'leftMargin', 'page');
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionType.RightMargin, 'rightMargin', 'page');
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionType.InsideMargin, 'insideMargin', 'page');
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionType.OutsideMargin, 'outsideMargin', 'page');
        return data;
    };
    TranslationTables.createFloatingObjectHorizontalPositionAlignmentTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionAlignment.Left, 'left');
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionAlignment.Center, 'center');
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionAlignment.Right, 'right');
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionAlignment.Inside, 'inside');
        TranslationTables.makeData(data, enums_4.AnchorObjectHorizontalPositionAlignment.Outside, 'outside');
        return data;
    };
    TranslationTables.createFloatingObjectVerticalPositionTypeTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionType.Margin, 'margin');
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionType.Page, 'page', 'margin');
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionType.Line, 'line');
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionType.Paragraph, 'paragraph', 'text');
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionType.TopMargin, 'topMargin', 'page');
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionType.BottomMargin, 'bottomMargin', 'page');
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionType.InsideMargin, 'insideMargin', 'page');
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionType.OutsideMargin, 'outsideMargin', 'page');
        return data;
    };
    TranslationTables.createFloatingObjectVerticalPositionAlignmentTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionAlignment.Top, 'top');
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionAlignment.Center, 'center');
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionAlignment.Bottom, 'bottom');
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionAlignment.Inside, 'inside');
        TranslationTables.makeData(data, enums_4.AnchorObjectVerticalPositionAlignment.Outside, 'outside');
        return data;
    };
    TranslationTables.createFloatingObjectTextWrapTypeTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_4.AnchorObjectTextWrapType.TopAndBottom, 'wrapTopAndBottom', 'topAndBottom');
        TranslationTables.makeData(data, enums_4.AnchorObjectTextWrapType.Square, 'wrapSquare', 'square');
        TranslationTables.makeData(data, enums_4.AnchorObjectTextWrapType.Through, 'wrapThrough', 'through');
        TranslationTables.makeData(data, enums_4.AnchorObjectTextWrapType.Tight, 'wrapTight', 'tight');
        TranslationTables.makeData(data, enums_4.AnchorObjectTextWrapType.None, 'wrapNone', 'none');
        return data;
    };
    TranslationTables.createFloatingObjectTextWrapSideTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_4.AnchorObjectTextWrapSide.Both, 'bothSides', 'both-sides');
        TranslationTables.makeData(data, enums_4.AnchorObjectTextWrapSide.Left, 'left');
        TranslationTables.makeData(data, enums_4.AnchorObjectTextWrapSide.Right, 'right');
        TranslationTables.makeData(data, enums_4.AnchorObjectTextWrapSide.Largest, 'largest');
        return data;
    };
    TranslationTables.createFloatingObjectRelativeFromHorizontalTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_4.RelativeWidthType.Margin, 'margin');
        TranslationTables.makeData(data, enums_4.RelativeWidthType.Page, 'page');
        TranslationTables.makeData(data, enums_4.RelativeWidthType.LeftMargin, 'leftMargin');
        TranslationTables.makeData(data, enums_4.RelativeWidthType.RightMargin, 'rightMargin');
        TranslationTables.makeData(data, enums_4.RelativeWidthType.OutsideMargin, 'outsideMargin');
        TranslationTables.makeData(data, enums_4.RelativeWidthType.InsideMargin, 'insideMargin');
        return data;
    };
    TranslationTables.createFloatingObjectRelativeFromVerticalTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_4.RelativeHeightType.Margin, 'margin');
        TranslationTables.makeData(data, enums_4.RelativeHeightType.Page, 'page');
        TranslationTables.makeData(data, enums_4.RelativeHeightType.TopMargin, 'topMargin');
        TranslationTables.makeData(data, enums_4.RelativeHeightType.BottomMargin, 'bottomMargin');
        TranslationTables.makeData(data, enums_4.RelativeHeightType.OutsideMargin, 'outsideMargin');
        TranslationTables.makeData(data, enums_4.RelativeHeightType.InsideMargin, 'insideMargin');
        return data;
    };
    TranslationTables.createFloatingObjectCssRelativeFromHorizontalTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_4.RelativeWidthType.Margin, 'margin');
        TranslationTables.makeData(data, enums_4.RelativeWidthType.Page, 'page');
        TranslationTables.makeData(data, enums_4.RelativeWidthType.LeftMargin, 'left-margin-area');
        TranslationTables.makeData(data, enums_4.RelativeWidthType.RightMargin, 'right-margin-area');
        TranslationTables.makeData(data, enums_4.RelativeWidthType.OutsideMargin, 'outer-margin-area');
        TranslationTables.makeData(data, enums_4.RelativeWidthType.InsideMargin, 'inner-margin-area');
        return data;
    };
    TranslationTables.createFloatingObjectCssRelativeFromVerticalTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_4.RelativeHeightType.Margin, 'margin');
        TranslationTables.makeData(data, enums_4.RelativeHeightType.Page, 'page');
        TranslationTables.makeData(data, enums_4.RelativeHeightType.TopMargin, 'top-margin-area');
        TranslationTables.makeData(data, enums_4.RelativeHeightType.BottomMargin, 'bottom-margin-area');
        TranslationTables.makeData(data, enums_4.RelativeHeightType.OutsideMargin, 'outer-margin-area');
        TranslationTables.makeData(data, enums_4.RelativeHeightType.InsideMargin, 'inner-margin-area');
        return data;
    };
    TranslationTables.createThemeColorIndexTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, enums_3.ThemeColorIndexConstants.Accent1, 'accent1');
        TranslationTables.makeData(data, enums_3.ThemeColorIndexConstants.Accent2, 'accent2');
        TranslationTables.makeData(data, enums_3.ThemeColorIndexConstants.Accent3, 'accent3');
        TranslationTables.makeData(data, enums_3.ThemeColorIndexConstants.Accent4, 'accent4');
        TranslationTables.makeData(data, enums_3.ThemeColorIndexConstants.Accent5, 'accent5');
        TranslationTables.makeData(data, enums_3.ThemeColorIndexConstants.Accent6, 'accent6');
        TranslationTables.makeData(data, enums_3.ThemeColorIndexConstants.FollowedHyperlink, 'folHlink');
        TranslationTables.makeData(data, enums_3.ThemeColorIndexConstants.Hyperlink, 'hlink');
        TranslationTables.makeData(data, enums_3.ThemeColorIndexConstants.Dark1, 'dk1');
        TranslationTables.makeData(data, enums_3.ThemeColorIndexConstants.Dark2, 'dk2');
        TranslationTables.makeData(data, enums_3.ThemeColorIndexConstants.Light1, 'lt1');
        TranslationTables.makeData(data, enums_3.ThemeColorIndexConstants.Light2, 'lt2');
        return data;
    };
    TranslationTables.createTextDirectionTable = function () {
        var data = new translation_tables_data_1.TranslationTablesData();
        TranslationTables.makeData(data, table_base_structures_1.TextDirection.LeftToRightTopToBottom, 'lrTb');
        TranslationTables.makeData(data, table_base_structures_1.TextDirection.LeftToRightTopToBottomRotated, 'lrTbV');
        TranslationTables.makeData(data, table_base_structures_1.TextDirection.BottomToTopLeftToRight, 'btLr');
        TranslationTables.makeData(data, table_base_structures_1.TextDirection.TopToBottomLeftToRightRotated, 'tbLrV');
        TranslationTables.makeData(data, table_base_structures_1.TextDirection.TopToBottomRightToLeft, 'tbRl');
        TranslationTables.makeData(data, table_base_structures_1.TextDirection.TopToBottomRightToLeftRotated, 'tbRlV');
        return data;
    };
    TranslationTables.sectionStartTypeTable = TranslationTables.createSectionStartTypeTable();
    TranslationTables.lineNumberingRestartTable = TranslationTables.createLineNumberingRestartTable();
    TranslationTables.pageNumberingFormatTable = TranslationTables.createPageNumberingFormatTable();
    TranslationTables.chapterSeparatorsTable = TranslationTables.createChapterSeparatorsTable();
    TranslationTables.verticalAlignmentTable = TranslationTables.createVerticalAlignmentTable();
    TranslationTables.drawingTextAnchoringType = TranslationTables.createDrawingTextAnchoringTypeTable();
    TranslationTables.textDirectionTable = TranslationTables.createTextDirectionTable();
    TranslationTables.borderLineStyleTable = TranslationTables.createBorderLineStyleTable();
    TranslationTables.themeColorValueTable = TranslationTables.createThemeColorValuesTable();
    TranslationTables.themeColorIndexTable = TranslationTables.createThemeColorIndexTable();
    TranslationTables.simpleThemeColorIndexTable = TranslationTables.createSimpleThemeColorIndexTable();
    TranslationTables.simple2ThemeColorIndexTable = TranslationTables.createSimple2ThemeColorIndexTable();
    TranslationTables.shadingPatternTable = TranslationTables.createShadingPatternTable();
    TranslationTables.lineSpacingTable = TranslationTables.createParagraphLineSpacingTable();
    TranslationTables.paragraphAlignmentTable = TranslationTables.createParagraphAlignmentTable();
    TranslationTables.underlineTables = TranslationTables.createUnderlineTables();
    TranslationTables.predefinedBackgroundColors = TranslationTables.createPredefinedBackgroundColors();
    TranslationTables.listOfKeysPredefinedBackgroundColors = number_1.NumberMapUtils.toListBy(TranslationTables.predefinedBackgroundColors.exportMap, function (_e, key) { return key; });
    TranslationTables.runBreaksTable = TranslationTables.createRunBreaksTable();
    TranslationTables.horizontalAnchorTypesTable = TranslationTables.createHorizontalAnchorTypesTable();
    TranslationTables.verticalAnchorTypesTable = TranslationTables.createVerticalAnchorTypesTable();
    TranslationTables.horizontalAlignModeTable = TranslationTables.createHorizontalAlignModeTable();
    TranslationTables.verticalAlignModeTable = TranslationTables.createVerticalAlignModeTable();
    TranslationTables.widthUnitTypesTable = TranslationTables.createWidthUnitTypesTable();
    TranslationTables.tableRowAlignmentTable = TranslationTables.createTableRowAlignmentTable();
    TranslationTables.strictTableRowAlignmentTable = TranslationTables.createStrictTableRowAlignmentTable();
    TranslationTables.tableLayoutTypeTable = TranslationTables.createTableLayoutTypeTable();
    TranslationTables.heightUnitTypeTable = TranslationTables.createHeightUnitTypeTable();
    TranslationTables.mergingStateTable = TranslationTables.createMergingStateTable();
    TranslationTables.headerFooterTypeTable = TranslationTables.createHeaderFooterTypeTable();
    TranslationTables.floatingObjectHorizontalPositionTypeTable = TranslationTables.createFloatingObjectHorizontalPositionTypeTable();
    TranslationTables.floatingObjectHorizontalPositionAlignmentTable = TranslationTables.createFloatingObjectHorizontalPositionAlignmentTable();
    TranslationTables.floatingObjectVerticalPositionTypeTable = TranslationTables.createFloatingObjectVerticalPositionTypeTable();
    TranslationTables.floatingObjectVerticalPositionAlignmentTable = TranslationTables.createFloatingObjectVerticalPositionAlignmentTable();
    TranslationTables.floatingObjectTextWrapTypeTable = TranslationTables.createFloatingObjectTextWrapTypeTable();
    TranslationTables.floatingObjectTextWrapSideTable = TranslationTables.createFloatingObjectTextWrapSideTable();
    TranslationTables.floatingObjectRelativeFromHorizontalTable = TranslationTables.createFloatingObjectRelativeFromHorizontalTable();
    TranslationTables.floatingObjectRelativeFromVerticalTable = TranslationTables.createFloatingObjectRelativeFromVerticalTable();
    TranslationTables.textBoxVerticalAlignmentTable = TranslationTables.createTextBoxVerticalAlignmentTable();
    TranslationTables.floatingObjectCssRelativeFromHorizontalTable = TranslationTables.createFloatingObjectCssRelativeFromHorizontalTable();
    TranslationTables.floatingObjectCssRelativeFromVerticalTable = TranslationTables.createFloatingObjectCssRelativeFromVerticalTable();
    TranslationTables.tabAlignmentTable = TranslationTables.createTabAlignmentTable();
    TranslationTables.strictTabAlignmentTable = TranslationTables.createStrictTabAlignmentTable();
    TranslationTables.tabLeaderTable = TranslationTables.createTabLeaderTable();
    TranslationTables.conditionalTableStyleFormattingTypesTable = TranslationTables.createConditionalTableStyleFormattingTypesTable();
    TranslationTables.numberingListTypeTable = TranslationTables.createNumberingListTypeTable();
    TranslationTables.listNumberSeparatorTable = TranslationTables.createListNumberSeparatorTable();
    TranslationTables.listNumberAlignmentTable = TranslationTables.createListNumberAlignmentTable();
    TranslationTables.schemeColorTable = TranslationTables.createSchemeColorTable();
    TranslationTables.systemColorTable = TranslationTables.createSystemColorTable();
    TranslationTables.horizontalPositionTypeAttributeTable = TranslationTables.createHorizontalPositionTypeAttributeTable();
    TranslationTables.verticalPositionTypeAttributeTable = TranslationTables.createVerticalPositionTypeAttributeTable();
    return TranslationTables;
}());
exports.TranslationTables = TranslationTables;
