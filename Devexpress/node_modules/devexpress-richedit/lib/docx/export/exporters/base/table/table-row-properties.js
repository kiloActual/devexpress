"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var table_row_properties_1 = require("../../../../../core/model/tables/properties/table-row-properties");
var table_base_structures_1 = require("../../../../../core/model/tables/secondary-structures/table-base-structures");
var table_units_1 = require("../../../../../core/model/tables/secondary-structures/table-units");
var translation_tables_1 = require("../../../../translation-table/translation-tables");
var writer_helper_1 = require("../../../utils/writer-helper");
var base_1 = require("../../base");
var TableRowPropertiesExporter = (function (_super) {
    tslib_1.__extends(TableRowPropertiesExporter, _super);
    function TableRowPropertiesExporter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableRowPropertiesExporter.convertTableRowAlignment = function (value) {
        return value == table_base_structures_1.TableRowAlignment.Both ?
            translation_tables_1.TranslationTables.tableRowAlignmentTable[table_base_structures_1.TableRowAlignment.Center].mlValue.openXmlValue :
            writer_helper_1.WriterHelper.getValueFromTables(translation_tables_1.TranslationTables.tableRowAlignmentTable, value, table_base_structures_1.TableRowAlignment.Left);
    };
    TableRowPropertiesExporter.prototype.exportTableRowProperties = function (row) {
        var props = row.properties;
        this.writer.writeWpStartElement('trPr');
        this.exportTableRowPropertiesCore(props);
        if (row.gridBefore) {
            this.writer.writeWpIntValue('gridBefore', row.gridBefore);
            this.data.tableWidthExporter.exportWidthUnitValue('wBefore', row.widthBefore);
        }
        if (row.gridAfter) {
            this.writer.writeWpIntValue('gridAfter', row.gridAfter);
            this.data.tableWidthExporter.exportWidthUnitValue('wAfter', row.widthAfter);
        }
        if (row.height.value != 0)
            this.exportTableRowHeight(row.height);
        this.writer.endElement();
    };
    TableRowPropertiesExporter.prototype.exportPropsForStyles = function (props) {
        this.writer.writeWpStartElement('trPr');
        this.exportTableRowPropertiesCore(props);
        this.writer.endElement();
    };
    TableRowPropertiesExporter.prototype.exportTableRowPropertiesCore = function (props) {
        if (props.getUseValue(table_row_properties_1.TableRowPropertiesMask.UseCantSplit))
            this.writer.writeWpEmptyElement('cantSplit');
        if (props.getUseValue(table_row_properties_1.TableRowPropertiesMask.UseHeader))
            this.writer.writeWpEmptyElement('tblHeader');
        if (props.getUseValue(table_row_properties_1.TableRowPropertiesMask.UseCellSpacing))
            this.data.tableWidthExporter.exportWidthUnitValue('tblCellSpacing', props.cellSpacing);
        if (props.tableRowAlignment != table_base_structures_1.TableRowAlignment.Left)
            this.writer.writeWpStringValue('jc', TableRowPropertiesExporter.convertTableRowAlignment(props.tableRowAlignment));
        if (props.getUseValue(table_row_properties_1.TableRowPropertiesMask.UseHideCellMark))
            this.writer.writeWpBoolValue('hidden', props.hideCellMark);
        if (props.getUseValue(table_row_properties_1.TableRowPropertiesMask.UseDivId))
            this.writer.writeWpIntValue('divId', props.divId);
    };
    TableRowPropertiesExporter.prototype.exportTableRowHeight = function (height) {
        this.writer.writeWpStartElement('trHeight');
        if (height.type != table_units_1.TableHeightUnitType.Auto)
            this.writer.writeWpStringAttr('hRule', writer_helper_1.WriterHelper.getValueFromTables(translation_tables_1.TranslationTables.heightUnitTypeTable, height.type, table_units_1.TableHeightUnitType.Auto));
        this.writer.writeWpIntAttr('val', height.value);
        this.writer.endElement();
    };
    return TableRowPropertiesExporter;
}(base_1.BaseExporter));
exports.TableRowPropertiesExporter = TableRowPropertiesExporter;
