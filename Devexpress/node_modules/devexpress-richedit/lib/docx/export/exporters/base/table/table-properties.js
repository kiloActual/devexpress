"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var enums_1 = require("../../../../../core/model/borders/enums");
var shading_info_1 = require("../../../../../core/model/shadings/shading-info");
var table_properties_1 = require("../../../../../core/model/tables/properties/table-properties");
var table_base_structures_1 = require("../../../../../core/model/tables/secondary-structures/table-base-structures");
var table_units_1 = require("../../../../../core/model/tables/secondary-structures/table-units");
var unit_converter_1 = require("@devexpress/utils/lib/class/unit-converter");
var string_1 = require("@devexpress/utils/lib/utils/string");
var translation_tables_1 = require("../../../../translation-table/translation-tables");
var writer_helper_1 = require("../../../utils/writer-helper");
var base_1 = require("../../base");
var table_cell_properties_1 = require("./table-cell-properties");
var table_row_properties_1 = require("./table-row-properties");
var TablePropertiesExporter = (function (_super) {
    tslib_1.__extends(TablePropertiesExporter, _super);
    function TablePropertiesExporter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TablePropertiesExporter.exportTableBorderCore = function (data, border, exportAutoColor) {
        data.writer.writeWpStringAttr('val', writer_helper_1.WriterHelper.getValueFromTables(translation_tables_1.TranslationTables.borderLineStyleTable, border.style, enums_1.BorderLineStyle.None));
        data.writer.writeWpIntAttr('sz', unit_converter_1.UnitConverter.twipsToPoints(border.width * 8.0));
        data.writer.writeWpIntAttr('space', unit_converter_1.UnitConverter.twipsToPoints(border.offset));
        data.writer.writeWpBoolAttr('shadow', border.shadow);
        data.writer.writeWpBoolAttr('frame', border.frame);
        data.colorExporter.exportColorInfo(border.color, 'color', exportAutoColor);
    };
    TablePropertiesExporter.prototype.exportTablePropertiesCore = function (table, exportTableLayout) {
        var props = table.properties;
        this.exportCoreProps(props, exportTableLayout);
        if (!props.isTableOverlap)
            this.writer.writeWpStringValue('tblOverlap', props.isTableOverlap ? 'overlap' : 'never');
        if (props.getUseValue(table_properties_1.TablePropertiesMask.UseTableStyleRowBandSize))
            this.writer.writeWpIntValue('tblStyleRowBandSize', Math.max(props.tableStyleRowBandSize, 1));
        if (props.getUseValue(table_properties_1.TablePropertiesMask.UseTableStyleColBandSize))
            this.writer.writeWpIntValue('tblStyleColBandSize', Math.max(props.tableStyleColumnBandSize, 1));
        this.data.tableWidthExporter.exportWidthUnitValue('tblW', table.preferredWidth);
        this.exportTableBorders(props);
        this.exportCellMargins(props);
        if (table.lookTypes != table_base_structures_1.TableLookTypes.None)
            this.writer.writeWpStringValue('tblLook', string_1.StringUtils.padLeft(table.lookTypes.toString(16).toUpperCase(), 4, '0'));
    };
    TablePropertiesExporter.prototype.exportTablePropertiesForStyle = function (props) {
        this.writer.writeWpStartElement('tblPr');
        this.exportCoreProps(props, false);
        this.exportCellMargins(props);
        this.writer.endElement();
    };
    TablePropertiesExporter.prototype.exportTablePropertiesException = function (props) {
        if (this.shouldExportTblPropsException(props)) {
            this.writer.writeWpStartElement('tblPrEx');
            this.exportCoreProps(props, true);
            if (table_cell_properties_1.TableCellPropertiesExporter.shouldExportCellMargins(this.data, props.cellMargins))
                table_cell_properties_1.TableCellPropertiesExporter.exportCellMargins(this.data, 'tblCellMar', props.cellMargins);
            this.writer.endElement();
        }
    };
    TablePropertiesExporter.prototype.exportCoreProps = function (props, exportTableLayout) {
        if (props.getUseValue(table_properties_1.TablePropertiesMask.UseTableAlignment))
            this.writer.writeWpStringValue('jc', table_row_properties_1.TableRowPropertiesExporter.convertTableRowAlignment(props.tableRowAlignment));
        if (props.getUseValue(table_properties_1.TablePropertiesMask.UseCellSpacing))
            this.data.tableWidthExporter.exportWidthUnitValue('tblCellSpacing', props.cellSpacing);
        if (props.getUseValue(table_properties_1.TablePropertiesMask.UseTableIndent))
            this.data.tableWidthExporter.exportWidthUnitValue('tblInd', props.indent);
        this.exportTableBorders(props);
        if (!props.shadingInfo.equals(shading_info_1.ShadingInfo.noColor))
            this.data.colorExporter.exportShadingCore(props.shadingInfo, false);
        if (props.getUseValue(table_properties_1.TablePropertiesMask.UseTableLayout) && exportTableLayout) {
            this.writer.writeWpStartElement('tblLayout');
            this.writer.writeWpStringAttr('type', writer_helper_1.WriterHelper.getValueFromTables(translation_tables_1.TranslationTables.tableLayoutTypeTable, props.layoutType, table_base_structures_1.TableLayoutType.Autofit));
            this.writer.endElement();
        }
    };
    TablePropertiesExporter.prototype.shouldExportTblPropsException = function (props) {
        return props.getUseValue(table_properties_1.TablePropertiesMask.UseTableAlignment) ||
            props.getUseValue(table_properties_1.TablePropertiesMask.UseCellSpacing) ||
            props.getUseValue(table_properties_1.TablePropertiesMask.UseTableIndent) ||
            props.getUseValue(table_properties_1.TablePropertiesMask.UseShadingInfoIndex) ||
            props.getUseValue(table_properties_1.TablePropertiesMask.UseTableLayout) ||
            this.shouldExportTableBorders(props) ||
            table_cell_properties_1.TableCellPropertiesExporter.shouldExportCellMargins(this.data, props.cellMargins);
    };
    TablePropertiesExporter.prototype.exportCellMargins = function (props) {
        if (!props.getUseValue(table_properties_1.TablePropertiesMask.UseLeftMargin) &&
            !props.getUseValue(table_properties_1.TablePropertiesMask.UseRightMargin) &&
            !props.getUseValue(table_properties_1.TablePropertiesMask.UseTopMargin) &&
            !props.getUseValue(table_properties_1.TablePropertiesMask.UseBottomMargin))
            return;
        this.writer.writeWpStartElement('tblCellMar');
        if (props.getUseValue(table_properties_1.TablePropertiesMask.UseTopMargin))
            this.exportCellMargin('top', props.cellMargins.top);
        if (props.getUseValue(table_properties_1.TablePropertiesMask.UseLeftMargin))
            this.exportCellMargin('left', props.cellMargins.left);
        if (props.getUseValue(table_properties_1.TablePropertiesMask.UseBottomMargin))
            this.exportCellMargin('bottom', props.cellMargins.bottom);
        if (props.getUseValue(table_properties_1.TablePropertiesMask.UseRightMargin))
            this.exportCellMargin('right', props.cellMargins.right);
        this.writer.endElement();
    };
    TablePropertiesExporter.prototype.exportCellMargin = function (tag, margin) {
        this.data.tableWidthExporter.writeTableUnit(tag, margin.value, margin.type == table_units_1.TableWidthUnitType.Nil && margin.value == 0 ? table_units_1.TableWidthUnitType.ModelUnits : margin.type);
    };
    TablePropertiesExporter.prototype.exportTableBorders = function (props) {
        if (this.shouldExportTableBorders(props)) {
            var borders = props.borders;
            this.writer.writeWpStartElement('tblBorders');
            if (props.getUseValue(table_properties_1.TablePropertiesMask.UseTopBorder))
                this.exportTableBorder('top', borders.topBorder);
            if (props.getUseValue(table_properties_1.TablePropertiesMask.UseLeftBorder))
                this.exportTableBorder('left', borders.leftBorder);
            if (props.getUseValue(table_properties_1.TablePropertiesMask.UseBottomBorder))
                this.exportTableBorder('bottom', borders.bottomBorder);
            if (props.getUseValue(table_properties_1.TablePropertiesMask.UseRightBorder))
                this.exportTableBorder('right', borders.rightBorder);
            if (props.getUseValue(table_properties_1.TablePropertiesMask.UseInsideHorizontalBorder))
                this.exportTableBorder('insideH', borders.insideHorizontalBorder);
            if (props.getUseValue(table_properties_1.TablePropertiesMask.UseInsideVerticalBorder))
                this.exportTableBorder('insideV', borders.insideVerticalBorder);
            this.writer.endElement();
        }
    };
    TablePropertiesExporter.prototype.shouldExportTableBorders = function (props) {
        var shouldUse = function (mask, border) { return props.getUseValue(mask) && border.style != enums_1.BorderLineStyle.Nil; };
        return shouldUse(table_properties_1.TablePropertiesMask.UseTopBorder, props.borders.topBorder) ||
            shouldUse(table_properties_1.TablePropertiesMask.UseRightBorder, props.borders.rightBorder) ||
            shouldUse(table_properties_1.TablePropertiesMask.UseBottomBorder, props.borders.bottomBorder) ||
            shouldUse(table_properties_1.TablePropertiesMask.UseLeftBorder, props.borders.leftBorder) ||
            shouldUse(table_properties_1.TablePropertiesMask.UseInsideHorizontalBorder, props.borders.insideHorizontalBorder) ||
            shouldUse(table_properties_1.TablePropertiesMask.UseInsideVerticalBorder, props.borders.insideVerticalBorder);
    };
    TablePropertiesExporter.prototype.exportTableBorder = function (tag, border) {
        if (border.style == enums_1.BorderLineStyle.Nil)
            return;
        this.writer.writeWpStartElement(tag);
        TablePropertiesExporter.exportTableBorderCore(this.data, border, true);
        this.writer.endElement();
    };
    return TablePropertiesExporter;
}(base_1.BaseExporter));
exports.TablePropertiesExporter = TablePropertiesExporter;
