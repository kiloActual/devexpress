"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var enums_1 = require("../../../../core/model/section/enums");
var section_properties_1 = require("../../../../core/model/section/section-properties");
var unit_converter_1 = require("@devexpress/utils/lib/class/unit-converter");
var size_1 = require("@devexpress/utils/lib/geometry/size");
var translation_tables_1 = require("../../../translation-table/translation-tables");
var constants_1 = require("../../../utils/constants");
var writer_helper_1 = require("../../utils/writer-helper");
var base_1 = require("../base");
var SectionExporter = (function (_super) {
    tslib_1.__extends(SectionExporter, _super);
    function SectionExporter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SectionExporter.createDefaultProperties = function () {
        var props = new section_properties_1.SectionProperties();
        props.pageSize = new size_1.Size(12240, 15840);
        props.landscape = false;
        props.equalWidthColumns = true;
        props.differentFirstPage = false;
        props.space = unit_converter_1.UnitConverter.hundredthsOfMillimeterToTwips(1250);
        return props;
    };
    SectionExporter.prototype.exportProperties = function (section) {
        this.writer.writeWpStartElement('sectPr');
        this.exportSectionHeadersFootersCore(section);
        this.exportSectionPropertiesCore(section);
        this.writer.endElement();
    };
    SectionExporter.prototype.exportHeaderFooter = function (collection, type) {
        var info = collection.getObject(type);
        if (info) {
            var subDocument = this.data.model.subDocuments[info.subDocumentId];
            this.data.exportSubDocumentsList.push(subDocument);
            var relationId = "" + (subDocument.isHeader() ? 'header' : 'footer') + subDocument.id;
            var fileName = relationId + ".xml";
            this.data.contentTypesExporter.registerContentTypeOverride("/word/" + fileName, subDocument.isHeader() ? constants_1.ContentType.header : constants_1.ContentType.footer);
            (subDocument.isHeader() ?
                this.data.mainSubDocumentRelations.headerRelationsTable :
                this.data.mainSubDocumentRelations.footerRelationsTable)[relationId] = fileName;
            this.writer.writeWpStartElement(subDocument.isHeader() ? 'headerReference' : 'footerReference');
            this.writer.writeWpStringAttr('type', writer_helper_1.WriterHelper.getValueFromTables(translation_tables_1.TranslationTables.headerFooterTypeTable, type, enums_1.HeaderFooterType.Odd));
            this.writer.attrNS(constants_1.DocxNsType.Rels, 'id', relationId);
            this.writer.endElement();
        }
    };
    SectionExporter.prototype.exportSectionHeadersFootersCore = function (section) {
        this.exportHeaderFooter(section.headers, enums_1.HeaderFooterType.First);
        this.exportHeaderFooter(section.headers, enums_1.HeaderFooterType.Even);
        this.exportHeaderFooter(section.headers, enums_1.HeaderFooterType.Odd);
        this.exportHeaderFooter(section.footers, enums_1.HeaderFooterType.First);
        this.exportHeaderFooter(section.footers, enums_1.HeaderFooterType.Even);
        this.exportHeaderFooter(section.footers, enums_1.HeaderFooterType.Odd);
    };
    SectionExporter.prototype.exportSectionPropertiesCore = function (section) {
        var props = section.sectionProperties;
        this.writer.writeWpStringValue('type', writer_helper_1.WriterHelper.getValueFromTables(translation_tables_1.TranslationTables.sectionStartTypeTable, props.startType, enums_1.SectionStartType.NextPage));
        this.exportSectionPage(props);
        this.exportSectionMargins(props);
        this.exportSectionLineNumbering(props);
        this.exportSectionPageNumbering(props);
        this.exportSectionColumns(props);
        this.exportSectionGeneralSettings(props);
    };
    SectionExporter.prototype.exportSectionPage = function (props) {
        if (!this.shouldExportSectionPage(props))
            return;
        this.writer.writeWpStartElement('pgSz');
        if (props.pageSize.width != SectionExporter.defaultProps.pageSize.width)
            this.writer.writeWpIntAttr('w', props.pageSize.width);
        if (props.pageSize.height != SectionExporter.defaultProps.pageSize.height)
            this.writer.writeWpIntAttr('h', props.pageSize.height);
        if (props.landscape)
            this.writer.writeWpStringAttr('orient', props.landscape ? 'landscape' : 'portrait');
        this.writer.endElement();
    };
    SectionExporter.prototype.shouldExportSectionPage = function (props) {
        return !props.pageSize.equals(SectionExporter.defaultProps.pageSize) ||
            props.landscape != SectionExporter.defaultProps.landscape;
    };
    SectionExporter.prototype.exportSectionMargins = function (props) {
        this.writer.writeWpStartElement('pgMar');
        this.writer.writeWpIntAttr('left', props.marginLeft);
        this.writer.writeWpIntAttr('right', props.marginRight);
        this.writer.writeWpIntAttr('top', props.marginTop);
        this.writer.writeWpIntAttr('bottom', props.marginBottom);
        this.writer.writeWpIntAttr('header', props.headerOffset);
        this.writer.writeWpIntAttr('footer', props.footerOffset);
        this.writer.endElement();
    };
    SectionExporter.prototype.exportSectionLineNumbering = function (_props) {
    };
    SectionExporter.prototype.exportSectionPageNumbering = function (props) {
        if (!this.shouldExportPageNumbering(props))
            return;
        this.writer.writeWpStartElement("pgNumType");
        try {
            if (!props.continueNumbering)
                this.writer.writeWpIntAttr("start", props.firstPageNumber);
        }
        finally {
            this.writer.endElement();
        }
    };
    SectionExporter.prototype.shouldExportPageNumbering = function (props) {
        return !props.continueNumbering;
    };
    SectionExporter.prototype.exportSectionColumns = function (props) {
        if (!this.shouldExportSectionColumns(props))
            return;
        this.writer.writeWpStartElement('cols');
        this.writer.writeWpBoolAttr('equalWidth', props.equalWidthColumns);
        if (props.equalWidthColumns)
            this.exportEqualWidthColumns(props);
        else
            this.exportNonUniformColumns(props);
        this.writer.endElement();
    };
    SectionExporter.prototype.shouldExportSectionColumns = function (props) {
        return props.equalWidthColumns != SectionExporter.defaultProps.equalWidthColumns ||
            props.columnCount != SectionExporter.defaultProps.columnCount ||
            props.space != SectionExporter.defaultProps.space;
    };
    SectionExporter.prototype.exportEqualWidthColumns = function (props) {
        if (props.columnCount != SectionExporter.defaultProps.columnCount)
            this.writer.writeWpIntAttr('num', props.columnCount);
        if (props.space != SectionExporter.defaultProps.space)
            this.writer.writeWpIntAttr('space', props.space);
    };
    SectionExporter.prototype.exportNonUniformColumns = function (props) {
        if (props.columnsInfo.length != SectionExporter.defaultProps.columnCount)
            this.writer.writeWpIntAttr('num', props.columnsInfo.length);
        for (var _i = 0, _a = props.columnsInfo; _i < _a.length; _i++) {
            var column = _a[_i];
            this.writer.writeWpStartElement('col');
            this.writer.writeWpIntAttr('w', column.width);
            this.writer.writeWpIntAttr('space', column.space);
            this.writer.endElement();
        }
    };
    SectionExporter.prototype.exportSectionGeneralSettings = function (props) {
        if (props.differentFirstPage != SectionExporter.defaultProps.differentFirstPage)
            this.writer.writeWpBoolValue('titlePg', props.differentFirstPage);
    };
    SectionExporter.defaultProps = SectionExporter.createDefaultProperties();
    return SectionExporter;
}(base_1.BaseExporter));
exports.SectionExporter = SectionExporter;
