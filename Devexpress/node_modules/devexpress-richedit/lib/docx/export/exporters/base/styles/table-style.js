"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var enums_1 = require("../../../../../core/model/character/enums");
var numbering_list_1 = require("../../../../../core/model/numbering-lists/numbering-list");
var paragraph_properties_1 = require("../../../../../core/model/paragraph/paragraph-properties");
var table_base_structures_1 = require("../../../../../core/model/tables/secondary-structures/table-base-structures");
var number_1 = require("@devexpress/utils/lib/utils/map/number");
var translation_tables_1 = require("../../../../translation-table/translation-tables");
var writer_helper_1 = require("../../../utils/writer-helper");
var table_cell_properties_1 = require("../table/table-cell-properties");
var table_row_properties_1 = require("../table/table-row-properties");
var style_base_1 = require("./style-base");
var TableStyleExporter = (function (_super) {
    tslib_1.__extends(TableStyleExporter, _super);
    function TableStyleExporter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableStyleExporter.prototype.getStyleId = function (styleIndex) {
        return 'T' + styleIndex.toString();
    };
    TableStyleExporter.prototype.getStyleIndexByName = function (name) {
        return this.data.model.stylesManager.tableStyleNameToIndex[name];
    };
    TableStyleExporter.prototype.getType = function () { return 'table'; };
    TableStyleExporter.prototype.exportCore = function (style) {
        var _this = this;
        this.exportTableConditionalStyle(style.baseConditionalStyle);
        if (style.conditionalStyles && !number_1.NumberMapUtils.isEmpty(style.conditionalStyles)) {
            number_1.NumberMapUtils.forEach(style.conditionalStyles, function (condStyle, styleType) {
                if (condStyle) {
                    _this.writer.writeWpStartElement('tblStylePr');
                    _this.writer.writeWpStringAttr('type', writer_helper_1.WriterHelper.getValueFromTables(translation_tables_1.TranslationTables.conditionalTableStyleFormattingTypesTable, styleType, table_base_structures_1.ConditionalTableStyleFormatting.WholeTable));
                    _this.exportTableConditionalStyle(condStyle);
                    _this.writer.endElement();
                }
            });
        }
    };
    TableStyleExporter.prototype.exportTableConditionalStyle = function (condStyle) {
        if (condStyle.maskedParagraphProperties.useValue != paragraph_properties_1.ParagraphPropertiesMask.UseNone)
            this.data.parPropsExporter.exportStyleParagraphProperties(condStyle.maskedParagraphProperties, condStyle.tabs, numbering_list_1.NumberingList.NumberingListNotSettedIndex, numbering_list_1.NumberingList.NumberingListNotSettedIndex);
        if (condStyle.maskedCharacterProperties.useValue != enums_1.CharacterPropertiesMask.UseNone)
            this.data.charPropsExporter.exportStyleCharacterProperties(condStyle.maskedCharacterProperties);
        this.data.tablePropsExporter.exportTablePropertiesForStyle(condStyle.tableProperties);
        new table_row_properties_1.TableRowPropertiesExporter(this.data).exportPropsForStyles(condStyle.tableRowProperties);
        new table_cell_properties_1.TableCellPropertiesExporter(this.data).exportTableCellPropertiesForStyle(condStyle.tableCellProperties);
    };
    return TableStyleExporter;
}(style_base_1.StyleBaseExporter));
exports.TableStyleExporter = TableStyleExporter;
