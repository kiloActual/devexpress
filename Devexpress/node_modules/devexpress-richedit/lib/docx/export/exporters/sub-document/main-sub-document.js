"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var color_model_info_1 = require("../../../../core/model/color/color-model-info");
var dx_color_1 = require("../../../../core/model/color/dx-color");
var enums_1 = require("../../../../core/model/color/enums");
var list_1 = require("@devexpress/utils/lib/utils/list");
var sections_1 = require("../base/sections");
var document_relations_1 = require("../relations/document-relations");
var base_sub_document_1 = require("./base-sub-document");
var MainSubDocumentExporter = (function (_super) {
    tslib_1.__extends(MainSubDocumentExporter, _super);
    function MainSubDocumentExporter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MainSubDocumentExporter.prototype.createRelationExporter = function () { return new document_relations_1.DocumentRelationsExporter(this.data); };
    Object.defineProperty(MainSubDocumentExporter.prototype, "rootElement", {
        get: function () { return 'document'; },
        enumerable: true,
        configurable: true
    });
    MainSubDocumentExporter.prototype.fillWriterCore = function () {
        this.exportDocumentBackground();
        this.writer.writeWpStartElement('body');
        this.init();
        for (var _i = 0, _a = this.data.model.sections; _i < _a.length; _i++) {
            var section = _a[_i];
            this.exportSection(section, section.interval);
        }
        new sections_1.SectionExporter(this.data).exportProperties(list_1.ListUtils.last(this.data.model.sections));
        this.writer.endElement();
    };
    MainSubDocumentExporter.prototype.exportDocumentBackground = function () {
        var color = this.data.model.pageBackColor;
        var colorInfo = this.data.model.cache.colorModelInfoCache.getItem(color_model_info_1.ColorModelInfo.makeByColor(color));
        if ((color == dx_color_1.DXColor.empty) && (colorInfo.themeColorIndex == enums_1.ThemeColorIndexConstants.None))
            return;
        this.writer.writeWpStartElement('background');
        this.data.colorExporter.exportColorInfo(colorInfo, 'color', false);
        this.writer.endElement();
    };
    return MainSubDocumentExporter;
}(base_sub_document_1.BaseSubDocumentExporter));
exports.MainSubDocumentExporter = MainSubDocumentExporter;
