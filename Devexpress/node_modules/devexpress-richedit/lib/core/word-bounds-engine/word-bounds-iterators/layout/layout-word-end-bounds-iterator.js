"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var layout_position_creator_1 = require("../../../layout-engine/layout-position-creator");
var layout_word_bounds_iterator_1 = require("./layout-word-bounds-iterator");
var LayoutWordEndBoundsIterator = (function (_super) {
    tslib_1.__extends(LayoutWordEndBoundsIterator, _super);
    function LayoutWordEndBoundsIterator(layout, subDocument, selection, startPosition) {
        var _this = this;
        var endPosition = subDocument.isMain() ?
            layout.getLastValidPage().getEndPosition() :
            layout.pages[selection.pageIndex].otherPageAreas[subDocument.id].getEndPosition();
        _this = _super.call(this, layout, subDocument, selection, startPosition, endPosition) || this;
        if (startPosition >= endPosition) {
            _this.isInitOk = false;
            _this.startResultPosition = endPosition;
        }
        return _this;
    }
    LayoutWordEndBoundsIterator.prototype.moveIterator = function () {
        return this.boxIterator.moveNext(new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false));
    };
    LayoutWordEndBoundsIterator.prototype.nextCallsSetCharOffset = function () {
        this.charOffset++;
        return this.charOffset < this.boxIterator.position.box.getLength();
    };
    LayoutWordEndBoundsIterator.prototype.setCharacterOffsetOnNextCalls = function () {
        this.charOffset = this.boxIterator.position.charOffset;
    };
    LayoutWordEndBoundsIterator.prototype.needExcessMoveBoxIterator = function () {
        return false;
    };
    return LayoutWordEndBoundsIterator;
}(layout_word_bounds_iterator_1.LayoutWordBoundsIterator));
exports.LayoutWordEndBoundsIterator = LayoutWordEndBoundsIterator;
