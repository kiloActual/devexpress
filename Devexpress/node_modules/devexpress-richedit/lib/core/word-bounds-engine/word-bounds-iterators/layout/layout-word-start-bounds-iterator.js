"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var layout_position_creator_1 = require("../../../layout-engine/layout-position-creator");
var layout_word_bounds_iterator_1 = require("./layout-word-bounds-iterator");
var LayoutWordStartBoundsIterator = (function (_super) {
    tslib_1.__extends(LayoutWordStartBoundsIterator, _super);
    function LayoutWordStartBoundsIterator(layout, subDocument, selection, startPosition) {
        var _this = this;
        var firstPagePosition = layout.pages[0].getPosition();
        _this = _super.call(this, layout, subDocument, selection, firstPagePosition, startPosition) || this;
        if (startPosition <= firstPagePosition) {
            _this.startResultPosition = 0;
            _this.isInitOk = false;
            return;
        }
        var endPosLastValigPage = subDocument.isMain() ?
            layout.getLastValidPage().getEndPosition() :
            layout.pages[selection.pageIndex].otherPageAreas[subDocument.id].getEndPosition();
        if (startPosition >= endPosLastValigPage) {
            _this.startResultPosition = endPosLastValigPage;
            _this.isInitOk = false;
        }
        return _this;
    }
    LayoutWordStartBoundsIterator.prototype.moveIterator = function () {
        return this.boxIterator.movePrev(new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false));
    };
    LayoutWordStartBoundsIterator.prototype.nextCallsSetCharOffset = function () {
        this.charOffset--;
        return this.charOffset >= 0;
    };
    LayoutWordStartBoundsIterator.prototype.setCharacterOffsetOnNextCalls = function () {
        this.charOffset = this.boxIterator.position.box.getLength() - 1;
    };
    LayoutWordStartBoundsIterator.prototype.needExcessMoveBoxIterator = function () {
        return this.boxIterator.position.charOffset != 0;
    };
    return LayoutWordStartBoundsIterator;
}(layout_word_bounds_iterator_1.LayoutWordBoundsIterator));
exports.LayoutWordStartBoundsIterator = LayoutWordStartBoundsIterator;
