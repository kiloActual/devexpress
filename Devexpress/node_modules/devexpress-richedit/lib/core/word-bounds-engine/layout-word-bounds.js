"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var layout_word_bounds_group_separator_1 = require("./layout-word-bounds-group-separator");
var layout_word_end_bounds_iterator_1 = require("./word-bounds-iterators/layout/layout-word-end-bounds-iterator");
var layout_word_start_bounds_iterator_1 = require("./word-bounds-iterators/layout/layout-word-start-bounds-iterator");
var WordGroupMask;
(function (WordGroupMask) {
    WordGroupMask[WordGroupMask["NoOne"] = 0] = "NoOne";
    WordGroupMask[WordGroupMask["Space"] = 1] = "Space";
    WordGroupMask[WordGroupMask["LeftSingleQuote"] = 2] = "LeftSingleQuote";
    WordGroupMask[WordGroupMask["RightSingleQuote"] = 4] = "RightSingleQuote";
    WordGroupMask[WordGroupMask["LeftDoubleQuote"] = 8] = "LeftDoubleQuote";
    WordGroupMask[WordGroupMask["RightDoubleQuote"] = 16] = "RightDoubleQuote";
    WordGroupMask[WordGroupMask["DoubleQuote"] = 32] = "DoubleQuote";
    WordGroupMask[WordGroupMask["PunctuationMark"] = 64] = "PunctuationMark";
    WordGroupMask[WordGroupMask["DiffersFromAll"] = 128] = "DiffersFromAll";
    WordGroupMask[WordGroupMask["Others"] = 256] = "Others";
})(WordGroupMask = exports.WordGroupMask || (exports.WordGroupMask = {}));
var LayoutWordBounds = (function () {
    function LayoutWordBounds(groupSeparator) {
        this.prevSymbolStartPos = -1;
        this.groupSeparator = groupSeparator;
    }
    LayoutWordBounds.getLayoutWordStartBound = function (layout, subDocument, selection, startPosition) {
        return new LayoutStartWordBound().getBound(new layout_word_start_bounds_iterator_1.LayoutWordStartBoundsIterator(layout, subDocument, selection, startPosition));
    };
    LayoutWordBounds.getLayoutWordEndBound = function (layout, subDocument, selection, startPosition, isJoinSpacesOnEndWord) {
        return new LayoutEndWordBound(isJoinSpacesOnEndWord).getBound(new layout_word_end_bounds_iterator_1.LayoutWordEndBoundsIterator(layout, subDocument, selection, startPosition));
    };
    LayoutWordBounds.prototype.getBound = function (iterator) {
        this.iterator = iterator;
        if (!this.iterator.isSet())
            return this.iterator.startResultPosition;
        while (this.iterator.getNextSymbolGroup()) {
            if (this.groupSeparator.applyMask(this.iterator.groupMask))
                return this.getFinalPosition(true);
            this.prevSymbolStartPos = this.iterator.currSymbolStartPosition();
        }
        return this.getFinalPosition(false);
    };
    return LayoutWordBounds;
}());
exports.LayoutWordBounds = LayoutWordBounds;
var LayoutEndWordBound = (function (_super) {
    tslib_1.__extends(LayoutEndWordBound, _super);
    function LayoutEndWordBound(isJoinSpacesOnEndWord) {
        return _super.call(this, new layout_word_bounds_group_separator_1.LayoutWordBoundsNextGroupSeparator(isJoinSpacesOnEndWord)) || this;
    }
    LayoutEndWordBound.prototype.getFinalPosition = function (byGroupDiffers) {
        return this.prevSymbolStartPos + (byGroupDiffers ? 1 : 0);
    };
    return LayoutEndWordBound;
}(LayoutWordBounds));
exports.LayoutEndWordBound = LayoutEndWordBound;
var LayoutStartWordBound = (function (_super) {
    tslib_1.__extends(LayoutStartWordBound, _super);
    function LayoutStartWordBound() {
        return _super.call(this, new layout_word_bounds_group_separator_1.LayoutWordBoundsPrevGroupSeparator()) || this;
    }
    LayoutStartWordBound.prototype.getFinalPosition = function (_byGroupDiffers) {
        return this.iterator.currSymbolStartPosition() + 1;
    };
    return LayoutStartWordBound;
}(LayoutWordBounds));
exports.LayoutStartWordBound = LayoutStartWordBound;
