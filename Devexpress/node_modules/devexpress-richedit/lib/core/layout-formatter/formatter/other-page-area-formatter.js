"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var errors_1 = require("@devexpress/utils/lib/errors");
var rectangle_1 = require("@devexpress/utils/lib/geometry/rectangle");
var list_1 = require("@devexpress/utils/lib/utils/list");
var number_1 = require("@devexpress/utils/lib/utils/map/number");
var layout_box_1 = require("../../layout/main-structures/layout-boxes/layout-box");
var enums_1 = require("../../model/floating-objects/enums");
var log_1 = require("../../rich-utils/debug/logger/base-logger/log");
var log_obj_to_str_1 = require("../../rich-utils/debug/logger/base-logger/log-obj-to-str");
var log_source_1 = require("../../rich-utils/debug/logger/base-logger/log-source");
var base_formatter_1 = require("./base-formatter");
var OtherPageAreaFormatter = (function () {
    function OtherPageAreaFormatter(manager) {
        this.manager = manager;
    }
    OtherPageAreaFormatter.prototype.formatOtherPageArea = function (page, subDocumentInfo, setBounds, getHeaderOrFooterPageAreaBounds, getHeaderOrFooterColumnBounds) {
        if (!subDocumentInfo) {
            setBounds(0);
            return;
        }
        log_1.Log.print(log_source_1.LogSource.LayoutFormatter, "formatHeaderOrFooterPageArea", function () { return "headerSubDocumentInfo: " + log_obj_to_str_1.LogObjToStr.subDocumentInfoBase(subDocumentInfo); });
        var oldActiveFormatter = this.manager.activeFormatter;
        setBounds(-1);
        this.shiftFooterObjectByVertical(page.otherPageAreas, subDocumentInfo, page.anchoredObjectHolder, function (obj, pa) {
            if (pa)
                pa.y += obj.yShift;
            obj.y += obj.yShift;
            obj.yShift = 0;
        });
        var formatter = new base_formatter_1.BaseFormatter(this.manager, subDocumentInfo.subDocumentId);
        formatter.initDocumentStart();
        formatter.formatPageArea(getHeaderOrFooterPageAreaBounds(), [getHeaderOrFooterColumnBounds()], page);
        var pageArea = formatter.layoutPosition.pageArea;
        if (pageArea) {
            setBounds(list_1.ListUtils.last(pageArea.columns[0].rows).bottom);
            var column = pageArea.columns[0];
            var diff_1 = pageArea.y + column.y;
            pageArea.setGeomerty(getHeaderOrFooterPageAreaBounds());
            diff_1 -= pageArea.y + column.y;
            column.setGeomerty(getHeaderOrFooterColumnBounds());
            OtherPageAreaFormatter.reduceRowHeight(column);
            this.shiftFooterObjectByVertical(page.otherPageAreas, subDocumentInfo, page.anchoredObjectHolder, function (obj, pa) {
                if (pa)
                    pa.y -= diff_1;
                obj.y -= diff_1;
                obj.yShift = diff_1;
            });
        }
        else
            setBounds(0);
        this.manager.activeFormatter = oldActiveFormatter;
    };
    OtherPageAreaFormatter.prototype.shiftFooterObjectByVertical = function (otherPageAreas, subDocumentInfo, pageAnchoredObjectHolder, action) {
        if (subDocumentInfo.isFooter) {
            number_1.NumberMapUtils.forEach(pageAnchoredObjectHolder.objects, function (obj) {
                if (obj.belongsToSubDocId == subDocumentInfo.subDocumentId &&
                    (obj.anchorInfo.isUsedVerticalAbsolutePosition() || obj.anchorInfo.isUsedVerticalRelativePosition()) &&
                    (obj.anchorInfo.verticalPositionType == enums_1.AnchorObjectVerticalPositionType.Paragraph ||
                        obj.anchorInfo.verticalPositionType == enums_1.AnchorObjectVerticalPositionType.Line))
                    action(obj, obj.getType() == layout_box_1.LayoutBoxType.AnchorTextBox ? otherPageAreas[obj.internalSubDocId] : null);
            });
        }
    };
    OtherPageAreaFormatter.prototype.setTextBoxContent = function (page, textBox) {
        var subDocInfo = this.manager.model.subDocuments[textBox.internalSubDocId].info;
        if (!subDocInfo.isTextBox)
            throw new Error(errors_1.Errors.InternalException);
        var textBoxSubDocInfo = subDocInfo;
        var margins = textBox.textBoxProperties.getContentMargins();
        var contentBounds = textBox.getContentBounds();
        var pageAreaBounds = new rectangle_1.Rectangle(0, 0, contentBounds.width, contentBounds.height);
        var columnBounds = pageAreaBounds.clone().applyOffsetsInside(margins);
        this.formatOtherPageArea(page, textBoxSubDocInfo, function (_val) { }, function () { return pageAreaBounds; }, function () { return columnBounds; });
        if (textBox.textBoxProperties.resizeShapeToFitText) {
            var pageArea = page.otherPageAreas[textBox.internalSubDocId];
            var column = pageArea.columns[0];
            var bottomPos = column.getLastRow().bottom;
            var diff = column.height - bottomPos;
            if (diff > 0) {
                column.height -= diff;
                pageArea.height -= diff;
                textBox.height -= diff;
            }
        }
    };
    OtherPageAreaFormatter.prototype.formatHeaderPageArea = function (page, headerSubDocumentInfo) {
        var boundsCalculator = this.manager.boundsCalculator;
        this.formatOtherPageArea(page, headerSubDocumentInfo, function (val) { return boundsCalculator.setHeaderBounds(val); }, function () { return boundsCalculator.headerPageAreaBounds; }, function () { return boundsCalculator.headerColumnBounds; });
    };
    OtherPageAreaFormatter.prototype.formatFooterPageArea = function (page, footerSubDocumentInfo) {
        var boundsCalculator = this.manager.boundsCalculator;
        this.formatOtherPageArea(page, footerSubDocumentInfo, function (val) { return boundsCalculator.setFooterBounds(val); }, function () { return boundsCalculator.footerPageAreaBounds; }, function () { return boundsCalculator.footerColumnBounds; });
    };
    OtherPageAreaFormatter.reduceRowHeight = function (column) {
        var colHeight = column.height;
        for (var _i = 0, _a = column.rows; _i < _a.length; _i++) {
            var row = _a[_i];
            if (row.y >= colHeight && !row.tableCellInfo) {
                row.y = colHeight;
                row.height = 0;
            }
        }
    };
    return OtherPageAreaFormatter;
}());
exports.OtherPageAreaFormatter = OtherPageAreaFormatter;
