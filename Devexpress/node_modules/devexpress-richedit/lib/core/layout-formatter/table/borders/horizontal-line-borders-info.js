"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HorizontalLineBordersInfo = (function () {
    function HorizontalLineBordersInfo(isOffsetFromTop) {
        this.borders = [];
        this.maxWidth = 0;
        this.isOffsetFromTop = isOffsetFromTop;
    }
    HorizontalLineBordersInfo.prototype.updateWidth = function (width) {
        if (width > this.maxWidth)
            this.maxWidth = width;
    };
    HorizontalLineBordersInfo.prototype.clone = function () {
        var result = new HorizontalLineBordersInfo(this.isOffsetFromTop);
        result.copyFrom(this);
        return result;
    };
    HorizontalLineBordersInfo.prototype.copyFrom = function (obj) {
        this.isOffsetFromTop = obj.isOffsetFromTop;
        this.yPosition = obj.yPosition;
        this.maxWidth = obj.maxWidth;
        this.borders = [];
        for (var _i = 0, _a = this.borders; _i < _a.length; _i++) {
            var brd = _a[_i];
            this.borders.push(brd.clone());
        }
    };
    return HorizontalLineBordersInfo;
}());
exports.HorizontalLineBordersInfo = HorizontalLineBordersInfo;
