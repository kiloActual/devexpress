import { Offset } from '@devexpress/utils/lib/geometry/point';
import { LayoutTableCellInfo } from '../../../layout/table/layout-table-cell-info';
import { TablePositionIndexes } from '../../../model/tables/main-structures/table';
import { TableCell } from '../../../model/tables/main-structures/table-cell';
import { Formatter } from '../formatter';
import { RowInfo } from './row-info';
import { TableInfo } from './table-info';
export declare class CellInfo {
    private _xInterval;
    private _xContentInterval;
    private _heightBeforeContent;
    private _heightAfterContent;
    private _isStartOnThisColumn;
    private _currLayoutTableCellInfo;
    private _contentModelPosition;
    private _savedContentModelPosition;
    private _innerFormatter;
    private _minBottomPosition;
    private _marginLeft;
    private _marginRight;
    actualCellInfo: CellInfo;
    cellIndex: number;
    rowInfo: RowInfo;
    getContentModelPosition(maxNestedLevel: number): number;
    getCurrLayoutRowOffset(considerInnerFormatter: boolean): Offset;
    constructor(cellIndex: number, rowInfo: RowInfo);
    private getActuallCellInfo;
    cellFullyFormatted(): void;
    cellPartiallyFormatted(endPos: number): void;
    undoContentModelPosition(): void;
    storeContentModelPosition(): void;
    private init;
    initLayoutInfo(): void;
    clearLayoutInfo(): void;
    private readonly xContentInterval: any;
    private readonly xInterval: any;
    readonly currLayoutRowContentWidth: number;
    readonly nestedTableMaxWidth: number;
    readonly isSomeLayoutRowsPlaced: boolean;
    readonly heightBeforeContent: number;
    readonly heightAfterContent: number;
    readonly tableInfo: TableInfo;
    readonly cell: TableCell;
    readonly isContendFullyPlaced: boolean;
    readonly currLayoutTableCellInfo: LayoutTableCellInfo;
    readonly contentModelPosition: number;
    readonly actualTableIndexes: TablePositionIndexes;
    minBottomPosition: number;
    innerFormatter: Formatter;
    isStartOnThisColumn: boolean;
    readonly marginLeft: number;
    readonly marginRight: number;
}
//# sourceMappingURL=cell-info.d.ts.map
