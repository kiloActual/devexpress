"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var number_1 = require("@devexpress/utils/lib/utils/map/number");
var layout_box_1 = require("../../layout/main-structures/layout-boxes/layout-box");
var comparers_1 = require("../../model/manipulators/floating-objects/comparers");
var PageAnchoredObjectHolder = (function () {
    function PageAnchoredObjectHolder() {
        this.objects = {};
    }
    PageAnchoredObjectHolder.prototype.getObjectByModelPosition = function (layout, position, belongsToSubDocId) {
        return number_1.NumberMapUtils.elementBy(this.objects, function (obj, id) {
            return layout.anchorObjectsPositionInfo.getPosition(id) == position && obj.belongsToSubDocId === belongsToSubDocId;
        });
    };
    PageAnchoredObjectHolder.prototype.onColumnEnd = function (activeFormatter) {
        if (!activeFormatter.subDocument.isMain())
            return;
        var belongsToSubDocId = activeFormatter.subDocument.id;
        var layout = activeFormatter.rowFormatter.manager.layout;
        var position = activeFormatter.rowFormatter.getPosition();
        var keysToDelete = [];
        number_1.NumberMapUtils.forEach(this.objects, function (obj, id) {
            if (obj.getType() == layout_box_1.LayoutBoxType.AnchorPicture && layout.anchorObjectsPositionInfo.getPosition(id) >= position &&
                obj.belongsToSubDocId === belongsToSubDocId) {
                layout.anchorObjectsPositionInfo.delete(id);
                keysToDelete.push(id);
                activeFormatter.layoutRowBoundsCalculator.removeAnchorObjectId(id);
            }
        });
        for (var _i = 0, keysToDelete_1 = keysToDelete; _i < keysToDelete_1.length; _i++) {
            var id = keysToDelete_1[_i];
            delete this.objects[id];
        }
    };
    PageAnchoredObjectHolder.prototype.getObjectsForRenderer = function (anchorObjectsPositionInfo, objects) {
        if (objects === void 0) { objects = this.objects; }
        return number_1.NumberMapUtils.toList(objects).sort(comparers_1.getLayoutAnchoredObjectBoxComparer(anchorObjectsPositionInfo));
    };
    PageAnchoredObjectHolder.prototype.getObjById = function (id) {
        return this.objects[id];
    };
    PageAnchoredObjectHolder.prototype.getTextBoxByInternalSubDocId = function (id) {
        return number_1.NumberMapUtils.elementBy(this.objects, function (obj) { return obj.getType() == layout_box_1.LayoutBoxType.AnchorTextBox &&
            obj.internalSubDocId == id; });
    };
    PageAnchoredObjectHolder.prototype.isObjectExist = function (obj) {
        return !!this.objects[obj.objectId];
    };
    PageAnchoredObjectHolder.prototype.addObject = function (manager, obj) {
        this.objects[obj.objectId] = obj;
        manager.anchoredObjectsManager.anchorObjectHorizontalPositionCalculator.calculate(obj);
        manager.anchoredObjectsManager.anchorObjectVerticalPositionCalculator.calculate(obj);
        this.correctPositionDueToOtherBoxes(obj);
    };
    PageAnchoredObjectHolder.prototype.correctPositionDueToOtherBoxes = function (_obj) {
    };
    PageAnchoredObjectHolder.prototype.shallowCopy = function () {
        var obj = new PageAnchoredObjectHolder();
        obj.objects = number_1.NumberMapUtils.shallowCopy(this.objects);
        return obj;
    };
    return PageAnchoredObjectHolder;
}());
exports.PageAnchoredObjectHolder = PageAnchoredObjectHolder;
