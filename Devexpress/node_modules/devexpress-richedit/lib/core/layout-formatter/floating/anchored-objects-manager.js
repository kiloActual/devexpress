"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var min_max_1 = require("../../../base-utils/min-max");
var min_max_2 = require("@devexpress/utils/lib/class/min-max");
var unit_converter_1 = require("@devexpress/utils/lib/class/unit-converter");
var size_1 = require("@devexpress/utils/lib/geometry/size");
var horizontal_1 = require("./position-calculators/horizontal");
var vertical_1 = require("./position-calculators/vertical");
var AnchoredObjectsManager = (function () {
    function AnchoredObjectsManager(manager) {
        this.manager = manager;
        this.anchorObjectHorizontalPositionCalculator = new horizontal_1.AnchorObjectHorizontalPositionCalculator(this.manager);
        this.anchorObjectVerticalPositionCalculator = new vertical_1.AnchorObjectVerticalPositionCalculator(this.manager);
        this.reset();
    }
    AnchoredObjectsManager.prototype.reset = function () {
        this.textBoxContextSizeCalculators = {};
    };
    return AnchoredObjectsManager;
}());
exports.AnchoredObjectsManager = AnchoredObjectsManager;
var AnchoredTextBoxContextSizeCalculator = (function () {
    function AnchoredTextBoxContextSizeCalculator(wrap, size) {
        this.wrap = wrap;
        this.size = size;
        this.isInited = false;
    }
    AnchoredTextBoxContextSizeCalculator.prototype.calculateSize = function (boundsCalculator) {
        if (this.isInited)
            return;
        this.isInited = true;
        this.layoutSize = new size_1.Size(this.size.useAbsoluteWidth() ?
            unit_converter_1.UnitConverter.twipsToPixelsF(this.size.absoluteSize.width) :
            this.size.getActualRelativeWidth(boundsCalculator), this.size.useAbsoluteHeight() ?
            unit_converter_1.UnitConverter.twipsToPixelsF(this.size.absoluteSize.height) :
            this.size.getActualRelativeHeight(boundsCalculator));
        if (this.wrap.info.tablePosition)
            min_max_1.updateMinMaxBounds(this.paragraphMinMax, new min_max_2.MinMaxNumber(this.layoutSize.width, this.layoutSize.width));
    };
    return AnchoredTextBoxContextSizeCalculator;
}());
exports.AnchoredTextBoxContextSizeCalculator = AnchoredTextBoxContextSizeCalculator;
