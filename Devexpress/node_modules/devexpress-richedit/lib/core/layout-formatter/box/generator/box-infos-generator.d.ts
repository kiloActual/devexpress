import { ColorProvider } from '../../../model/color/color-provider';
import { FormatterManager } from '../../managers/formatter-manager';
import { BoxWrapsHolder } from '../box-wraps-holder';
export declare class BoxGenerator {
    private static MAX_BOX_LENGTH;
    private static MapFieldCodeToLayoutDependentBoxType;
    private static modelCharToLayoutBoxConverter;
    private boxWrapsHolder;
    private manager;
    private modelIterator;
    private paragraphIterator;
    private sectionIterator;
    private tableIterator;
    private fieldIterator;
    private newWrappers;
    private currWrapInfo;
    private currBoxInfoType;
    private offsetStartWordAtStartRun;
    positionFromStartGenerate: number;
    private lastModelPosition;
    waitForMoreChunks: boolean;
    constructor(manager: FormatterManager, boxesHolder: BoxWrapsHolder);
    private isNotEmptyParagraphOrSectionRunBeforeTable;
    private addNewBoxInfo;
    generate(): boolean;
    private updateBracketsInfo;
    private collectObjectBrackets;
    private updatePosSecondaryIterators;
    private init;
    private isLastParagraphBoxInSubDocumentVisible;
    private isTableCellConsiderAtLeastOneBox;
    private static isFieldHideElement;
    private addToBoxFieldInfo;
    private getAbsolutePosition;
    private createNewBoxes;
    private parseByChar;
    private parseByRunType;
    private makeBreakBox;
    private makeDashBox;
    private makeParagraphAndSectionBox;
    private makeInlinePictureBox;
    private makeAnchoredPictureRun;
    private makeAnchoredTextBoxRun;
    private makeFieldCodeStartRun;
    private makeFieldCodeEndRun;
    private makeFieldResultEndRun;
    private makeLayoutDependentRun;
    private makeDefault;
    private currWordToBox;
    private getNextRun;
    private readonly MAX_NUM_NEW_BOXES: any;
    readonly colorProvider: ColorProvider;
    private readonly subDocument: any;
    private readonly chunks: any;
    private readonly run: any;
    private readonly chunk: any;
}
//# sourceMappingURL=box-infos-generator.d.ts.map
