"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var search_1 = require("@devexpress/utils/lib/utils/search");
var layout_page_1 = require("../../layout/main-structures/layout-page");
var header_footer_1 = require("../../model/section/header-footer");
var section_1 = require("../../model/section/section");
var HeaderFooterInvalidatorHelper = (function () {
    function HeaderFooterInvalidatorHelper(model, layout, headerFooterType) {
        this.model = model;
        this.layout = layout;
        this.headerFooterType = headerFooterType;
    }
    HeaderFooterInvalidatorHelper.prototype.isNoPages = function () {
        this.startPageIndex = 0;
        this.endPageIndex = 0;
        return this.layout.pages.length == 0;
    };
    HeaderFooterInvalidatorHelper.prototype.initByPageIndex = function (initPageIndex) {
        if (this.isNoPages())
            return;
        this.initPageIndex = Math.min(initPageIndex, this.layout.pages.length - 1);
        this.initSectionIndex = section_1.Section.getPageSectionIndex(this.layout.pages[this.initPageIndex], this.model.sections);
        this.calculatePageIndexes();
    };
    HeaderFooterInvalidatorHelper.prototype.initBySectionIndex = function (sectionIndex) {
        if (this.isNoPages())
            return;
        this.initSectionIndex = sectionIndex;
        var sectionStartPosition = this.model.sections[this.initSectionIndex].startLogPosition.value;
        this.initPageIndex = search_1.SearchUtils.normedInterpolationIndexOf(this.layout.pages, function (p) { return p.getPosition(); }, sectionStartPosition);
        this.calculatePageIndexes();
    };
    HeaderFooterInvalidatorHelper.prototype.calculatePageIndexes = function () {
        this.calcStartPageIndex();
        var moveFunc = function (ind) { return ++ind; };
        this.endPageIndex = this.getPageIndex(this.getSectionIndex(moveFunc) - this.initSectionIndex + 1, moveFunc);
        if (this.endPageIndex <= this.startPageIndex)
            this.endPageIndex = this.startPageIndex + 1;
    };
    HeaderFooterInvalidatorHelper.prototype.calcStartPageIndex = function () {
        var moveFunc = function (ind) { return --ind; };
        var startSectionIndex = this.getSectionIndex(moveFunc);
        this.startPageIndex = this.getPageIndex(this.initSectionIndex - startSectionIndex + 1, moveFunc);
    };
    HeaderFooterInvalidatorHelper.prototype.getSectionIndex = function (getNextSectionIndex) {
        var sections = this.model.sections;
        var sectionIndex = this.initSectionIndex;
        for (var section = void 0; (section = sections[sectionIndex]) && header_footer_1.SectionHeadersFooters.isLinkedToPrevious(section, this.headerFooterType); sectionIndex = getNextSectionIndex(sectionIndex))
            ;
        return Math.max(0, sectionIndex);
    };
    HeaderFooterInvalidatorHelper.prototype.getPageIndex = function (skipSections, getNextPageIndex) {
        var pages = this.layout.pages;
        var pageIndex = this.initPageIndex;
        for (var page = void 0; page = pages[pageIndex]; pageIndex = getNextPageIndex(pageIndex)) {
            if (page.flags.get(layout_page_1.LayoutPageFlags.IsFirstPageOfSection)) {
                if (skipSections > 0)
                    skipSections--;
                else
                    break;
            }
        }
        return Math.max(0, pageIndex);
    };
    return HeaderFooterInvalidatorHelper;
}());
exports.HeaderFooterInvalidatorHelper = HeaderFooterInvalidatorHelper;
