"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var log_1 = require("../../rich-utils/debug/logger/base-logger/log");
var log_obj_to_str_1 = require("../../rich-utils/debug/logger/base-logger/log-obj-to-str");
var log_source_1 = require("../../rich-utils/debug/logger/base-logger/log-source");
var log_obj_to_str_layout_1 = require("../../rich-utils/debug/logger/layout-logger/log-obj-to-str-layout");
var restart_preparer_1 = require("../formatter/utils/restart-preparer");
var RestartFromPositionSaver_Base = (function () {
    function RestartFromPositionSaver_Base(manager) {
        this.manager = manager;
    }
    Object.defineProperty(RestartFromPositionSaver_Base.prototype, "restartPreparer", {
        get: function () {
            return new restart_preparer_1.RestartPreparer(this.manager);
        },
        enumerable: true,
        configurable: true
    });
    RestartFromPositionSaver_Base.prototype.restartOtherSubDocument = function (subDocument, pageIndex) {
        return new RestartFromPositionSaver_OherSubDocument(this.manager, subDocument, pageIndex);
    };
    RestartFromPositionSaver_Base.prototype.restartMainSubDocumentFromPage = function (pageIndex) {
        return new RestartFromPositionSaver_MainSubDocumentFromPage(this.manager, pageIndex);
    };
    RestartFromPositionSaver_Base.prototype.restartMainSubDocumentFromRow = function (lp, modelPosition) {
        return RestartFromPositionSaver_Base.isNeedRestartFromPage(lp) ?
            new RestartFromPositionSaver_MainSubDocumentFromPage(this.manager, lp.pageIndex) :
            new RestartFromPositionSaver_MainSubDocumentFromRow(this.manager, lp, modelPosition);
    };
    RestartFromPositionSaver_Base.prototype.restart = function () {
        log_1.Log.print(log_source_1.LogSource.PositionSaver, "restart(from Base)", "");
    };
    RestartFromPositionSaver_Base.isNeedRestartFromPage = function (lp) {
        return lp.pageAreaIndex == 0 && lp.columnIndex == 0 && lp.rowIndex == 0;
    };
    return RestartFromPositionSaver_Base;
}());
exports.RestartFromPositionSaver_Base = RestartFromPositionSaver_Base;
var RestartFromPositionSaver_OherSubDocument = (function (_super) {
    tslib_1.__extends(RestartFromPositionSaver_OherSubDocument, _super);
    function RestartFromPositionSaver_OherSubDocument(manager, subDocument, pageIndex) {
        var _this = _super.call(this, manager) || this;
        _this.subDocument = subDocument;
        _this.pageIndex = pageIndex;
        return _this;
    }
    RestartFromPositionSaver_OherSubDocument.prototype.restartOtherSubDocument = function (_subDocument, pageIndex) {
        return this.getNextState(pageIndex);
    };
    RestartFromPositionSaver_OherSubDocument.prototype.restartMainSubDocumentFromPage = function (pageIndex) {
        return this.getNextState(pageIndex);
    };
    RestartFromPositionSaver_OherSubDocument.prototype.restartMainSubDocumentFromRow = function (layoutPosition, _modelPosition) {
        return this.getNextState(layoutPosition.pageIndex);
    };
    RestartFromPositionSaver_OherSubDocument.prototype.restart = function () {
        log_1.Log.print(log_source_1.LogSource.PositionSaver, "restart(from OherSubDocument)", "pageIndex: " + this.pageIndex + ", subDocInfo:" + log_obj_to_str_1.LogObjToStr.subDocumentInfoBase(this.subDocument.info));
        this.restartPreparer.restartHeaderFooterInternal(this.subDocument, this.pageIndex);
    };
    RestartFromPositionSaver_OherSubDocument.prototype.getNextState = function (pageIndex) {
        return new RestartFromPositionSaver_MainSubDocumentFromPage(this.manager, Math.min(pageIndex, this.pageIndex));
    };
    return RestartFromPositionSaver_OherSubDocument;
}(RestartFromPositionSaver_Base));
exports.RestartFromPositionSaver_OherSubDocument = RestartFromPositionSaver_OherSubDocument;
var RestartFromPositionSaver_MainSubDocumentFromPage = (function (_super) {
    tslib_1.__extends(RestartFromPositionSaver_MainSubDocumentFromPage, _super);
    function RestartFromPositionSaver_MainSubDocumentFromPage(manager, pageIndex) {
        var _this = _super.call(this, manager) || this;
        _this.pageIndex = pageIndex;
        return _this;
    }
    RestartFromPositionSaver_MainSubDocumentFromPage.prototype.restartOtherSubDocument = function (_subDocument, pageIndex) {
        return this.getNextState(pageIndex);
    };
    RestartFromPositionSaver_MainSubDocumentFromPage.prototype.restartMainSubDocumentFromPage = function (pageIndex) {
        return this.getNextState(pageIndex);
    };
    RestartFromPositionSaver_MainSubDocumentFromPage.prototype.restartMainSubDocumentFromRow = function (layoutPosition, modelPosition) {
        return layoutPosition.pageIndex < this.pageIndex ?
            new RestartFromPositionSaver_MainSubDocumentFromRow(this.manager, layoutPosition, modelPosition) :
            this.getNextState(layoutPosition.pageIndex);
    };
    RestartFromPositionSaver_MainSubDocumentFromPage.prototype.restart = function () {
        log_1.Log.print(log_source_1.LogSource.PositionSaver, "restart(from page)", "pageIndex: " + this.pageIndex);
        this.restartPreparer.restartFromPage(this.pageIndex, true, true);
    };
    RestartFromPositionSaver_MainSubDocumentFromPage.prototype.getNextState = function (pageIndex) {
        this.pageIndex = Math.min(pageIndex, this.pageIndex);
        return this;
    };
    return RestartFromPositionSaver_MainSubDocumentFromPage;
}(RestartFromPositionSaver_Base));
exports.RestartFromPositionSaver_MainSubDocumentFromPage = RestartFromPositionSaver_MainSubDocumentFromPage;
var RestartFromPositionSaver_AllLayout = (function (_super) {
    tslib_1.__extends(RestartFromPositionSaver_AllLayout, _super);
    function RestartFromPositionSaver_AllLayout() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RestartFromPositionSaver_AllLayout.prototype.restartOtherSubDocument = function (_subDocument, _pageIndex) {
        return this;
    };
    RestartFromPositionSaver_AllLayout.prototype.restartMainSubDocumentFromPage = function (_pageIndex) {
        return this;
    };
    RestartFromPositionSaver_AllLayout.prototype.restartMainSubDocumentFromRow = function (_layoutPosition, _modelPosition) {
        return this;
    };
    RestartFromPositionSaver_AllLayout.prototype.restart = function () {
        log_1.Log.print(log_source_1.LogSource.PositionSaver, "restart(all layout)", "");
        this.restartPreparer.restartFormatingAllLayout();
    };
    return RestartFromPositionSaver_AllLayout;
}(RestartFromPositionSaver_Base));
exports.RestartFromPositionSaver_AllLayout = RestartFromPositionSaver_AllLayout;
var RestartFromPositionSaver_MainSubDocumentFromRow = (function (_super) {
    tslib_1.__extends(RestartFromPositionSaver_MainSubDocumentFromRow, _super);
    function RestartFromPositionSaver_MainSubDocumentFromRow(manager, layoutPosition, modelPosition) {
        var _this = _super.call(this, manager) || this;
        _this.layoutPosition = layoutPosition;
        _this.modelPosition = modelPosition;
        return _this;
    }
    RestartFromPositionSaver_MainSubDocumentFromRow.prototype.restartOtherSubDocument = function (_subDocument, pageIndex) {
        return this.getNextState(pageIndex);
    };
    RestartFromPositionSaver_MainSubDocumentFromRow.prototype.restartMainSubDocumentFromRow = function (layoutPosition, modelPosition) {
        if (layoutPosition.pageIndex <= this.layoutPosition.pageIndex && RestartFromPositionSaver_Base.isNeedRestartFromPage(layoutPosition))
            return new RestartFromPositionSaver_MainSubDocumentFromPage(this.manager, layoutPosition.pageIndex);
        if (modelPosition <= this.modelPosition) {
            this.modelPosition = modelPosition;
            this.layoutPosition = layoutPosition;
        }
        return this;
    };
    RestartFromPositionSaver_MainSubDocumentFromRow.prototype.restartMainSubDocumentFromPage = function (pageIndex) {
        return this.getNextState(pageIndex);
    };
    RestartFromPositionSaver_MainSubDocumentFromRow.prototype.restart = function () {
        log_1.Log.print(log_source_1.LogSource.PositionSaver, "restart(from row)", "modelPosition: " + this.modelPosition + ", LP:" + log_obj_to_str_layout_1.LogObjToStrLayout.layoutPositionShort(this.layoutPosition));
        this.restartPreparer.restartFromRow(this.layoutPosition, this.modelPosition, false);
    };
    RestartFromPositionSaver_MainSubDocumentFromRow.prototype.getNextState = function (pageIndex) {
        if (pageIndex <= this.layoutPosition.pageIndex)
            return new RestartFromPositionSaver_MainSubDocumentFromPage(this.manager, pageIndex);
        return this;
    };
    return RestartFromPositionSaver_MainSubDocumentFromRow;
}(RestartFromPositionSaver_Base));
