"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var log_1 = require("../../../rich-utils/debug/logger/base-logger/log");
var log_list_helper_1 = require("../../../rich-utils/debug/logger/base-logger/log-list-helper");
var log_source_1 = require("../../../rich-utils/debug/logger/base-logger/log-source");
var log_obj_to_str_layout_1 = require("../../../rich-utils/debug/logger/layout-logger/log-obj-to-str-layout");
var changes_merger_1 = require("./changes-merger");
var ChangesManager = (function () {
    function ChangesManager() {
        this.reset();
    }
    ChangesManager.prototype.reset = function () {
        this.pageChanges = [];
    };
    ChangesManager.prototype.addPageChange = function (pageChange) {
        if (pageChange)
            this.pageChanges.push(pageChange);
    };
    ChangesManager.prototype.getPageChanges = function () {
        return this.pageChanges;
    };
    ChangesManager.prototype.getMergedPageChanges = function () {
        if (!this.pageChanges.length)
            return [];
        var mergedPageChanges = new changes_merger_1.LayoutPageChangesMerger().merge(this.pageChanges);
        log_1.Log.print(log_source_1.LogSource.LayoutFormatter, "mergedPageChanges - Changes\n", log_list_helper_1.LogListHelper.level_1(function (change) { return log_obj_to_str_layout_1.LogObjToStrLayout.pageChange(change, ""); }, mergedPageChanges, "", "\n"));
        return mergedPageChanges;
    };
    return ChangesManager;
}());
exports.ChangesManager = ChangesManager;
