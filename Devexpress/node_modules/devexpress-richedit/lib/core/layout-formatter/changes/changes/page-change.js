"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var list_1 = require("@devexpress/utils/lib/utils/list");
var layout_change_base_1 = require("./layout-change-base");
var PageChange = (function (_super) {
    tslib_1.__extends(PageChange, _super);
    function PageChange(index, changeType, pageAreaChanges, otherPageAreaChanges) {
        if (changeType === void 0) { changeType = layout_change_base_1.LayoutChangeType.Updated; }
        if (pageAreaChanges === void 0) { pageAreaChanges = []; }
        if (otherPageAreaChanges === void 0) { otherPageAreaChanges = []; }
        var _this = _super.call(this, index, changeType) || this;
        _this.mainPageAreaChanges = pageAreaChanges;
        _this.otherPageAreaChanges = otherPageAreaChanges;
        _this.anchoredPictureChanges = [];
        return _this;
    }
    PageChange.prototype.summarizeChanges = function (change) {
        list_1.ListUtils.addListOnTail(this.mainPageAreaChanges, change.mainPageAreaChanges);
        list_1.ListUtils.addListOnTail(this.otherPageAreaChanges, change.otherPageAreaChanges);
        list_1.ListUtils.addListOnTail(this.anchoredPictureChanges, change.anchoredPictureChanges);
    };
    PageChange.prototype.emptyOrInvalid = function () {
        if (this.changeType != layout_change_base_1.LayoutChangeType.Updated || this.otherPageAreaChanges.length > 0 || this.anchoredPictureChanges.length > 0)
            return false;
        for (var _i = 0, _a = this.mainPageAreaChanges; _i < _a.length; _i++) {
            var pageAreaChange = _a[_i];
            if (pageAreaChange.changeType != layout_change_base_1.LayoutChangeType.Updated)
                return false;
            for (var _b = 0, _c = pageAreaChange.columnChanges; _b < _c.length; _b++) {
                var columnChange = _c[_b];
                if (columnChange.changeType != layout_change_base_1.LayoutChangeType.Updated || columnChange.rowChanges.length != 0 ||
                    columnChange.paragraphFrameChanges.length != 0 || columnChange.tableChanges.length != 0)
                    return false;
            }
        }
        return true;
    };
    PageChange.prototype.reduceChanges = function () {
        this.mainPageAreaChanges = list_1.ListUtils.reducedMap(this.mainPageAreaChanges, function (change) { return change.reduceChanges(); });
        this.otherPageAreaChanges = list_1.ListUtils.reducedMap(this.otherPageAreaChanges, function (change) { return change.reduceChanges(); });
        this.anchoredPictureChanges = list_1.ListUtils.reducedMap(this.anchoredPictureChanges, function (change) { return change.reduceChanges(); });
        return this;
    };
    return PageChange;
}(layout_change_base_1.LayoutChangeBase));
exports.PageChange = PageChange;
