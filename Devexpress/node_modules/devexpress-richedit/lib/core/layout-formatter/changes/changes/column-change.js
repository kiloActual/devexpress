"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var list_1 = require("@devexpress/utils/lib/utils/list");
var layout_change_base_1 = require("./layout-change-base");
var ColumnChange = (function (_super) {
    tslib_1.__extends(ColumnChange, _super);
    function ColumnChange(index, changeType, rowChanges, tableChanges, paragraphFrameChanges) {
        if (changeType === void 0) { changeType = layout_change_base_1.LayoutChangeType.Updated; }
        if (rowChanges === void 0) { rowChanges = []; }
        if (tableChanges === void 0) { tableChanges = []; }
        if (paragraphFrameChanges === void 0) { paragraphFrameChanges = []; }
        var _this = _super.call(this, index, changeType) || this;
        _this.rowChanges = rowChanges;
        _this.tableChanges = tableChanges;
        _this.paragraphFrameChanges = paragraphFrameChanges;
        return _this;
    }
    ColumnChange.prototype.summarizeChanges = function (change) {
        this.rowChanges = this.rowChanges.concat(change.rowChanges);
        this.tableChanges = this.tableChanges.concat(change.tableChanges);
        this.paragraphFrameChanges = this.paragraphFrameChanges.concat(change.paragraphFrameChanges);
    };
    ColumnChange.prototype.reduceChanges = function () {
        this.rowChanges = list_1.ListUtils.reducedMap(this.rowChanges, function (change) { return change.reduceChanges(); });
        this.tableChanges = list_1.ListUtils.reducedMap(this.tableChanges, function (change) { return change.reduceChanges(); });
        this.paragraphFrameChanges = list_1.ListUtils.reducedMap(this.paragraphFrameChanges, function (change) { return change.reduceChanges(); });
        return this.changeType == layout_change_base_1.LayoutChangeType.Updated &&
            !this.rowChanges.length && !this.tableChanges.length && !this.paragraphFrameChanges.length ?
            null : this;
    };
    return ColumnChange;
}(layout_change_base_1.LayoutChangeBase));
exports.ColumnChange = ColumnChange;
