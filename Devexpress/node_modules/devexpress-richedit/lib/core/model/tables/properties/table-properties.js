"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var math_1 = require("@devexpress/utils/lib/utils/math");
var border_info_1 = require("../../borders/border-info");
var table_borders_1 = require("../../borders/table-borders");
var shading_info_1 = require("../../shadings/shading-info");
var table_base_structures_1 = require("../secondary-structures/table-base-structures");
var table_units_1 = require("../secondary-structures/table-units");
var table_descriptors_1 = require("./table-descriptors");
var TableProperties = (function () {
    function TableProperties() {
        this.mask = 0;
        this.cellMargins = table_base_structures_1.TableCellMargins.create(table_units_1.TableWidthUnit.createDefault(), table_units_1.TableWidthUnit.createDefault(), table_units_1.TableWidthUnit.createDefault(), table_units_1.TableWidthUnit.createDefault());
        this.cellSpacing = table_units_1.TableWidthUnit.createDefault();
        this.indent = table_units_1.TableWidthUnit.createDefault();
        this.borders = table_borders_1.TableBorders.create(new border_info_1.BorderInfo(), new border_info_1.BorderInfo(), new border_info_1.BorderInfo(), new border_info_1.BorderInfo(), new border_info_1.BorderInfo(), new border_info_1.BorderInfo());
        this.tableStyleColumnBandSize = 1;
        this.tableStyleRowBandSize = 1;
        this.avoidDoubleBorders = false;
        this.layoutType = table_base_structures_1.TableLayoutType.Autofit;
        this.shadingInfo = shading_info_1.ShadingInfo.noColor;
        this.tableRowAlignment = table_base_structures_1.TableRowAlignment.Left;
        this.isTableOverlap = true;
        this.bottomFromText = 0;
        this.leftFromText = 0;
        this.topFromText = 0;
        this.rightFromText = 0;
        this.tableHorizontalPosition = 0;
        this.tableVerticalPosition = 0;
        this.horizontalAlignMode = table_base_structures_1.HorizontalAlignMode.None;
        this.verticalAlignMode = table_base_structures_1.VerticalAlignMode.None;
        this.horizontalAnchorType = table_base_structures_1.HorizontalAnchorTypes.Page;
        this.verticalAnchorType = table_base_structures_1.VerticalAnchorTypes.Page;
        this.textWrapping = table_base_structures_1.TextWrapping.Never;
    }
    TableProperties.prototype.calculateHash = function () {
        return math_1.MathUtils.somePrimes[0] * this.mask ^
            math_1.MathUtils.somePrimes[1] * this.borders.getHashCode() ^
            math_1.MathUtils.somePrimes[2] * this.indent.getHashCode() ^
            math_1.MathUtils.somePrimes[3] * this.tableRowAlignment ^
            math_1.MathUtils.somePrimes[4] * this.shadingInfo.getHashCode();
    };
    TableProperties.prototype.getHashCode = function () {
        return this.hash === undefined ? this.hash = this.calculateHash() : this.hash;
    };
    TableProperties.prototype.equals = function (obj) {
        if (!obj)
            return false;
        return this.mask == obj.mask &&
            this.cellMargins.equals(obj.cellMargins) &&
            this.cellSpacing.equals(obj.cellSpacing) &&
            this.indent.equals(obj.indent) &&
            this.borders.equals(obj.borders) &&
            this.tableStyleColumnBandSize == obj.tableStyleColumnBandSize &&
            this.tableStyleRowBandSize == obj.tableStyleRowBandSize &&
            this.isTableOverlap == obj.isTableOverlap &&
            this.avoidDoubleBorders == obj.avoidDoubleBorders &&
            this.layoutType == obj.layoutType &&
            this.shadingInfo.equals(obj.shadingInfo) &&
            this.tableRowAlignment == obj.tableRowAlignment &&
            this.bottomFromText == obj.bottomFromText &&
            this.leftFromText == obj.leftFromText &&
            this.topFromText == obj.topFromText &&
            this.rightFromText == obj.rightFromText &&
            this.tableHorizontalPosition == obj.tableHorizontalPosition &&
            this.tableVerticalPosition == obj.tableVerticalPosition &&
            this.horizontalAlignMode == obj.horizontalAlignMode &&
            this.verticalAlignMode == obj.verticalAlignMode &&
            this.horizontalAnchorType == obj.horizontalAnchorType &&
            this.verticalAnchorType == obj.verticalAnchorType &&
            this.textWrapping == obj.textWrapping;
    };
    TableProperties.prototype.clone = function () {
        var result = new TableProperties();
        result.copyFrom(this);
        return result;
    };
    TableProperties.prototype.copyFrom = function (obj) {
        this.mask = obj.mask;
        this.cellMargins = obj.cellMargins.clone();
        this.cellSpacing = obj.cellSpacing.clone();
        this.indent = obj.indent.clone();
        this.borders = obj.borders.clone();
        this.tableStyleColumnBandSize = obj.tableStyleColumnBandSize;
        this.tableStyleRowBandSize = obj.tableStyleRowBandSize;
        this.isTableOverlap = obj.isTableOverlap;
        this.avoidDoubleBorders = obj.avoidDoubleBorders;
        this.layoutType = obj.layoutType;
        if (obj.shadingInfo)
            this.shadingInfo = obj.shadingInfo.clone();
        this.tableRowAlignment = obj.tableRowAlignment;
        this.bottomFromText = obj.bottomFromText;
        this.leftFromText = obj.leftFromText;
        this.topFromText = obj.topFromText;
        this.rightFromText = obj.rightFromText;
        this.tableHorizontalPosition = obj.tableHorizontalPosition;
        this.tableVerticalPosition = obj.tableVerticalPosition;
        this.horizontalAlignMode = obj.horizontalAlignMode;
        this.verticalAlignMode = obj.verticalAlignMode;
        this.horizontalAnchorType = obj.horizontalAnchorType;
        this.verticalAnchorType = obj.verticalAnchorType;
        this.textWrapping = obj.textWrapping;
    };
    TableProperties.prototype.setUseValue = function (mask, value) {
        if (value)
            this.mask |= mask;
        else
            this.mask &= ~mask;
    };
    TableProperties.prototype.getUseValue = function (mask) {
        return (this.mask & mask) != 0;
    };
    TableProperties.prototype.setValue = function (desc, value) {
        desc.setProp(this, value);
        this.setUseValue(desc.maskValue(), true);
    };
    return TableProperties;
}());
exports.TableProperties = TableProperties;
var TablePropertiesMask;
(function (TablePropertiesMask) {
    TablePropertiesMask[TablePropertiesMask["UseNone"] = 0] = "UseNone";
    TablePropertiesMask[TablePropertiesMask["UseLeftMargin"] = 1] = "UseLeftMargin";
    TablePropertiesMask[TablePropertiesMask["UseRightMargin"] = 2] = "UseRightMargin";
    TablePropertiesMask[TablePropertiesMask["UseTopMargin"] = 4] = "UseTopMargin";
    TablePropertiesMask[TablePropertiesMask["UseBottomMargin"] = 8] = "UseBottomMargin";
    TablePropertiesMask[TablePropertiesMask["UseCellSpacing"] = 16] = "UseCellSpacing";
    TablePropertiesMask[TablePropertiesMask["UseTableIndent"] = 32] = "UseTableIndent";
    TablePropertiesMask[TablePropertiesMask["UseTableLayout"] = 64] = "UseTableLayout";
    TablePropertiesMask[TablePropertiesMask["UseTableStyleColBandSize"] = 512] = "UseTableStyleColBandSize";
    TablePropertiesMask[TablePropertiesMask["UseTableStyleRowBandSize"] = 1024] = "UseTableStyleRowBandSize";
    TablePropertiesMask[TablePropertiesMask["UseIsTableOverlap"] = 2048] = "UseIsTableOverlap";
    TablePropertiesMask[TablePropertiesMask["UseFloatingPosition"] = 4096] = "UseFloatingPosition";
    TablePropertiesMask[TablePropertiesMask["UseLeftBorder"] = 8192] = "UseLeftBorder";
    TablePropertiesMask[TablePropertiesMask["UseRightBorder"] = 16384] = "UseRightBorder";
    TablePropertiesMask[TablePropertiesMask["UseTopBorder"] = 32768] = "UseTopBorder";
    TablePropertiesMask[TablePropertiesMask["UseBottomBorder"] = 65536] = "UseBottomBorder";
    TablePropertiesMask[TablePropertiesMask["UseInsideHorizontalBorder"] = 131072] = "UseInsideHorizontalBorder";
    TablePropertiesMask[TablePropertiesMask["UseInsideVerticalBorder"] = 262144] = "UseInsideVerticalBorder";
    TablePropertiesMask[TablePropertiesMask["UseShadingInfoIndex"] = 524288] = "UseShadingInfoIndex";
    TablePropertiesMask[TablePropertiesMask["UseTableAlignment"] = 1048576] = "UseTableAlignment";
    TablePropertiesMask[TablePropertiesMask["UseAvoidDoubleBorders"] = 2097152] = "UseAvoidDoubleBorders";
    TablePropertiesMask[TablePropertiesMask["UseRightToLeft"] = 4194304] = "UseRightToLeft";
    TablePropertiesMask[TablePropertiesMask["UseAll"] = 2147483647] = "UseAll";
})(TablePropertiesMask = exports.TablePropertiesMask || (exports.TablePropertiesMask = {}));
var TablePropertyDescriptor = (function () {
    function TablePropertyDescriptor() {
    }
    TablePropertyDescriptor.avoidDoubleBorders = new table_descriptors_1.TablePropertiesAvoidDoubleBordersDescriptor();
    TablePropertyDescriptor.topBorder = new table_descriptors_1.TablePropertiesTopBorderDescriptor();
    TablePropertyDescriptor.rightBorder = new table_descriptors_1.TablePropertiesRightBorderDescriptor();
    TablePropertyDescriptor.bottomBorder = new table_descriptors_1.TablePropertiesBottomBorderDescriptor();
    TablePropertyDescriptor.leftBorder = new table_descriptors_1.TablePropertiesLeftBorderDescriptor();
    TablePropertyDescriptor.insideHorizontalBorder = new table_descriptors_1.TablePropertiesInsideHorizontalBorderDescriptor();
    TablePropertyDescriptor.insideVerticalBorder = new table_descriptors_1.TablePropertiesInsideVerticalBorderDescriptor();
    TablePropertyDescriptor.topMargin = new table_descriptors_1.TablePropertiesTopMarginDescriptor();
    TablePropertyDescriptor.rightMargin = new table_descriptors_1.TablePropertiesRightMarginDescriptor();
    TablePropertyDescriptor.bottomMargin = new table_descriptors_1.TablePropertiesBottomMarginDescriptor();
    TablePropertyDescriptor.leftMargin = new table_descriptors_1.TablePropertiesLeftMarginDescriptor();
    TablePropertyDescriptor.cellSpacing = new table_descriptors_1.TablePropertiesCellSpacingDescriptor();
    TablePropertyDescriptor.indent = new table_descriptors_1.TablePropertiesIndentDescriptor();
    TablePropertyDescriptor.layoutType = new table_descriptors_1.TablePropertiesLayoutTypeDescriptor();
    TablePropertyDescriptor.shadingInfo = new table_descriptors_1.TablePropertiesShadingInfoDescriptor();
    TablePropertyDescriptor.rowAlignment = new table_descriptors_1.TablePropertiesRowAlignmentDescriptor();
    TablePropertyDescriptor.styleColumnBandSize = new table_descriptors_1.TablePropertiesStyleColumnBandSizeDescriptor();
    TablePropertyDescriptor.styleRowBandSize = new table_descriptors_1.TablePropertiesStyleRowBandSizeDescriptor();
    TablePropertyDescriptor.ALL_FIELDS = [
        TablePropertyDescriptor.avoidDoubleBorders,
        TablePropertyDescriptor.topBorder,
        TablePropertyDescriptor.rightBorder,
        TablePropertyDescriptor.bottomBorder,
        TablePropertyDescriptor.leftBorder,
        TablePropertyDescriptor.insideHorizontalBorder,
        TablePropertyDescriptor.insideVerticalBorder,
        TablePropertyDescriptor.topMargin,
        TablePropertyDescriptor.rightMargin,
        TablePropertyDescriptor.bottomMargin,
        TablePropertyDescriptor.leftMargin,
        TablePropertyDescriptor.cellSpacing,
        TablePropertyDescriptor.indent,
        TablePropertyDescriptor.layoutType,
        TablePropertyDescriptor.shadingInfo,
        TablePropertyDescriptor.rowAlignment,
        TablePropertyDescriptor.styleColumnBandSize,
        TablePropertyDescriptor.styleRowBandSize,
    ];
    return TablePropertyDescriptor;
}());
exports.TablePropertyDescriptor = TablePropertyDescriptor;
