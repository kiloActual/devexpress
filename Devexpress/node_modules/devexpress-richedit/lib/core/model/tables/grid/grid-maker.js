"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var table_base_structures_1 = require("../secondary-structures/table-base-structures");
var table_cell_grid_info_1 = require("./table-cell-grid-info");
var GridMaker = (function () {
    function GridMaker() {
    }
    GridMaker.fillGridInfo = function (table, tableCellGridInfos, tableCellInfos) {
        var rows = table.rows;
        for (var rowIndex = 0, row = void 0; row = rows[rowIndex]; rowIndex++) {
            var tableCellGridInfo = [];
            var tableCellInfo = [];
            tableCellGridInfos.push(tableCellGridInfo);
            tableCellInfos.push(tableCellInfo);
            var currColSpan = row.gridBefore;
            for (var spacingIndex = currColSpan; spacingIndex > 0; spacingIndex--)
                tableCellGridInfo.push(null);
            for (var cellIndex = 0, cell = void 0; cell = row.cells[cellIndex]; cellIndex++) {
                var currCellGridInfo = cell.verticalMerging != table_base_structures_1.TableCellMergingState.Continue ?
                    new table_cell_grid_info_1.CellGridInfo(rowIndex, currColSpan, [cellIndex]) :
                    tableCellGridInfos[rowIndex - 1][currColSpan].addCellIndex(cellIndex);
                tableCellInfo.push(currCellGridInfo);
                for (var spacingIndex = cell.columnSpan; spacingIndex > 0; spacingIndex--)
                    tableCellGridInfo.push(currCellGridInfo);
                currColSpan += cell.columnSpan;
            }
        }
    };
    return GridMaker;
}());
exports.GridMaker = GridMaker;
