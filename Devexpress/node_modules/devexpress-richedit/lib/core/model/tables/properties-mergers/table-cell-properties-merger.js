"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var table_cell_properties_1 = require("../properties/table-cell-properties");
var table_base_structures_1 = require("../secondary-structures/table-base-structures");
var table_properties_merger_1 = require("./table-properties-merger");
var table_properties_merger_base_1 = require("./table-properties-merger-base");
var TableCellPropertiesMerger = (function (_super) {
    tslib_1.__extends(TableCellPropertiesMerger, _super);
    function TableCellPropertiesMerger() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellPropertiesMerger.prototype.getContainerFromConditionalStyle = function (condStyle) {
        return condStyle.tableCellProperties;
    };
    TableCellPropertiesMerger.prototype.canUseValue = function (props) {
        return !!(props.mask & this.getPropertyMask());
    };
    TableCellPropertiesMerger.prototype.getCondTableStyleFormattingListForThisContainer = function () {
        return TableCellPropertiesMerger.conditionalTableStyleFormattingPriority;
    };
    TableCellPropertiesMerger.prototype.getNotMergedProperty = function () {
        return new table_properties_merger_base_1.TableMergerNotMergedPropertyResult(false, null);
    };
    TableCellPropertiesMerger.conditionalTableStyleFormattingPriority = [
        table_base_structures_1.ConditionalTableStyleFormatting.TopLeftCell,
        table_base_structures_1.ConditionalTableStyleFormatting.TopRightCell,
        table_base_structures_1.ConditionalTableStyleFormatting.BottomLeftCell,
        table_base_structures_1.ConditionalTableStyleFormatting.BottomRightCell,
        table_base_structures_1.ConditionalTableStyleFormatting.FirstRow,
        table_base_structures_1.ConditionalTableStyleFormatting.LastRow,
        table_base_structures_1.ConditionalTableStyleFormatting.FirstColumn,
        table_base_structures_1.ConditionalTableStyleFormatting.LastColumn,
        table_base_structures_1.ConditionalTableStyleFormatting.EvenColumnBanding,
        table_base_structures_1.ConditionalTableStyleFormatting.OddColumnBanding,
        table_base_structures_1.ConditionalTableStyleFormatting.EvenRowBanding,
        table_base_structures_1.ConditionalTableStyleFormatting.OddRowBanding,
        table_base_structures_1.ConditionalTableStyleFormatting.WholeTable,
    ];
    return TableCellPropertiesMerger;
}(table_properties_merger_base_1.TablePropertiesMergerBase));
exports.TableCellPropertiesMerger = TableCellPropertiesMerger;
var TableCellPropertiesMergerMarginBase = (function (_super) {
    tslib_1.__extends(TableCellPropertiesMergerMarginBase, _super);
    function TableCellPropertiesMergerMarginBase(table, model, tablePropertiesException) {
        var _this = _super.call(this) || this;
        _this.table = table;
        _this.model = model;
        _this.tablePropertiesException = tablePropertiesException;
        return _this;
    }
    TableCellPropertiesMergerMarginBase.prototype.actionBeforeDefaultValue = function () {
        this.result = this.getMarginMerger().getProperty(this.table.properties, this.table.style, table_base_structures_1.ConditionalTableStyleFormatting.WholeTable, this.model.defaultTableProperties);
        return true;
    };
    TableCellPropertiesMergerMarginBase.prototype.getNotMergedProperty = function () {
        return this.getMarginMerger().getTableNotMergedProperty(this.tablePropertiesException);
    };
    return TableCellPropertiesMergerMarginBase;
}(TableCellPropertiesMerger));
exports.TableCellPropertiesMergerMarginBase = TableCellPropertiesMergerMarginBase;
var TableCellPropertiesMergerMarginLeft = (function (_super) {
    tslib_1.__extends(TableCellPropertiesMergerMarginLeft, _super);
    function TableCellPropertiesMergerMarginLeft() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellPropertiesMergerMarginLeft.prototype.getPropertyMask = function () {
        return table_cell_properties_1.TableCellPropertiesMask.UseLeftMargin;
    };
    TableCellPropertiesMergerMarginLeft.prototype.getPropertyFromContainer = function (container) {
        return container.cellMargins.left;
    };
    TableCellPropertiesMergerMarginLeft.prototype.getMarginMerger = function () {
        return new table_properties_merger_1.TablePropertiesMergerMarginLeft();
    };
    return TableCellPropertiesMergerMarginLeft;
}(TableCellPropertiesMergerMarginBase));
exports.TableCellPropertiesMergerMarginLeft = TableCellPropertiesMergerMarginLeft;
var TableCellPropertiesMergerMarginRight = (function (_super) {
    tslib_1.__extends(TableCellPropertiesMergerMarginRight, _super);
    function TableCellPropertiesMergerMarginRight() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellPropertiesMergerMarginRight.prototype.getPropertyMask = function () {
        return table_cell_properties_1.TableCellPropertiesMask.UseRightMargin;
    };
    TableCellPropertiesMergerMarginRight.prototype.getPropertyFromContainer = function (container) {
        return container.cellMargins.right;
    };
    TableCellPropertiesMergerMarginRight.prototype.getMarginMerger = function () {
        return new table_properties_merger_1.TablePropertiesMergerMarginRight();
    };
    return TableCellPropertiesMergerMarginRight;
}(TableCellPropertiesMergerMarginBase));
exports.TableCellPropertiesMergerMarginRight = TableCellPropertiesMergerMarginRight;
var TableCellPropertiesMergerMarginTop = (function (_super) {
    tslib_1.__extends(TableCellPropertiesMergerMarginTop, _super);
    function TableCellPropertiesMergerMarginTop() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellPropertiesMergerMarginTop.prototype.getPropertyMask = function () {
        return table_cell_properties_1.TableCellPropertiesMask.UseTopMargin;
    };
    TableCellPropertiesMergerMarginTop.prototype.getPropertyFromContainer = function (container) {
        return container.cellMargins.top;
    };
    TableCellPropertiesMergerMarginTop.prototype.getMarginMerger = function () {
        return new table_properties_merger_1.TablePropertiesMergerMarginTop();
    };
    return TableCellPropertiesMergerMarginTop;
}(TableCellPropertiesMergerMarginBase));
exports.TableCellPropertiesMergerMarginTop = TableCellPropertiesMergerMarginTop;
var TableCellPropertiesMergerMarginBottom = (function (_super) {
    tslib_1.__extends(TableCellPropertiesMergerMarginBottom, _super);
    function TableCellPropertiesMergerMarginBottom() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellPropertiesMergerMarginBottom.prototype.getPropertyMask = function () {
        return table_cell_properties_1.TableCellPropertiesMask.UseBottomMargin;
    };
    TableCellPropertiesMergerMarginBottom.prototype.getPropertyFromContainer = function (container) {
        return container.cellMargins.bottom;
    };
    TableCellPropertiesMergerMarginBottom.prototype.getMarginMerger = function () {
        return new table_properties_merger_1.TablePropertiesMergerMarginBottom();
    };
    return TableCellPropertiesMergerMarginBottom;
}(TableCellPropertiesMergerMarginBase));
exports.TableCellPropertiesMergerMarginBottom = TableCellPropertiesMergerMarginBottom;
var TableCellPropertiesMergerBorderBase = (function (_super) {
    tslib_1.__extends(TableCellPropertiesMergerBorderBase, _super);
    function TableCellPropertiesMergerBorderBase(tablePropertiesException) {
        var _this = _super.call(this) || this;
        _this.tablePropertiesException = tablePropertiesException;
        return _this;
    }
    TableCellPropertiesMergerBorderBase.prototype.actionBeforeDefaultValue = function () {
        this.result = null;
        return true;
    };
    return TableCellPropertiesMergerBorderBase;
}(TableCellPropertiesMerger));
exports.TableCellPropertiesMergerBorderBase = TableCellPropertiesMergerBorderBase;
var TableCellPropertiesMergerBorderLeft = (function (_super) {
    tslib_1.__extends(TableCellPropertiesMergerBorderLeft, _super);
    function TableCellPropertiesMergerBorderLeft(tablePropertiesException, isOutsideBorder) {
        var _this = _super.call(this, tablePropertiesException) || this;
        _this.isOutsideBorder = isOutsideBorder;
        return _this;
    }
    TableCellPropertiesMergerBorderLeft.prototype.getPropertyFromContainer = function (container) {
        return container.borders.leftBorder;
    };
    TableCellPropertiesMergerBorderLeft.prototype.getPropertyMask = function () {
        return table_cell_properties_1.TableCellPropertiesMask.UseLeftBorder;
    };
    TableCellPropertiesMergerBorderLeft.prototype.getNotMergedProperty = function () {
        return new (this.isOutsideBorder ? table_properties_merger_1.TablePropertiesMergerBorderLeft : table_properties_merger_1.TablePropertiesMergerBorderVertical)()
            .getTableNotMergedProperty(this.tablePropertiesException);
    };
    return TableCellPropertiesMergerBorderLeft;
}(TableCellPropertiesMergerBorderBase));
exports.TableCellPropertiesMergerBorderLeft = TableCellPropertiesMergerBorderLeft;
var TableCellPropertiesMergerBorderRight = (function (_super) {
    tslib_1.__extends(TableCellPropertiesMergerBorderRight, _super);
    function TableCellPropertiesMergerBorderRight(tablePropertiesException, isOutsideBorder) {
        var _this = _super.call(this, tablePropertiesException) || this;
        _this.isOutsideBorder = isOutsideBorder;
        return _this;
    }
    TableCellPropertiesMergerBorderRight.prototype.getPropertyFromContainer = function (container) {
        return container.borders.rightBorder;
    };
    TableCellPropertiesMergerBorderRight.prototype.getPropertyMask = function () {
        return table_cell_properties_1.TableCellPropertiesMask.UseRightBorder;
    };
    TableCellPropertiesMergerBorderRight.prototype.getNotMergedProperty = function () {
        return new (this.isOutsideBorder ? table_properties_merger_1.TablePropertiesMergerBorderRight : table_properties_merger_1.TablePropertiesMergerBorderVertical)()
            .getTableNotMergedProperty(this.tablePropertiesException);
    };
    return TableCellPropertiesMergerBorderRight;
}(TableCellPropertiesMergerBorderBase));
exports.TableCellPropertiesMergerBorderRight = TableCellPropertiesMergerBorderRight;
var TableCellPropertiesMergerBorderTop = (function (_super) {
    tslib_1.__extends(TableCellPropertiesMergerBorderTop, _super);
    function TableCellPropertiesMergerBorderTop(tablePropertiesException, isOutsideBorder) {
        var _this = _super.call(this, tablePropertiesException) || this;
        _this.isOutsideBorder = isOutsideBorder;
        return _this;
    }
    TableCellPropertiesMergerBorderTop.prototype.getPropertyFromContainer = function (container) {
        return container.borders.topBorder;
    };
    TableCellPropertiesMergerBorderTop.prototype.getPropertyMask = function () {
        return table_cell_properties_1.TableCellPropertiesMask.UseTopBorder;
    };
    TableCellPropertiesMergerBorderTop.prototype.getNotMergedProperty = function () {
        return new (this.isOutsideBorder ? table_properties_merger_1.TablePropertiesMergerBorderTop : table_properties_merger_1.TablePropertiesMergerBorderHorizontal)()
            .getTableNotMergedProperty(this.tablePropertiesException);
    };
    return TableCellPropertiesMergerBorderTop;
}(TableCellPropertiesMergerBorderBase));
exports.TableCellPropertiesMergerBorderTop = TableCellPropertiesMergerBorderTop;
var TableCellPropertiesMergerBorderBottom = (function (_super) {
    tslib_1.__extends(TableCellPropertiesMergerBorderBottom, _super);
    function TableCellPropertiesMergerBorderBottom(tablePropertiesException, isOutsideBorder) {
        var _this = _super.call(this, tablePropertiesException) || this;
        _this.isOutsideBorder = isOutsideBorder;
        return _this;
    }
    TableCellPropertiesMergerBorderBottom.prototype.getPropertyFromContainer = function (container) {
        return container.borders.bottomBorder;
    };
    TableCellPropertiesMergerBorderBottom.prototype.getPropertyMask = function () {
        return table_cell_properties_1.TableCellPropertiesMask.UseBottomBorder;
    };
    TableCellPropertiesMergerBorderBottom.prototype.getNotMergedProperty = function () {
        return new (this.isOutsideBorder ? table_properties_merger_1.TablePropertiesMergerBorderBottom : table_properties_merger_1.TablePropertiesMergerBorderHorizontal)()
            .getTableNotMergedProperty(this.tablePropertiesException);
    };
    return TableCellPropertiesMergerBorderBottom;
}(TableCellPropertiesMergerBorderBase));
exports.TableCellPropertiesMergerBorderBottom = TableCellPropertiesMergerBorderBottom;
var TableCellPropertiesMergerBorderTopLeftDiagonal = (function (_super) {
    tslib_1.__extends(TableCellPropertiesMergerBorderTopLeftDiagonal, _super);
    function TableCellPropertiesMergerBorderTopLeftDiagonal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellPropertiesMergerBorderTopLeftDiagonal.prototype.getPropertyFromContainer = function (container) {
        return container.borders.topLeftDiagonalBorder;
    };
    TableCellPropertiesMergerBorderTopLeftDiagonal.prototype.getPropertyMask = function () {
        return table_cell_properties_1.TableCellPropertiesMask.UseTopLeftDiagonalBorder;
    };
    return TableCellPropertiesMergerBorderTopLeftDiagonal;
}(TableCellPropertiesMergerBorderBase));
exports.TableCellPropertiesMergerBorderTopLeftDiagonal = TableCellPropertiesMergerBorderTopLeftDiagonal;
var TableCellPropertiesMergerBorderTopRightDiagonal = (function (_super) {
    tslib_1.__extends(TableCellPropertiesMergerBorderTopRightDiagonal, _super);
    function TableCellPropertiesMergerBorderTopRightDiagonal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellPropertiesMergerBorderTopRightDiagonal.prototype.getPropertyFromContainer = function (container) {
        return container.borders.topRightDiagonalBorder;
    };
    TableCellPropertiesMergerBorderTopRightDiagonal.prototype.getPropertyMask = function () {
        return table_cell_properties_1.TableCellPropertiesMask.UseTopRightDiagonalBorder;
    };
    return TableCellPropertiesMergerBorderTopRightDiagonal;
}(TableCellPropertiesMergerBorderBase));
exports.TableCellPropertiesMergerBorderTopRightDiagonal = TableCellPropertiesMergerBorderTopRightDiagonal;
var TableCellPropertiesMergerNoWrap = (function (_super) {
    tslib_1.__extends(TableCellPropertiesMergerNoWrap, _super);
    function TableCellPropertiesMergerNoWrap() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellPropertiesMergerNoWrap.prototype.getPropertyFromContainer = function (container) {
        return container.noWrap;
    };
    TableCellPropertiesMergerNoWrap.prototype.getPropertyMask = function () {
        return table_cell_properties_1.TableCellPropertiesMask.UseNoWrap;
    };
    return TableCellPropertiesMergerNoWrap;
}(TableCellPropertiesMerger));
exports.TableCellPropertiesMergerNoWrap = TableCellPropertiesMergerNoWrap;
var TableCellPropertiesMergerShadingInfo = (function (_super) {
    tslib_1.__extends(TableCellPropertiesMergerShadingInfo, _super);
    function TableCellPropertiesMergerShadingInfo() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellPropertiesMergerShadingInfo.prototype.getPropertyFromContainer = function (container) {
        return container.shadingInfo;
    };
    TableCellPropertiesMergerShadingInfo.prototype.getPropertyMask = function () {
        return table_cell_properties_1.TableCellPropertiesMask.UseShadingInfoIndex;
    };
    return TableCellPropertiesMergerShadingInfo;
}(TableCellPropertiesMerger));
exports.TableCellPropertiesMergerShadingInfo = TableCellPropertiesMergerShadingInfo;
var TableCellVerticalAlignmentMerger = (function (_super) {
    tslib_1.__extends(TableCellVerticalAlignmentMerger, _super);
    function TableCellVerticalAlignmentMerger() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellVerticalAlignmentMerger.prototype.getPropertyFromContainer = function (container) {
        return container.verticalAlignment;
    };
    TableCellVerticalAlignmentMerger.prototype.getPropertyMask = function () {
        return table_cell_properties_1.TableCellPropertiesMask.UseVerticalAlignment;
    };
    return TableCellVerticalAlignmentMerger;
}(TableCellPropertiesMerger));
exports.TableCellVerticalAlignmentMerger = TableCellVerticalAlignmentMerger;
