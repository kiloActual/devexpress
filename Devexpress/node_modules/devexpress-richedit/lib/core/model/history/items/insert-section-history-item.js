"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var fixed_1 = require("@devexpress/utils/lib/intervals/fixed");
var rich_utils_1 = require("../../rich-utils");
var position_based_history_item_1 = require("../base/position-based-history-item");
var InsertSectionHistoryItem = (function (_super) {
    tslib_1.__extends(InsertSectionHistoryItem, _super);
    function InsertSectionHistoryItem(modelManipulator, subDocPos, charPropsBundle, parPropsBundle, sectionProperties, isInsertPropertiesToCurrentSection, isInsertPropertiesAndStyleIndexToCurrentParagraph) {
        var _this = _super.call(this, modelManipulator, subDocPos) || this;
        _this.charPropsBundle = charPropsBundle;
        _this.parPropsBundle = parPropsBundle;
        _this.sectionProperties = sectionProperties;
        _this.isInsertPropertiesToCurrentSection = isInsertPropertiesToCurrentSection;
        _this.isInsertPropertiesAndStyleIndexToCurrentParagraph = isInsertPropertiesAndStyleIndexToCurrentParagraph;
        return _this;
    }
    InsertSectionHistoryItem.prototype.redo = function () {
        this.modelManipulator.section.insertSection(this.subDocPos, this.charPropsBundle, this.sectionProperties, this.isInsertPropertiesToCurrentSection, this.parPropsBundle, this.isInsertPropertiesAndStyleIndexToCurrentParagraph);
    };
    InsertSectionHistoryItem.prototype.undo = function () {
        this.modelManipulator.range.removeIntervalWithoutHistory(this.boundSubDocument, new fixed_1.FixedInterval(this.subDocPos.position, rich_utils_1.RichUtils.specialCharacters.SectionMark.length), false);
    };
    return InsertSectionHistoryItem;
}(position_based_history_item_1.PositionBasedHistoryItem));
exports.InsertSectionHistoryItem = InsertSectionHistoryItem;
