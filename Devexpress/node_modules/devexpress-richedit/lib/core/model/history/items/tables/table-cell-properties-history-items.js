"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var errors_1 = require("@devexpress/utils/lib/errors");
var create_table_history_item_1 = require("./create-table-history-item");
var TableCellPropertiesHistoryItemBase = (function (_super) {
    tslib_1.__extends(TableCellPropertiesHistoryItemBase, _super);
    function TableCellPropertiesHistoryItemBase(modelManipulator, boundSubDocument, tableIndex, rowIndex, cellIndex, newValue) {
        var _this = _super.call(this, modelManipulator, boundSubDocument, tableIndex) || this;
        _this.newValue = newValue;
        _this.rowIndex = rowIndex;
        _this.cellIndex = cellIndex;
        return _this;
    }
    return TableCellPropertiesHistoryItemBase;
}(create_table_history_item_1.TableBasedHistoryItem));
exports.TableCellPropertiesHistoryItemBase = TableCellPropertiesHistoryItemBase;
var TableCellColumnSpanHistoryItem = (function (_super) {
    tslib_1.__extends(TableCellColumnSpanHistoryItem, _super);
    function TableCellColumnSpanHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellColumnSpanHistoryItem.prototype.redo = function () {
        this.oldState = this.modelManipulator.table.cellProperties.columnSpan.setValue(this.boundSubDocument, this.tableIndex, this.rowIndex, this.cellIndex, this.newValue);
    };
    TableCellColumnSpanHistoryItem.prototype.undo = function () {
        this.modelManipulator.table.cellProperties.columnSpan.restoreValue(this.boundSubDocument, this.oldState);
    };
    return TableCellColumnSpanHistoryItem;
}(TableCellPropertiesHistoryItemBase));
exports.TableCellColumnSpanHistoryItem = TableCellColumnSpanHistoryItem;
var TableCellVerticalMergingHistoryItem = (function (_super) {
    tslib_1.__extends(TableCellVerticalMergingHistoryItem, _super);
    function TableCellVerticalMergingHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellVerticalMergingHistoryItem.prototype.redo = function () {
        this.oldState = this.modelManipulator.table.cellProperties.verticalMerging.setValue(this.boundSubDocument, this.tableIndex, this.rowIndex, this.cellIndex, this.newValue);
    };
    TableCellVerticalMergingHistoryItem.prototype.undo = function () {
        this.modelManipulator.table.cellProperties.verticalMerging.restoreValue(this.boundSubDocument, this.oldState);
    };
    TableCellVerticalMergingHistoryItem.fromPosition = function (modelManipulator, boundSubDocument, position, value) {
        return new TableCellVerticalMergingHistoryItem(modelManipulator, boundSubDocument, position.table.index, position.rowIndex, position.cellIndex, value);
    };
    return TableCellVerticalMergingHistoryItem;
}(TableCellPropertiesHistoryItemBase));
exports.TableCellVerticalMergingHistoryItem = TableCellVerticalMergingHistoryItem;
var TableCellPropertiesUseHistoryItemBase = (function (_super) {
    tslib_1.__extends(TableCellPropertiesUseHistoryItemBase, _super);
    function TableCellPropertiesUseHistoryItemBase(modelManipulator, boundSubDocument, tableIndex, rowIndex, cellIndex, newValues, newUse) {
        var _this = _super.call(this, modelManipulator, boundSubDocument, tableIndex, rowIndex, cellIndex, newValues) || this;
        _this.newUse = newUse;
        return _this;
    }
    TableCellPropertiesUseHistoryItemBase.prototype.redo = function () {
        this.oldState = this.getManipulator().setValue(this.boundSubDocument, this.tableIndex, this.rowIndex, this.cellIndex, this.newValue, this.newUse);
    };
    TableCellPropertiesUseHistoryItemBase.prototype.undo = function () {
        this.getManipulator().restoreValue(this.boundSubDocument, this.oldState);
    };
    TableCellPropertiesUseHistoryItemBase.prototype.getManipulator = function () {
        throw new Error(errors_1.Errors.NotImplemented);
    };
    return TableCellPropertiesUseHistoryItemBase;
}(TableCellPropertiesHistoryItemBase));
exports.TableCellPropertiesUseHistoryItemBase = TableCellPropertiesUseHistoryItemBase;
var TableCellPropertiesComplexUseHistoryItemBase = (function (_super) {
    tslib_1.__extends(TableCellPropertiesComplexUseHistoryItemBase, _super);
    function TableCellPropertiesComplexUseHistoryItemBase(modelManipulator, boundSubDocument, tableIndex, rowIndex, cellIndex, newValues, newUses) {
        var _this = _super.call(this, modelManipulator, boundSubDocument, tableIndex, rowIndex, cellIndex, newValues) || this;
        if (newValues.length !== newUses.length)
            throw new Error("newValues.length should be equal to newUses.length");
        _this.newUses = newUses;
        return _this;
    }
    TableCellPropertiesComplexUseHistoryItemBase.prototype.redo = function () {
        this.oldState = this.getManipulator().setValue(this.boundSubDocument, this.tableIndex, this.rowIndex, this.cellIndex, this.newValue, this.newUses);
    };
    TableCellPropertiesComplexUseHistoryItemBase.prototype.undo = function () {
        this.getManipulator().restoreValue(this.boundSubDocument, this.oldState);
    };
    TableCellPropertiesComplexUseHistoryItemBase.prototype.getManipulator = function () {
        throw new Error(errors_1.Errors.NotImplemented);
    };
    return TableCellPropertiesComplexUseHistoryItemBase;
}(TableCellPropertiesHistoryItemBase));
exports.TableCellPropertiesComplexUseHistoryItemBase = TableCellPropertiesComplexUseHistoryItemBase;
var TableCellCellMarginsHistoryItem = (function (_super) {
    tslib_1.__extends(TableCellCellMarginsHistoryItem, _super);
    function TableCellCellMarginsHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellCellMarginsHistoryItem.prototype.getManipulator = function () {
        return this.modelManipulator.table.cellProperties.cellMargins;
    };
    return TableCellCellMarginsHistoryItem;
}(TableCellPropertiesComplexUseHistoryItemBase));
exports.TableCellCellMarginsHistoryItem = TableCellCellMarginsHistoryItem;
var TableCellBordersHistoryItem = (function (_super) {
    tslib_1.__extends(TableCellBordersHistoryItem, _super);
    function TableCellBordersHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellBordersHistoryItem.prototype.getManipulator = function () {
        return this.modelManipulator.table.cellProperties.borders;
    };
    return TableCellBordersHistoryItem;
}(TableCellPropertiesComplexUseHistoryItemBase));
exports.TableCellBordersHistoryItem = TableCellBordersHistoryItem;
var TableCellPreferredWidthHistoryItem = (function (_super) {
    tslib_1.__extends(TableCellPreferredWidthHistoryItem, _super);
    function TableCellPreferredWidthHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellPreferredWidthHistoryItem.prototype.redo = function () {
        this.oldState = this.modelManipulator.table.cellProperties.preferredWidth.setValue(this.boundSubDocument, this.tableIndex, this.rowIndex, this.cellIndex, this.newValue);
    };
    TableCellPreferredWidthHistoryItem.prototype.undo = function () {
        this.modelManipulator.table.cellProperties.preferredWidth.restoreValue(this.boundSubDocument, this.oldState);
    };
    return TableCellPreferredWidthHistoryItem;
}(TableCellPropertiesHistoryItemBase));
exports.TableCellPreferredWidthHistoryItem = TableCellPreferredWidthHistoryItem;
var TableCellHideCellMarkHistoryItem = (function (_super) {
    tslib_1.__extends(TableCellHideCellMarkHistoryItem, _super);
    function TableCellHideCellMarkHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellHideCellMarkHistoryItem.prototype.getManipulator = function () {
        return this.modelManipulator.table.cellProperties.hideCellMark;
    };
    return TableCellHideCellMarkHistoryItem;
}(TableCellPropertiesUseHistoryItemBase));
exports.TableCellHideCellMarkHistoryItem = TableCellHideCellMarkHistoryItem;
var TableCellNoWrapHistoryItem = (function (_super) {
    tslib_1.__extends(TableCellNoWrapHistoryItem, _super);
    function TableCellNoWrapHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellNoWrapHistoryItem.prototype.getManipulator = function () {
        return this.modelManipulator.table.cellProperties.noWrap;
    };
    return TableCellNoWrapHistoryItem;
}(TableCellPropertiesUseHistoryItemBase));
exports.TableCellNoWrapHistoryItem = TableCellNoWrapHistoryItem;
var TableCellFitTextHistoryItem = (function (_super) {
    tslib_1.__extends(TableCellFitTextHistoryItem, _super);
    function TableCellFitTextHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellFitTextHistoryItem.prototype.getManipulator = function () {
        return this.modelManipulator.table.cellProperties.fitText;
    };
    return TableCellFitTextHistoryItem;
}(TableCellPropertiesUseHistoryItemBase));
exports.TableCellFitTextHistoryItem = TableCellFitTextHistoryItem;
var TableCellTextDirectionHistoryItem = (function (_super) {
    tslib_1.__extends(TableCellTextDirectionHistoryItem, _super);
    function TableCellTextDirectionHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellTextDirectionHistoryItem.prototype.getManipulator = function () {
        return this.modelManipulator.table.cellProperties.textDirection;
    };
    return TableCellTextDirectionHistoryItem;
}(TableCellPropertiesUseHistoryItemBase));
exports.TableCellTextDirectionHistoryItem = TableCellTextDirectionHistoryItem;
var TableCellVerticalAlignmentHistoryItem = (function (_super) {
    tslib_1.__extends(TableCellVerticalAlignmentHistoryItem, _super);
    function TableCellVerticalAlignmentHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellVerticalAlignmentHistoryItem.prototype.getManipulator = function () {
        return this.modelManipulator.table.cellProperties.verticalAlignment;
    };
    return TableCellVerticalAlignmentHistoryItem;
}(TableCellPropertiesUseHistoryItemBase));
exports.TableCellVerticalAlignmentHistoryItem = TableCellVerticalAlignmentHistoryItem;
var TableCellShadingInfoHistoryItem = (function (_super) {
    tslib_1.__extends(TableCellShadingInfoHistoryItem, _super);
    function TableCellShadingInfoHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellShadingInfoHistoryItem.prototype.getManipulator = function () {
        return this.modelManipulator.table.cellProperties.shadingInfo;
    };
    return TableCellShadingInfoHistoryItem;
}(TableCellPropertiesUseHistoryItemBase));
exports.TableCellShadingInfoHistoryItem = TableCellShadingInfoHistoryItem;
