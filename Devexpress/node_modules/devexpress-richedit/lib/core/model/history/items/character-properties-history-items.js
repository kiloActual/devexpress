"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var errors_1 = require("@devexpress/utils/lib/errors");
var interval_based_history_item_1 = require("../base/interval-based-history-item");
var FontUseValueHistoryItem = (function (_super) {
    tslib_1.__extends(FontUseValueHistoryItem, _super);
    function FontUseValueHistoryItem(modelManipulator, subDocInterval, newValue) {
        var _this = _super.call(this, modelManipulator, subDocInterval) || this;
        _this.newValue = newValue;
        return _this;
    }
    FontUseValueHistoryItem.prototype.redo = function () {
        this.oldState = this.modelManipulator.characterProperties.useValue.setValue(this.boundSubDocument, this.interval, this.newValue);
    };
    FontUseValueHistoryItem.prototype.undo = function () {
        this.modelManipulator.characterProperties.useValue.restoreValue(this.boundSubDocument, this.oldState);
    };
    return FontUseValueHistoryItem;
}(interval_based_history_item_1.IntervalBasedHistoryItem));
exports.FontUseValueHistoryItem = FontUseValueHistoryItem;
var CharacterPropertiesHistoryItem = (function (_super) {
    tslib_1.__extends(CharacterPropertiesHistoryItem, _super);
    function CharacterPropertiesHistoryItem(modelManipulator, subDocInterval, newValue) {
        var _this = _super.call(this, modelManipulator, subDocInterval) || this;
        _this.newValue = newValue;
        return _this;
    }
    CharacterPropertiesHistoryItem.prototype.redo = function () {
        this.oldState = this.modelManipulator.characterProperties.setValue(this.boundSubDocument, this.interval, this.newValue);
    };
    CharacterPropertiesHistoryItem.prototype.undo = function () {
        this.modelManipulator.characterProperties.restoreValue(this.boundSubDocument, this.oldState);
    };
    return CharacterPropertiesHistoryItem;
}(interval_based_history_item_1.IntervalBasedHistoryItem));
exports.CharacterPropertiesHistoryItem = CharacterPropertiesHistoryItem;
var CharacterPropertiesHistoryItemBase = (function (_super) {
    tslib_1.__extends(CharacterPropertiesHistoryItemBase, _super);
    function CharacterPropertiesHistoryItemBase(modelManipulator, subDocInterval, newValue, newUse) {
        var _this = _super.call(this, modelManipulator, subDocInterval) || this;
        _this.newValue = newValue;
        _this.newUse = newUse;
        return _this;
    }
    CharacterPropertiesHistoryItemBase.prototype.redo = function () {
        this.oldState = this.getPropertiesManipulator().setValue(this.boundSubDocument, this.interval, this.newValue, this.newUse);
    };
    CharacterPropertiesHistoryItemBase.prototype.undo = function () {
        this.getPropertiesManipulator().restoreValue(this.boundSubDocument, this.oldState);
    };
    CharacterPropertiesHistoryItemBase.prototype.getPropertiesManipulator = function () {
        throw new Error(errors_1.Errors.NotImplemented);
    };
    return CharacterPropertiesHistoryItemBase;
}(interval_based_history_item_1.IntervalBasedHistoryItem));
exports.CharacterPropertiesHistoryItemBase = CharacterPropertiesHistoryItemBase;
var FontBoldHistoryItem = (function (_super) {
    tslib_1.__extends(FontBoldHistoryItem, _super);
    function FontBoldHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontBoldHistoryItem.prototype.getPropertiesManipulator = function () {
        return this.modelManipulator.characterProperties.fontBold;
    };
    return FontBoldHistoryItem;
}(CharacterPropertiesHistoryItemBase));
exports.FontBoldHistoryItem = FontBoldHistoryItem;
var FontCapsHistoryItem = (function (_super) {
    tslib_1.__extends(FontCapsHistoryItem, _super);
    function FontCapsHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontCapsHistoryItem.prototype.getPropertiesManipulator = function () {
        return this.modelManipulator.characterProperties.fontCaps;
    };
    return FontCapsHistoryItem;
}(CharacterPropertiesHistoryItemBase));
exports.FontCapsHistoryItem = FontCapsHistoryItem;
var FontUnderlineTypeHistoryItem = (function (_super) {
    tslib_1.__extends(FontUnderlineTypeHistoryItem, _super);
    function FontUnderlineTypeHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontUnderlineTypeHistoryItem.prototype.getPropertiesManipulator = function () {
        return this.modelManipulator.characterProperties.fontUnderlineType;
    };
    return FontUnderlineTypeHistoryItem;
}(CharacterPropertiesHistoryItemBase));
exports.FontUnderlineTypeHistoryItem = FontUnderlineTypeHistoryItem;
var FontTextColorHistoryItem = (function (_super) {
    tslib_1.__extends(FontTextColorHistoryItem, _super);
    function FontTextColorHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontTextColorHistoryItem.prototype.getPropertiesManipulator = function () {
        return this.modelManipulator.characterProperties.textColor;
    };
    return FontTextColorHistoryItem;
}(CharacterPropertiesHistoryItemBase));
exports.FontTextColorHistoryItem = FontTextColorHistoryItem;
var FontShadingInfoHistoryItem = (function (_super) {
    tslib_1.__extends(FontShadingInfoHistoryItem, _super);
    function FontShadingInfoHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontShadingInfoHistoryItem.prototype.getPropertiesManipulator = function () {
        return this.modelManipulator.characterProperties.shadingInfo;
    };
    return FontShadingInfoHistoryItem;
}(CharacterPropertiesHistoryItemBase));
exports.FontShadingInfoHistoryItem = FontShadingInfoHistoryItem;
var FontHiddenHistoryItem = (function (_super) {
    tslib_1.__extends(FontHiddenHistoryItem, _super);
    function FontHiddenHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontHiddenHistoryItem.prototype.getPropertiesManipulator = function () {
        return this.modelManipulator.characterProperties.fontHidden;
    };
    return FontHiddenHistoryItem;
}(CharacterPropertiesHistoryItemBase));
exports.FontHiddenHistoryItem = FontHiddenHistoryItem;
var FontItalicHistoryItem = (function (_super) {
    tslib_1.__extends(FontItalicHistoryItem, _super);
    function FontItalicHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontItalicHistoryItem.prototype.getPropertiesManipulator = function () {
        return this.modelManipulator.characterProperties.fontItalic;
    };
    return FontItalicHistoryItem;
}(CharacterPropertiesHistoryItemBase));
exports.FontItalicHistoryItem = FontItalicHistoryItem;
var FontNameHistoryItem = (function (_super) {
    tslib_1.__extends(FontNameHistoryItem, _super);
    function FontNameHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontNameHistoryItem.prototype.getPropertiesManipulator = function () {
        return this.modelManipulator.characterProperties.fontName;
    };
    return FontNameHistoryItem;
}(CharacterPropertiesHistoryItemBase));
exports.FontNameHistoryItem = FontNameHistoryItem;
var FontScriptHistoryItem = (function (_super) {
    tslib_1.__extends(FontScriptHistoryItem, _super);
    function FontScriptHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontScriptHistoryItem.prototype.getPropertiesManipulator = function () {
        return this.modelManipulator.characterProperties.script;
    };
    return FontScriptHistoryItem;
}(CharacterPropertiesHistoryItemBase));
exports.FontScriptHistoryItem = FontScriptHistoryItem;
var FontSizeHistoryItem = (function (_super) {
    tslib_1.__extends(FontSizeHistoryItem, _super);
    function FontSizeHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontSizeHistoryItem.prototype.getPropertiesManipulator = function () {
        return this.modelManipulator.characterProperties.fontSize;
    };
    return FontSizeHistoryItem;
}(CharacterPropertiesHistoryItemBase));
exports.FontSizeHistoryItem = FontSizeHistoryItem;
var FontStrikeoutTypeHistoryItem = (function (_super) {
    tslib_1.__extends(FontStrikeoutTypeHistoryItem, _super);
    function FontStrikeoutTypeHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontStrikeoutTypeHistoryItem.prototype.getPropertiesManipulator = function () {
        return this.modelManipulator.characterProperties.fontStrikeoutType;
    };
    return FontStrikeoutTypeHistoryItem;
}(CharacterPropertiesHistoryItemBase));
exports.FontStrikeoutTypeHistoryItem = FontStrikeoutTypeHistoryItem;
var FontStrikeoutWordsOnlyHistoryItem = (function (_super) {
    tslib_1.__extends(FontStrikeoutWordsOnlyHistoryItem, _super);
    function FontStrikeoutWordsOnlyHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontStrikeoutWordsOnlyHistoryItem.prototype.getPropertiesManipulator = function () {
        return this.modelManipulator.characterProperties.fontStrikeoutWordsOnly;
    };
    return FontStrikeoutWordsOnlyHistoryItem;
}(CharacterPropertiesHistoryItemBase));
exports.FontStrikeoutWordsOnlyHistoryItem = FontStrikeoutWordsOnlyHistoryItem;
var FontStrikeoutColorHistoryItem = (function (_super) {
    tslib_1.__extends(FontStrikeoutColorHistoryItem, _super);
    function FontStrikeoutColorHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontStrikeoutColorHistoryItem.prototype.getPropertiesManipulator = function () {
        return this.modelManipulator.characterProperties.fontStrikeoutColor;
    };
    return FontStrikeoutColorHistoryItem;
}(CharacterPropertiesHistoryItemBase));
exports.FontStrikeoutColorHistoryItem = FontStrikeoutColorHistoryItem;
var FontUnderlineColorHistoryItem = (function (_super) {
    tslib_1.__extends(FontUnderlineColorHistoryItem, _super);
    function FontUnderlineColorHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontUnderlineColorHistoryItem.prototype.getPropertiesManipulator = function () {
        return this.modelManipulator.characterProperties.fontUnderlineColor;
    };
    return FontUnderlineColorHistoryItem;
}(CharacterPropertiesHistoryItemBase));
exports.FontUnderlineColorHistoryItem = FontUnderlineColorHistoryItem;
var FontHighlightColorHistoryItem = (function (_super) {
    tslib_1.__extends(FontHighlightColorHistoryItem, _super);
    function FontHighlightColorHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontHighlightColorHistoryItem.prototype.getPropertiesManipulator = function () {
        return this.modelManipulator.characterProperties.fontHighlightColor;
    };
    return FontHighlightColorHistoryItem;
}(CharacterPropertiesHistoryItemBase));
exports.FontHighlightColorHistoryItem = FontHighlightColorHistoryItem;
var FontUnderlineWordsOnlyHistoryItem = (function (_super) {
    tslib_1.__extends(FontUnderlineWordsOnlyHistoryItem, _super);
    function FontUnderlineWordsOnlyHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontUnderlineWordsOnlyHistoryItem.prototype.getPropertiesManipulator = function () {
        return this.modelManipulator.characterProperties.fontUnderlineWordsOnly;
    };
    return FontUnderlineWordsOnlyHistoryItem;
}(CharacterPropertiesHistoryItemBase));
exports.FontUnderlineWordsOnlyHistoryItem = FontUnderlineWordsOnlyHistoryItem;
var FontNoProofHistoryItem = (function (_super) {
    tslib_1.__extends(FontNoProofHistoryItem, _super);
    function FontNoProofHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontNoProofHistoryItem.prototype.getPropertiesManipulator = function () {
        return this.modelManipulator.characterProperties.fontNoProof;
    };
    return FontNoProofHistoryItem;
}(CharacterPropertiesHistoryItemBase));
exports.FontNoProofHistoryItem = FontNoProofHistoryItem;
var FontLangInfoHistoryItem = (function (_super) {
    tslib_1.__extends(FontLangInfoHistoryItem, _super);
    function FontLangInfoHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontLangInfoHistoryItem.prototype.getPropertiesManipulator = function () {
        return this.modelManipulator.characterProperties.langInfo;
    };
    return FontLangInfoHistoryItem;
}(CharacterPropertiesHistoryItemBase));
exports.FontLangInfoHistoryItem = FontLangInfoHistoryItem;
var FontCompositeFontInfoHistoryItem = (function (_super) {
    tslib_1.__extends(FontCompositeFontInfoHistoryItem, _super);
    function FontCompositeFontInfoHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontCompositeFontInfoHistoryItem.prototype.getPropertiesManipulator = function () {
        return this.modelManipulator.characterProperties.compositeFontInfo;
    };
    return FontCompositeFontInfoHistoryItem;
}(CharacterPropertiesHistoryItemBase));
exports.FontCompositeFontInfoHistoryItem = FontCompositeFontInfoHistoryItem;
var ResetCharacterPropertiesUseValuesHistoryItem = (function (_super) {
    tslib_1.__extends(ResetCharacterPropertiesUseValuesHistoryItem, _super);
    function ResetCharacterPropertiesUseValuesHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ResetCharacterPropertiesUseValuesHistoryItem.prototype.redo = function () {
        this.state = this.modelManipulator.characterProperties.useValue.setValue(this.boundSubDocument, this.interval, 0);
    };
    ResetCharacterPropertiesUseValuesHistoryItem.prototype.undo = function () {
        this.modelManipulator.characterProperties.useValue.restoreValue(this.boundSubDocument, this.state);
    };
    return ResetCharacterPropertiesUseValuesHistoryItem;
}(interval_based_history_item_1.IntervalBasedHistoryItem));
exports.ResetCharacterPropertiesUseValuesHistoryItem = ResetCharacterPropertiesUseValuesHistoryItem;
