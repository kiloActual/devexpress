"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var flag_1 = require("@devexpress/utils/lib/class/flag");
var paragraph_properties_1 = require("../../paragraph/paragraph-properties");
var sub_document_1 = require("../../sub-document");
var history_item_1 = require("../base/history-item");
var paragraph_properties_history_items_1 = require("./paragraph-properties-history-items");
var AddAbstractNumberingListHistoryItem = (function (_super) {
    tslib_1.__extends(AddAbstractNumberingListHistoryItem, _super);
    function AddAbstractNumberingListHistoryItem(modelManipulator, abstractNumberingList) {
        var _this = _super.call(this, modelManipulator) || this;
        _this.abstractNumberingList = abstractNumberingList;
        return _this;
    }
    AddAbstractNumberingListHistoryItem.prototype.redo = function () {
        this.abstractNumberingListIndex = this.modelManipulator.numberingList.addAbstractNumberingList(this.abstractNumberingList);
    };
    AddAbstractNumberingListHistoryItem.prototype.undo = function () {
        this.modelManipulator.numberingList.deleteAbstractNumberingList(this.abstractNumberingListIndex);
    };
    return AddAbstractNumberingListHistoryItem;
}(history_item_1.HistoryItem));
exports.AddAbstractNumberingListHistoryItem = AddAbstractNumberingListHistoryItem;
var AddNumberingListHistoryItem = (function (_super) {
    tslib_1.__extends(AddNumberingListHistoryItem, _super);
    function AddNumberingListHistoryItem(modelManipulator, numberingList) {
        var _this = _super.call(this, modelManipulator) || this;
        _this.numberingList = numberingList;
        return _this;
    }
    AddNumberingListHistoryItem.prototype.redo = function () {
        this.numberingListIndex = this.modelManipulator.numberingList.addNumberingList(this.numberingList);
    };
    AddNumberingListHistoryItem.prototype.undo = function () {
        this.modelManipulator.numberingList.deleteNumberingList(this.numberingListIndex);
    };
    return AddNumberingListHistoryItem;
}(history_item_1.HistoryItem));
exports.AddNumberingListHistoryItem = AddNumberingListHistoryItem;
var AddParagraphToListHistoryItem = (function (_super) {
    tslib_1.__extends(AddParagraphToListHistoryItem, _super);
    function AddParagraphToListHistoryItem(modelManipulator, subDocument, paragraphIndex, numberingListIndex, listLevelIndex) {
        var _this = _super.call(this, modelManipulator) || this;
        _this.subDocument = subDocument;
        _this.paragraphIndex = paragraphIndex;
        _this.numberingListIndex = numberingListIndex;
        _this.listLevelIndex = listLevelIndex;
        return _this;
    }
    AddParagraphToListHistoryItem.prototype.redo = function () {
        var paragraph = this.subDocument.paragraphs[this.paragraphIndex];
        this.useValHistItem = new paragraph_properties_history_items_1.ParagraphUseValueHistoryItem(this.modelManipulator, new sub_document_1.SubDocumentInterval(this.subDocument, this.subDocument.paragraphs[this.paragraphIndex].interval), new flag_1.Flag(paragraph.maskedParagraphProperties.useValue)
            .set(paragraph_properties_1.ParagraphPropertiesMask.UseLeftIndent, false)
            .set(paragraph_properties_1.ParagraphPropertiesMask.UseFirstLineIndent, false).getValue());
        this.useValHistItem.redo();
        this.state = this.modelManipulator.numberingList.setParagraphNumberingList(this.subDocument, this.paragraphIndex, this.numberingListIndex, this.listLevelIndex);
    };
    AddParagraphToListHistoryItem.prototype.undo = function () {
        this.useValHistItem.undo();
        this.modelManipulator.numberingList.restoreParagraphNumberingList(this.subDocument, this.state);
    };
    return AddParagraphToListHistoryItem;
}(history_item_1.HistoryItem));
exports.AddParagraphToListHistoryItem = AddParagraphToListHistoryItem;
var RemoveParagraphFromListHistoryItem = (function (_super) {
    tslib_1.__extends(RemoveParagraphFromListHistoryItem, _super);
    function RemoveParagraphFromListHistoryItem(modelManipulator, subDocument, paragraphIndex) {
        var _this = _super.call(this, modelManipulator) || this;
        _this.subDocument = subDocument;
        _this.paragraphIndex = paragraphIndex;
        return _this;
    }
    RemoveParagraphFromListHistoryItem.prototype.redo = function () {
        this.state = this.modelManipulator.numberingList.removeNumberingListFromParagraph(this.subDocument, this.paragraphIndex);
    };
    RemoveParagraphFromListHistoryItem.prototype.undo = function () {
        this.modelManipulator.numberingList.restoreParagraphNumberingList(this.subDocument, this.state);
    };
    return RemoveParagraphFromListHistoryItem;
}(history_item_1.HistoryItem));
exports.RemoveParagraphFromListHistoryItem = RemoveParagraphFromListHistoryItem;
var ListLevelNewStartHistoryItem = (function (_super) {
    tslib_1.__extends(ListLevelNewStartHistoryItem, _super);
    function ListLevelNewStartHistoryItem(modelManipulator, listIndex, levelIndex, newValue) {
        var _this = _super.call(this, modelManipulator) || this;
        _this.newValue = newValue;
        _this.listIndex = listIndex;
        _this.levelIndex = levelIndex;
        return _this;
    }
    ListLevelNewStartHistoryItem.prototype.redo = function () {
        this.oldState = this.modelManipulator.numberingList.setIOverrideListLevelNewStart(this.listIndex, this.levelIndex, this.newValue);
    };
    ListLevelNewStartHistoryItem.prototype.undo = function () {
        this.modelManipulator.numberingList.restoreIOverrideListLevelNewStart(this.oldState);
    };
    return ListLevelNewStartHistoryItem;
}(history_item_1.HistoryItem));
exports.ListLevelNewStartHistoryItem = ListLevelNewStartHistoryItem;
var ListLevelOverrideStartHistoryItem = (function (_super) {
    tslib_1.__extends(ListLevelOverrideStartHistoryItem, _super);
    function ListLevelOverrideStartHistoryItem(modelManipulator, listIndex, levelIndex, overrideStart) {
        var _this = _super.call(this, modelManipulator) || this;
        _this.newValue = overrideStart;
        _this.listIndex = listIndex;
        _this.levelIndex = levelIndex;
        return _this;
    }
    ListLevelOverrideStartHistoryItem.prototype.redo = function () {
        this.oldState = this.modelManipulator.numberingList.setIOverrideListLevelOverrideStart(this.listIndex, this.levelIndex, this.newValue);
    };
    ListLevelOverrideStartHistoryItem.prototype.undo = function () {
        this.modelManipulator.numberingList.restoreIOverrideListLevelOverrideStart(this.oldState);
    };
    return ListLevelOverrideStartHistoryItem;
}(history_item_1.HistoryItem));
exports.ListLevelOverrideStartHistoryItem = ListLevelOverrideStartHistoryItem;
