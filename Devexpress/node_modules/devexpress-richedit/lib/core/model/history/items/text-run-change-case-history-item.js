"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var interval_based_history_item_1 = require("../base/interval-based-history-item");
var ChangeCaseHistoryItemBase = (function (_super) {
    tslib_1.__extends(ChangeCaseHistoryItemBase, _super);
    function ChangeCaseHistoryItemBase(modelManipulator, subDocInterval, selection, layoutFormatterManager) {
        var _this = _super.call(this, modelManipulator, subDocInterval) || this;
        _this.layoutFormatterManager = layoutFormatterManager;
        _this.selection = selection;
        return _this;
    }
    ChangeCaseHistoryItemBase.prototype.undo = function () {
        this.modelManipulator.textCase.applyBufferState(this.boundSubDocument, this.oldState);
    };
    return ChangeCaseHistoryItemBase;
}(interval_based_history_item_1.IntervalBasedHistoryItem));
exports.ChangeCaseHistoryItemBase = ChangeCaseHistoryItemBase;
var UpperCaseHistoryItem = (function (_super) {
    tslib_1.__extends(UpperCaseHistoryItem, _super);
    function UpperCaseHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UpperCaseHistoryItem.prototype.redo = function () {
        this.oldState = this.modelManipulator.textCase.applyUpperCase(this.layoutFormatterManager, this.selection, this.boundSubDocument, this.interval);
    };
    return UpperCaseHistoryItem;
}(ChangeCaseHistoryItemBase));
exports.UpperCaseHistoryItem = UpperCaseHistoryItem;
var LowerCaseHistoryItem = (function (_super) {
    tslib_1.__extends(LowerCaseHistoryItem, _super);
    function LowerCaseHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LowerCaseHistoryItem.prototype.redo = function () {
        this.oldState = this.modelManipulator.textCase.applyLowerCase(this.layoutFormatterManager, this.selection, this.boundSubDocument, this.interval);
    };
    return LowerCaseHistoryItem;
}(ChangeCaseHistoryItemBase));
exports.LowerCaseHistoryItem = LowerCaseHistoryItem;
var CapitalizeEachWordCaseHistoryItem = (function (_super) {
    tslib_1.__extends(CapitalizeEachWordCaseHistoryItem, _super);
    function CapitalizeEachWordCaseHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CapitalizeEachWordCaseHistoryItem.prototype.redo = function () {
        this.oldState = this.modelManipulator.textCase.applyCapitalizeEachWordCase(this.layoutFormatterManager, this.selection, this.boundSubDocument, this.interval);
    };
    return CapitalizeEachWordCaseHistoryItem;
}(ChangeCaseHistoryItemBase));
exports.CapitalizeEachWordCaseHistoryItem = CapitalizeEachWordCaseHistoryItem;
var ToggleCaseHistoryItem = (function (_super) {
    tslib_1.__extends(ToggleCaseHistoryItem, _super);
    function ToggleCaseHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ToggleCaseHistoryItem.prototype.redo = function () {
        this.oldState = this.modelManipulator.textCase.applyToggleCase(this.layoutFormatterManager, this.selection, this.boundSubDocument, this.interval);
    };
    return ToggleCaseHistoryItem;
}(ChangeCaseHistoryItemBase));
exports.ToggleCaseHistoryItem = ToggleCaseHistoryItem;
var SentenceCaseHistoryItem = (function (_super) {
    tslib_1.__extends(SentenceCaseHistoryItem, _super);
    function SentenceCaseHistoryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SentenceCaseHistoryItem.prototype.redo = function () {
        this.oldState = this.modelManipulator.textCase.applySentenceCase(this.layoutFormatterManager, this.selection, this.boundSubDocument, this.interval);
    };
    return SentenceCaseHistoryItem;
}(ChangeCaseHistoryItemBase));
exports.SentenceCaseHistoryItem = SentenceCaseHistoryItem;
