"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var create_table_history_item_1 = require("./create-table-history-item");
var SplitTableCellToTheLeftHistoryItem = (function (_super) {
    tslib_1.__extends(SplitTableCellToTheLeftHistoryItem, _super);
    function SplitTableCellToTheLeftHistoryItem(modelManipulator, boundSubDocument, tableIndex, rowIndex, cellIndex, copyProperties) {
        var _this = _super.call(this, modelManipulator, boundSubDocument, tableIndex) || this;
        _this.rowIndex = rowIndex;
        _this.cellIndex = cellIndex;
        _this.copyProperties = copyProperties;
        return _this;
    }
    SplitTableCellToTheLeftHistoryItem.prototype.redo = function () {
        this.modelManipulator.table.splitTableCellHorizontally(this.boundSubDocument, this.getTable(), this.rowIndex, this.cellIndex, false, this.copyProperties);
    };
    SplitTableCellToTheLeftHistoryItem.prototype.undo = function () {
        this.modelManipulator.table.restoreSplittedCellHorizontally(this.boundSubDocument, this.getTable(), this.rowIndex, this.cellIndex + 1, false);
    };
    return SplitTableCellToTheLeftHistoryItem;
}(create_table_history_item_1.TableBasedHistoryItem));
exports.SplitTableCellToTheLeftHistoryItem = SplitTableCellToTheLeftHistoryItem;
var SplitTableCellToTheRightHistoryItem = (function (_super) {
    tslib_1.__extends(SplitTableCellToTheRightHistoryItem, _super);
    function SplitTableCellToTheRightHistoryItem(modelManipulator, boundSubDocument, tableIndex, rowIndex, cellIndex, copyProperties) {
        var _this = _super.call(this, modelManipulator, boundSubDocument, tableIndex) || this;
        _this.rowIndex = rowIndex;
        _this.cellIndex = cellIndex;
        _this.copyProperties = copyProperties;
        return _this;
    }
    SplitTableCellToTheRightHistoryItem.prototype.redo = function () {
        this.modelManipulator.table.splitTableCellHorizontally(this.boundSubDocument, this.getTable(), this.rowIndex, this.cellIndex, true, this.copyProperties);
    };
    SplitTableCellToTheRightHistoryItem.prototype.undo = function () {
        this.modelManipulator.table.restoreSplittedCellHorizontally(this.boundSubDocument, this.getTable(), this.rowIndex, this.cellIndex, true);
    };
    return SplitTableCellToTheRightHistoryItem;
}(create_table_history_item_1.TableBasedHistoryItem));
exports.SplitTableCellToTheRightHistoryItem = SplitTableCellToTheRightHistoryItem;
