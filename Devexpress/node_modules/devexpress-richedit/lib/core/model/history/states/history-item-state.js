"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var fixed_1 = require("@devexpress/utils/lib/intervals/fixed");
var HistoryItemState = (function () {
    function HistoryItemState() {
        var values = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            values[_i] = arguments[_i];
        }
        this.objects = [];
        for (var value, i = 0; value = values[i]; i++)
            this.register(value);
    }
    HistoryItemState.prototype.register = function (object) {
        if (this.lastObject && this.lastObject.canMerge(object))
            this.lastObject.merge(object);
        else {
            this.objects.push(object);
            this.lastObject = object;
        }
        return this;
    };
    HistoryItemState.prototype.toJSON = function (withPostData) {
        var result = [];
        for (var object, i = 0; object = this.objects[i]; i++)
            result.push(object.toJSON(withPostData));
        return result;
    };
    HistoryItemState.prototype.isEmpty = function () {
        return !this.lastObject;
    };
    return HistoryItemState;
}());
exports.HistoryItemState = HistoryItemState;
var HistoryItemIntervalState = (function (_super) {
    tslib_1.__extends(HistoryItemIntervalState, _super);
    function HistoryItemIntervalState() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(HistoryItemIntervalState.prototype, "interval", {
        get: function () {
            if (this.lastObject)
                return fixed_1.FixedInterval.fromPositions(this.objects[0].interval.start, this.lastObject.interval.end);
            return null;
        },
        enumerable: true,
        configurable: true
    });
    return HistoryItemIntervalState;
}(HistoryItemState));
exports.HistoryItemIntervalState = HistoryItemIntervalState;
