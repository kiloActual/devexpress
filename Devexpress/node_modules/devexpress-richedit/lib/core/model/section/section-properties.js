"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var unit_converter_1 = require("@devexpress/utils/lib/class/unit-converter");
var margins_1 = require("@devexpress/utils/lib/geometry/margins");
var size_1 = require("@devexpress/utils/lib/geometry/size");
var enums_1 = require("./enums");
var section_column_properties_1 = require("./section-column-properties");
var paper_kind_1 = require("./paper-kind");
var SectionProperties = (function () {
    function SectionProperties() {
        this.margins = new margins_1.Margins(1440, 1440, 1440, 1440);
        this.headerOffset = 720;
        this.footerOffset = 720;
        this.columnCount = 1;
        this.space = 720;
        this.equalWidthColumns = true;
        this.columnsInfo = [];
        this.pageSize = new size_1.Size(12240, 15840);
        this.startType = enums_1.SectionStartType.NextPage;
        this.landscape = false;
        this.differentFirstPage = false;
        this.paperKind = paper_kind_1.PaperKind.Letter;
        this.firstPageNumber = -1;
        this.continueNumbering = true;
    }
    SectionProperties.createSimpleSectionProperties = function (width, height) {
        var simpleSectionProperties = new SectionProperties();
        simpleSectionProperties.margins = new margins_1.Margins(0, 0, 0, 0);
        simpleSectionProperties.pageWidth = unit_converter_1.UnitConverter.pixelsToTwips(width);
        simpleSectionProperties.pageHeight = unit_converter_1.UnitConverter.pixelsToTwips(height);
        return simpleSectionProperties;
    };
    Object.defineProperty(SectionProperties.prototype, "marginLeft", {
        get: function () { return this.margins.left; },
        set: function (val) { this.margins.left = val; },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(SectionProperties.prototype, "marginTop", {
        get: function () { return this.margins.top; },
        set: function (val) { this.margins.top = val; },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(SectionProperties.prototype, "marginRight", {
        get: function () { return this.margins.right; },
        set: function (val) { this.margins.right = val; },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(SectionProperties.prototype, "marginBottom", {
        get: function () { return this.margins.bottom; },
        set: function (val) { this.margins.bottom = val; },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(SectionProperties.prototype, "pageWidth", {
        get: function () { return this.pageSize.width; },
        set: function (val) { this.pageSize.width = val; },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(SectionProperties.prototype, "pageHeight", {
        get: function () { return this.pageSize.height; },
        set: function (val) { this.pageSize.height = val; },
        enumerable: true,
        configurable: true
    });
    ;
    ;
    ;
    ;
    ;
    ;
    ;
    SectionProperties.prototype.copyFrom = function (obj) {
        this.columnCount = obj.columnCount;
        if (obj.columnsInfo) {
            this.columnsInfo = [];
            for (var i = 0; i < obj.columnsInfo.length; i++)
                this.columnsInfo.push(new section_column_properties_1.SectionColumnProperties(obj.columnsInfo[i].width, obj.columnsInfo[i].space));
        }
        else
            this.columnsInfo = obj.columnsInfo;
        this.equalWidthColumns = obj.equalWidthColumns;
        this.marginBottom = obj.marginBottom;
        this.marginLeft = obj.marginLeft;
        this.marginRight = obj.marginRight;
        this.marginTop = obj.marginTop;
        this.pageHeight = obj.pageHeight;
        this.pageWidth = obj.pageWidth;
        this.space = obj.space;
        this.startType = obj.startType;
        this.landscape = obj.landscape;
        this.differentFirstPage = obj.differentFirstPage;
        this.headerOffset = obj.headerOffset;
        this.footerOffset = obj.footerOffset;
        this.paperKind = obj.paperKind;
        this.firstPageNumber = obj.firstPageNumber;
        this.continueNumbering = obj.continueNumbering;
    };
    SectionProperties.prototype.clone = function () {
        var obj = new SectionProperties();
        obj.copyFrom(this);
        return obj;
    };
    SectionProperties.prototype.equals = function (obj) {
        if (!obj)
            return false;
        return this.margins.equals(obj.margins) &&
            this.headerOffset == obj.headerOffset &&
            this.footerOffset == obj.footerOffset &&
            this.columnCount == obj.columnCount &&
            this.space == obj.space &&
            this.equalWidthColumns == obj.equalWidthColumns &&
            this.pageSize.equals(obj.pageSize) &&
            this.startType == obj.startType &&
            this.landscape == obj.landscape &&
            this.differentFirstPage == obj.differentFirstPage &&
            section_column_properties_1.SectionColumnProperties.equalsColumnsInfoBinary(this.columnsInfo, obj.columnsInfo) &&
            this.paperKind == obj.paperKind &&
            this.firstPageNumber == obj.firstPageNumber &&
            this.continueNumbering == obj.continueNumbering;
    };
    return SectionProperties;
}());
exports.SectionProperties = SectionProperties;
