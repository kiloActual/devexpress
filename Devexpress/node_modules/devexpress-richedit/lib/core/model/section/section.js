"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fixed_1 = require("@devexpress/utils/lib/intervals/fixed");
var search_1 = require("@devexpress/utils/lib/utils/search");
var header_footer_1 = require("./header-footer");
var Section = (function () {
    function Section(documentModel, startLogPosition, length, sectionProperties) {
        this.documentModel = documentModel;
        this.startLogPosition = startLogPosition;
        this.length = length;
        this.sectionProperties = sectionProperties;
        this.headers = new header_footer_1.SectionHeaders(this);
        this.footers = new header_footer_1.SectionFooters(this);
    }
    Section.prototype.getLength = function () {
        return this.length;
    };
    Section.prototype.setLength = function (subDocument, newLength) {
        if (subDocument.isMain())
            this.length = newLength;
    };
    Section.prototype.getEndPosition = function () {
        return this.startLogPosition.value + this.length;
    };
    Section.getPageSectionIndex = function (layoutPage, sections) {
        var layoutPageStartPosition = layoutPage.getPosition();
        return search_1.SearchUtils.normedInterpolationIndexOf(sections, function (s) { return s.startLogPosition.value; }, layoutPageStartPosition);
    };
    Object.defineProperty(Section.prototype, "interval", {
        get: function () { return new fixed_1.FixedInterval(this.startLogPosition.value, this.length); },
        enumerable: true,
        configurable: true
    });
    Section.prototype.cloneToNewModel = function (model) {
        return new Section(model, model.mainSubDocument.positionManager.registerPosition(this.startLogPosition.value), this.length, this.sectionProperties.clone());
    };
    return Section;
}());
exports.Section = Section;
