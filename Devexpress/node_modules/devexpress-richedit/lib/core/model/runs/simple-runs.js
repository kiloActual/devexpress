"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var properties_bundle_1 = require("../../rich-utils/properties-bundle");
var run_base_1 = require("./run-base");
var run_type_1 = require("./run-type");
var SectionRun = (function (_super) {
    tslib_1.__extends(SectionRun, _super);
    function SectionRun() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SectionRun.prototype.getType = function () {
        return run_type_1.RunType.SectionRun;
    };
    SectionRun.prototype.isParagraphOrSectionRun = function () {
        return true;
    };
    SectionRun.prototype.clone = function () {
        return new SectionRun(this.startOffset, this.paragraph, new properties_bundle_1.MaskedCharacterPropertiesBundle(this.maskedCharacterProperties, this.characterStyle));
    };
    SectionRun.prototype.cloneToNewSubDocument = function (subDocument) {
        return new SectionRun(this.startOffset, subDocument.getParagraphByPosition(this.paragraph.startLogPosition.value), new properties_bundle_1.MaskedCharacterPropertiesBundle(subDocument.documentModel.cache.maskedCharacterPropertiesCache.getItem(this.maskedCharacterProperties), subDocument.documentModel.stylesManager.getCharacterStyleByName(this.characterStyle.styleName)));
    };
    return SectionRun;
}(run_base_1.OneCharRun));
exports.SectionRun = SectionRun;
var ParagraphRun = (function (_super) {
    tslib_1.__extends(ParagraphRun, _super);
    function ParagraphRun() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ParagraphRun.prototype.getType = function () {
        return run_type_1.RunType.ParagraphRun;
    };
    ParagraphRun.prototype.isParagraphOrSectionRun = function () {
        return true;
    };
    ParagraphRun.prototype.clone = function () {
        return new ParagraphRun(this.startOffset, this.paragraph, new properties_bundle_1.MaskedCharacterPropertiesBundle(this.maskedCharacterProperties, this.characterStyle));
    };
    ParagraphRun.prototype.cloneToNewSubDocument = function (subDocument) {
        return new ParagraphRun(this.startOffset, subDocument.getParagraphByPosition(this.paragraph.startLogPosition.value), new properties_bundle_1.MaskedCharacterPropertiesBundle(subDocument.documentModel.cache.maskedCharacterPropertiesCache.getItem(this.maskedCharacterProperties), subDocument.documentModel.stylesManager.getCharacterStyleByName(this.characterStyle.styleName)));
    };
    return ParagraphRun;
}(run_base_1.OneCharRun));
exports.ParagraphRun = ParagraphRun;
var FieldCodeStartRun = (function (_super) {
    tslib_1.__extends(FieldCodeStartRun, _super);
    function FieldCodeStartRun() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FieldCodeStartRun.prototype.getType = function () {
        return run_type_1.RunType.FieldCodeStartRun;
    };
    FieldCodeStartRun.prototype.clone = function () {
        return new FieldCodeStartRun(this.startOffset, this.paragraph, new properties_bundle_1.MaskedCharacterPropertiesBundle(this.maskedCharacterProperties, this.characterStyle));
    };
    FieldCodeStartRun.prototype.cloneToNewSubDocument = function (subDocument) {
        return new FieldCodeStartRun(this.startOffset, subDocument.getParagraphByPosition(this.paragraph.startLogPosition.value), new properties_bundle_1.MaskedCharacterPropertiesBundle(subDocument.documentModel.cache.maskedCharacterPropertiesCache.getItem(this.maskedCharacterProperties), subDocument.documentModel.stylesManager.getCharacterStyleByName(this.characterStyle.styleName)));
    };
    return FieldCodeStartRun;
}(run_base_1.OneCharRun));
exports.FieldCodeStartRun = FieldCodeStartRun;
var FieldCodeEndRun = (function (_super) {
    tslib_1.__extends(FieldCodeEndRun, _super);
    function FieldCodeEndRun() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FieldCodeEndRun.prototype.getType = function () {
        return run_type_1.RunType.FieldCodeEndRun;
    };
    FieldCodeEndRun.prototype.clone = function () {
        return new FieldCodeEndRun(this.startOffset, this.paragraph, new properties_bundle_1.MaskedCharacterPropertiesBundle(this.maskedCharacterProperties, this.characterStyle));
    };
    FieldCodeEndRun.prototype.cloneToNewSubDocument = function (subDocument) {
        return new FieldCodeEndRun(this.startOffset, subDocument.getParagraphByPosition(this.paragraph.startLogPosition.value), new properties_bundle_1.MaskedCharacterPropertiesBundle(subDocument.documentModel.cache.maskedCharacterPropertiesCache.getItem(this.maskedCharacterProperties), subDocument.documentModel.stylesManager.getCharacterStyleByName(this.characterStyle.styleName)));
    };
    return FieldCodeEndRun;
}(run_base_1.OneCharRun));
exports.FieldCodeEndRun = FieldCodeEndRun;
var FieldResultEndRun = (function (_super) {
    tslib_1.__extends(FieldResultEndRun, _super);
    function FieldResultEndRun() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FieldResultEndRun.prototype.getType = function () {
        return run_type_1.RunType.FieldResultEndRun;
    };
    FieldResultEndRun.prototype.clone = function () {
        return new FieldResultEndRun(this.startOffset, this.paragraph, new properties_bundle_1.MaskedCharacterPropertiesBundle(this.maskedCharacterProperties, this.characterStyle));
    };
    FieldResultEndRun.prototype.cloneToNewSubDocument = function (subDocument) {
        return new LayoutDependentRun(this.startOffset, subDocument.getParagraphByPosition(this.paragraph.startLogPosition.value), new properties_bundle_1.MaskedCharacterPropertiesBundle(subDocument.documentModel.cache.maskedCharacterPropertiesCache.getItem(this.maskedCharacterProperties), subDocument.documentModel.stylesManager.getCharacterStyleByName(this.characterStyle.styleName)));
    };
    return FieldResultEndRun;
}(run_base_1.OneCharRun));
exports.FieldResultEndRun = FieldResultEndRun;
var LayoutDependentRun = (function (_super) {
    tslib_1.__extends(LayoutDependentRun, _super);
    function LayoutDependentRun() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LayoutDependentRun.prototype.getType = function () {
        return run_type_1.RunType.LayoutDependentRun;
    };
    LayoutDependentRun.prototype.clone = function () {
        return new LayoutDependentRun(this.startOffset, this.paragraph, new properties_bundle_1.MaskedCharacterPropertiesBundle(this.maskedCharacterProperties, this.characterStyle));
    };
    LayoutDependentRun.prototype.cloneToNewSubDocument = function (subDocument) {
        return new LayoutDependentRun(this.startOffset, subDocument.getParagraphByPosition(this.paragraph.startLogPosition.value), new properties_bundle_1.MaskedCharacterPropertiesBundle(subDocument.documentModel.cache.maskedCharacterPropertiesCache.getItem(this.maskedCharacterProperties), subDocument.documentModel.stylesManager.getCharacterStyleByName(this.characterStyle.styleName)));
    };
    return LayoutDependentRun;
}(run_base_1.OneCharRun));
exports.LayoutDependentRun = LayoutDependentRun;
var FootNoteRun = (function (_super) {
    tslib_1.__extends(FootNoteRun, _super);
    function FootNoteRun() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FootNoteRun.prototype.getType = function () {
        return run_type_1.RunType.FootNoteRun;
    };
    FootNoteRun.prototype.clone = function () {
        return new FootNoteRun(this.startOffset, this.paragraph, new properties_bundle_1.MaskedCharacterPropertiesBundle(this.maskedCharacterProperties, this.characterStyle));
    };
    FootNoteRun.prototype.cloneToNewSubDocument = function (subDocument) {
        return new FootNoteRun(this.startOffset, subDocument.getParagraphByPosition(this.paragraph.startLogPosition.value), new properties_bundle_1.MaskedCharacterPropertiesBundle(subDocument.documentModel.cache.maskedCharacterPropertiesCache.getItem(this.maskedCharacterProperties), subDocument.documentModel.stylesManager.getCharacterStyleByName(this.characterStyle.styleName)));
    };
    return FootNoteRun;
}(run_base_1.OneCharRun));
exports.FootNoteRun = FootNoteRun;
var EndNoteRun = (function (_super) {
    tslib_1.__extends(EndNoteRun, _super);
    function EndNoteRun() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EndNoteRun.prototype.getType = function () {
        return run_type_1.RunType.EndNoteRun;
    };
    EndNoteRun.prototype.clone = function () {
        return new EndNoteRun(this.startOffset, this.paragraph, new properties_bundle_1.MaskedCharacterPropertiesBundle(this.maskedCharacterProperties, this.characterStyle));
    };
    EndNoteRun.prototype.cloneToNewSubDocument = function (subDocument) {
        return new EndNoteRun(this.startOffset, subDocument.getParagraphByPosition(this.paragraph.startLogPosition.value), new properties_bundle_1.MaskedCharacterPropertiesBundle(subDocument.documentModel.cache.maskedCharacterPropertiesCache.getItem(this.maskedCharacterProperties), subDocument.documentModel.stylesManager.getCharacterStyleByName(this.characterStyle.styleName)));
    };
    return EndNoteRun;
}(run_base_1.OneCharRun));
exports.EndNoteRun = EndNoteRun;
var NoteSeparatorRun = (function (_super) {
    tslib_1.__extends(NoteSeparatorRun, _super);
    function NoteSeparatorRun() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NoteSeparatorRun.prototype.getType = function () {
        return run_type_1.RunType.NoteSeparatorRun;
    };
    NoteSeparatorRun.prototype.clone = function () {
        return new NoteSeparatorRun(this.startOffset, this.paragraph, new properties_bundle_1.MaskedCharacterPropertiesBundle(this.maskedCharacterProperties, this.characterStyle));
    };
    NoteSeparatorRun.prototype.cloneToNewSubDocument = function (subDocument) {
        return new NoteSeparatorRun(this.startOffset, subDocument.getParagraphByPosition(this.paragraph.startLogPosition.value), new properties_bundle_1.MaskedCharacterPropertiesBundle(subDocument.documentModel.cache.maskedCharacterPropertiesCache.getItem(this.maskedCharacterProperties), subDocument.documentModel.stylesManager.getCharacterStyleByName(this.characterStyle.styleName)));
    };
    return NoteSeparatorRun;
}(run_base_1.OneCharRun));
exports.NoteSeparatorRun = NoteSeparatorRun;
var NoteContinuationSeparatorRun = (function (_super) {
    tslib_1.__extends(NoteContinuationSeparatorRun, _super);
    function NoteContinuationSeparatorRun() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NoteContinuationSeparatorRun.prototype.getType = function () {
        return run_type_1.RunType.NoteContinuationSeparatorRun;
    };
    NoteContinuationSeparatorRun.prototype.clone = function () {
        return new NoteContinuationSeparatorRun(this.startOffset, this.paragraph, new properties_bundle_1.MaskedCharacterPropertiesBundle(this.maskedCharacterProperties, this.characterStyle));
    };
    NoteContinuationSeparatorRun.prototype.cloneToNewSubDocument = function (subDocument) {
        return new NoteContinuationSeparatorRun(this.startOffset, subDocument.getParagraphByPosition(this.paragraph.startLogPosition.value), new properties_bundle_1.MaskedCharacterPropertiesBundle(subDocument.documentModel.cache.maskedCharacterPropertiesCache.getItem(this.maskedCharacterProperties), subDocument.documentModel.stylesManager.getCharacterStyleByName(this.characterStyle.styleName)));
    };
    return NoteContinuationSeparatorRun;
}(run_base_1.OneCharRun));
exports.NoteContinuationSeparatorRun = NoteContinuationSeparatorRun;
