"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var properties_bundle_1 = require("../../rich-utils/properties-bundle");
var run_base_1 = require("./run-base");
var run_type_1 = require("./run-type");
var AnchoredPictureRun = (function (_super) {
    tslib_1.__extends(AnchoredPictureRun, _super);
    function AnchoredPictureRun(startOffset, paragraph, charPropsBundle, info, objectId) {
        var _this = _super.call(this, startOffset, paragraph, charPropsBundle, info) || this;
        _this.anchoredObjectID = objectId < 0 ? run_base_1.RunBase.anchoredObjectIdCounter++ : objectId;
        return _this;
    }
    Object.defineProperty(AnchoredPictureRun.prototype, "anchorInfo", {
        get: function () { return this.info.anchorInfo; },
        set: function (val) { this.info.anchorInfo = val; },
        enumerable: true,
        configurable: true
    });
    ;
    ;
    AnchoredPictureRun.prototype.getType = function () {
        return run_type_1.RunType.AnchoredPictureRun;
    };
    AnchoredPictureRun.prototype.clone = function () {
        return new AnchoredPictureRun(this.startOffset, this.paragraph, new properties_bundle_1.MaskedCharacterPropertiesBundle(this.maskedCharacterProperties, this.characterStyle), this.info.clone(), -1);
    };
    AnchoredPictureRun.prototype.cloneToNewSubDocument = function (subDocument) {
        return new AnchoredPictureRun(this.startOffset, subDocument.getParagraphByPosition(this.paragraph.startLogPosition.value), new properties_bundle_1.MaskedCharacterPropertiesBundle(subDocument.documentModel.cache.maskedCharacterPropertiesCache.getItem(this.maskedCharacterProperties), subDocument.documentModel.stylesManager.getCharacterStyleByName(this.characterStyle.styleName)), this.info.cloneToNewSubDocument(subDocument), -1);
    };
    return AnchoredPictureRun;
}(run_base_1.PictureRun));
exports.AnchoredPictureRun = AnchoredPictureRun;
