"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var color_1 = require("@devexpress/utils/lib/utils/color");
var dx_color_1 = require("../../color/dx-color");
var color_transform_base_1 = require("./color-transform-base");
var InverseColorTransform = (function (_super) {
    tslib_1.__extends(InverseColorTransform, _super);
    function InverseColorTransform() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InverseColorTransform.prototype.clone = function () {
        return new InverseColorTransform();
    };
    InverseColorTransform.prototype.applyTransform = function (color) {
        var r = this.toIntValue(this.applyDefaultGamma(1 - (this.applyInverseDefaultGamma(this.toDoubleValue(color_1.ColorUtils.getRed(color))))));
        var g = this.toIntValue(this.applyDefaultGamma(1 - (this.applyInverseDefaultGamma(this.toDoubleValue(color_1.ColorUtils.getGreen(color))))));
        var b = this.toIntValue(this.applyDefaultGamma(1 - (this.applyInverseDefaultGamma(this.toDoubleValue(color_1.ColorUtils.getBlue(color))))));
        return dx_color_1.DXColor.fromRgb(r, g, b);
    };
    InverseColorTransform.prototype.equals = function (obj) {
        return obj &&
            obj instanceof InverseColorTransform;
    };
    return InverseColorTransform;
}(color_transform_base_1.ColorTransformBase));
exports.InverseColorTransform = InverseColorTransform;
