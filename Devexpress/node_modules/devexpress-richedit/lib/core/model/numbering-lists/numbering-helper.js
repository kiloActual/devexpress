"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fixed_1 = require("@devexpress/utils/lib/intervals/fixed");
var math_1 = require("@devexpress/utils/lib/utils/math");
var numbering_list_history_items_1 = require("../history/items/numbering-list-history-items");
var paragraph_properties_history_items_1 = require("../history/items/paragraph-properties-history-items");
var paragraph_properties_1 = require("../paragraph/paragraph-properties");
var sub_document_1 = require("../sub-document");
var numbering_list_1 = require("./numbering-list");
var NumberingHelper = (function () {
    function NumberingHelper() {
    }
    NumberingHelper.generateNewTemplateCode = function (documentModel) {
        for (;;) {
            var code = math_1.MathUtils.getRandomInt(NumberingHelper.templateCodeStart, NumberingHelper.templateCodeEnd);
            if (NumberingHelper.isNewTemplateCode(documentModel, code))
                return code;
        }
    };
    NumberingHelper.isNewTemplateCode = function (documentModel, templateCode) {
        var itemSameCode = documentModel.cache.listLevelPropertiesCache.findItemByPredicate(function (item) {
            return item.templateCode == templateCode;
        });
        return !itemSameCode;
    };
    NumberingHelper.getNumberingListTemplateIndex = function (documentModel, type) {
        for (var i = 0, abstractNumberingList; abstractNumberingList = documentModel.abstractNumberingListTemplates[i]; i++) {
            if (abstractNumberingList.getListType() === type)
                return i;
        }
        return -1;
    };
    NumberingHelper.deleteNumberingList = function (modelManager, subDocument, paragraphIndices) {
        for (var i = paragraphIndices.length - 1; i >= 0; i--) {
            var paragraphIndex = paragraphIndices[i];
            var paragraph = subDocument.paragraphs[paragraphIndex];
            if (paragraph.isInList()) {
                this.resetParagraphLeftIndent(modelManager, subDocument, paragraphIndex);
                this.deleteNumberingListCore(modelManager, subDocument, paragraphIndex);
            }
        }
    };
    NumberingHelper.resetParagraphLeftIndent = function (modelManager, subDocument, paragraphIndex) {
        var paragraph = subDocument.paragraphs[paragraphIndex];
        var numberingList = paragraph.getNumberingList();
        var level = numberingList.levels[paragraph.getListLevelIndex()];
        var paragraphMergedProperties = paragraph.getParagraphMergedProperties();
        var interval = paragraph.interval;
        var levelIndent = level.getListLevelProperties().originalLeftIndent ? level.getListLevelProperties().originalLeftIndent : level.getParagraphProperties().firstLineIndent;
        var leftIndent = paragraphMergedProperties.leftIndent - levelIndent;
        modelManager.history.addAndRedo(new paragraph_properties_history_items_1.ParagraphFirstLineIndentTypeHistoryItem(modelManager.modelManipulator, new sub_document_1.SubDocumentInterval(subDocument, interval), paragraph_properties_1.ParagraphFirstLineIndent.None, true));
        modelManager.history.addAndRedo(new paragraph_properties_history_items_1.ParagraphFirstLineIndentHistoryItem(modelManager.modelManipulator, new sub_document_1.SubDocumentInterval(subDocument, interval), 0, true));
        modelManager.history.addAndRedo(new paragraph_properties_history_items_1.ParagraphLeftIndentHistoryItem(modelManager.modelManipulator, new sub_document_1.SubDocumentInterval(subDocument, interval), Math.max(0, leftIndent), true));
    };
    NumberingHelper.deleteNumberingListCore = function (modelManager, subDocument, paragraphIndex) {
        var paragraph = subDocument.paragraphs[paragraphIndex];
        if (paragraph.numberingListIndex >= 0) {
            modelManager.history.addAndRedo(new numbering_list_history_items_1.RemoveParagraphFromListHistoryItem(modelManager.modelManipulator, subDocument, paragraphIndex));
        }
        else {
            if (paragraph.numberingListIndex === numbering_list_1.NumberingList.NumberingListNotSettedIndex)
                modelManager.history.addAndRedo(new paragraph_properties_history_items_1.ParagraphLeftIndentHistoryItem(modelManager.modelManipulator, new sub_document_1.SubDocumentInterval(subDocument, new fixed_1.FixedInterval(paragraph.startLogPosition.value, 0)), paragraph.getParagraphMergedProperties().leftIndent, true));
            modelManager.history.addAndRedo(new numbering_list_history_items_1.AddParagraphToListHistoryItem(modelManager.modelManipulator, subDocument, paragraphIndex, numbering_list_1.NumberingList.NoNumberingListIndex, 0));
        }
    };
    NumberingHelper.templateCodeStart = 0x100;
    NumberingHelper.templateCodeEnd = 0x7FFFFFFF;
    return NumberingHelper;
}());
exports.NumberingHelper = NumberingHelper;
