"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var list_1 = require("@devexpress/utils/lib/utils/list");
var names_1 = require("../names");
var field_code_parser_1 = require("./field-code-parser");
var field_code_parser_client_updating_base_1 = require("./field-code-parser-client-updating-base");
var FieldCodeParserFillIn = (function (_super) {
    tslib_1.__extends(FieldCodeParserFillIn, _super);
    function FieldCodeParserFillIn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(FieldCodeParserFillIn.prototype, "name", {
        get: function () { return names_1.FieldName.FillIn; },
        enumerable: true,
        configurable: true
    });
    FieldCodeParserFillIn.prototype.fillResult = function () {
        var _a, _b, _c;
        var switches = list_1.ListUtils.reducedMap(this.switchInfoList, function (switchInfo) {
            return switchInfo.type == field_code_parser_1.FieldSwitchType.FieldSpecific ? switchInfo : null;
        });
        var defaultPrompt = ((_a = switches[0]) === null || _a === void 0 ? void 0 : _a.name) == 'd' ? switches[0].arg : "";
        var prompt = (_c = (_b = this.parameterInfoList[0]) === null || _b === void 0 ? void 0 : _b.text) !== null && _c !== void 0 ? _c : '';
        var response = window.prompt(prompt, defaultPrompt);
        if (response) {
            this.setInputPositionState();
            this.replaceTextByInterval(this.getTopField().getResultInterval(), response);
        }
        return true;
    };
    return FieldCodeParserFillIn;
}(field_code_parser_client_updating_base_1.FieldCodeParserClientUpdatingBase));
exports.FieldCodeParserFillIn = FieldCodeParserFillIn;
