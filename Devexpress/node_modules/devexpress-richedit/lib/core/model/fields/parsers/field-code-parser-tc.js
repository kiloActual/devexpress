"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var field_1 = require("../field");
var names_1 = require("../names");
var field_code_parser_1 = require("./field-code-parser");
var field_code_parser_client_updating_base_1 = require("./field-code-parser-client-updating-base");
var FieldCodeParserTc = (function (_super) {
    tslib_1.__extends(FieldCodeParserTc, _super);
    function FieldCodeParserTc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(FieldCodeParserTc.prototype, "name", {
        get: function () { return names_1.FieldName.Tc; },
        enumerable: true,
        configurable: true
    });
    FieldCodeParserTc.prototype.fillResult = function () {
        var field = this.getTopField();
        this.updateTcInfo(field);
        return true;
    };
    FieldCodeParserTc.prototype.updateTcInfo = function (field) {
        var identifierSwitch, levelSwitch;
        for (var i = 0, switchInfo = void 0; switchInfo = this.switchInfoList[i]; i++)
            if (switchInfo.type == field_code_parser_1.FieldSwitchType.FieldSpecific) {
                switch (switchInfo.name.toLocaleUpperCase()) {
                    case "F":
                        identifierSwitch = switchInfo;
                        break;
                    case "L":
                        levelSwitch = switchInfo;
                        break;
                }
            }
        if (identifierSwitch && identifierSwitch.arg) {
            var text = !!this.parameterInfoList[0] ? this.parameterInfoList[0].text : "";
            var tcInfo = new field_1.TcInfo(identifierSwitch.arg, text, levelSwitch ? Number(levelSwitch.arg) : 1);
            field.setNewTcInfo(tcInfo);
        }
    };
    FieldCodeParserTc.prototype.needUpdateInfo = function () {
        return true;
    };
    FieldCodeParserTc.prototype.updateInfoCore = function () {
        this.updateTcInfo(this.getTopField());
    };
    return FieldCodeParserTc;
}(field_code_parser_client_updating_base_1.FieldCodeParserClientUpdatingBase));
exports.FieldCodeParserTc = FieldCodeParserTc;
