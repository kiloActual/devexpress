"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var table_border_base_1 = require("./table-border-base");
var TableCellBorders = (function (_super) {
    tslib_1.__extends(TableCellBorders, _super);
    function TableCellBorders() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableCellBorders.prototype.equals = function (obj) {
        return _super.prototype.equals.call(this, obj) &&
            this.topLeftDiagonalBorder.equals(obj.topLeftDiagonalBorder) &&
            this.topRightDiagonalBorder.equals(obj.topRightDiagonalBorder);
    };
    TableCellBorders.prototype.copyFrom = function (obj) {
        _super.prototype.copyFrom.call(this, obj);
        this.topLeftDiagonalBorder = obj.topLeftDiagonalBorder.clone();
        this.topRightDiagonalBorder = obj.topRightDiagonalBorder.clone();
    };
    TableCellBorders.prototype.clone = function () {
        var result = new TableCellBorders();
        result.copyFrom(this);
        return result;
    };
    TableCellBorders.create = function (top, right, bottom, left, topLeftDiagonal, topRightDiagonal) {
        var result = new TableCellBorders();
        result.topBorder = top;
        result.rightBorder = right;
        result.bottomBorder = bottom;
        result.leftBorder = left;
        result.topLeftDiagonalBorder = topLeftDiagonal;
        result.topRightDiagonalBorder = topRightDiagonal;
        return result;
    };
    return TableCellBorders;
}(table_border_base_1.TableBordersBase));
exports.TableCellBorders = TableCellBorders;
