"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var boundary_1 = require("@devexpress/utils/lib/intervals/boundary");
var const_1 = require("@devexpress/utils/lib/intervals/const");
var fixed_1 = require("@devexpress/utils/lib/intervals/fixed");
var comparers_1 = require("@devexpress/utils/lib/utils/comparers");
var string_1 = require("@devexpress/utils/lib/utils/string");
var bookmarks_1 = require("./bookmarks");
var RangePermission = (function (_super) {
    tslib_1.__extends(RangePermission, _super);
    function RangePermission(positionManager, interval, userName, group) {
        var _this = _super.call(this, positionManager, interval) || this;
        _this.userName = userName.toLowerCase();
        _this.group = group.toLowerCase();
        return _this;
    }
    RangePermission.prototype.isGranted = function (settings) {
        return RangePermission.allow(this.group, RangePermission.EVERYONE_GROUP_NAME) ||
            RangePermission.allow(this.userName, settings.authenticationUserName) ||
            RangePermission.allow(this.userName, settings.authenticationEMail) ||
            RangePermission.allow(this.group, settings.authenticationGroup);
    };
    RangePermission.allow = function (permissionValue, settingsValue) {
        return settingsValue != "" && permissionValue == settingsValue;
    };
    Object.defineProperty(RangePermission.prototype, "end", {
        get: function () { return this._interval.end - 1; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangePermission.prototype, "length", {
        get: function () { return this.end - this.start; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangePermission.prototype, "interval", {
        get: function () { return fixed_1.FixedInterval.fromPositions(this.start, this.end); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangePermission.prototype, "constRangePermission", {
        get: function () {
            return new ConstRangePermission(this, this.userName, this.group);
        },
        enumerable: true,
        configurable: true
    });
    RangePermission.prototype.getRangePermissionColor = function (model, documentProtection) {
        if (model.isDocumentProtectionEnabled)
            return documentProtection.rangeHighlightColor;
        var id = this.userName;
        if (!string_1.StringUtils.isNullOrEmpty(this.group))
            id += ':' + this.group;
        var color = model.colorProvider.rangePermissionColors[id];
        if (!color) {
            color = model.colorProvider.getColor();
            model.colorProvider[id] = color;
        }
        return color;
    };
    RangePermission.prototype.clone = function (positionManager) {
        return new RangePermission(positionManager, this.interval, this.userName, this.group);
    };
    RangePermission.EVERYONE_GROUP_NAME = "Everyone".toLowerCase();
    return RangePermission;
}(bookmarks_1.BookmarkBase));
exports.RangePermission = RangePermission;
var ConstRangePermission = (function (_super) {
    tslib_1.__extends(ConstRangePermission, _super);
    function ConstRangePermission(interval, userName, group) {
        var _this = _super.call(this) || this;
        _this.interval = boundary_1.BoundaryInterval.makeByConstInterval(interval);
        _this.userName = userName;
        _this.group = group;
        return _this;
    }
    Object.defineProperty(ConstRangePermission.prototype, "start", {
        get: function () { return this.interval.start; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ConstRangePermission.prototype, "length", {
        get: function () { return this.interval.length; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ConstRangePermission.prototype, "end", {
        get: function () { return this.interval.end; },
        enumerable: true,
        configurable: true
    });
    ConstRangePermission.prototype.equals = function (obj) {
        return obj && this.userName == obj.userName && this.group == obj.group && this.interval.equals(obj.interval);
    };
    ConstRangePermission.comparer = function (a, b) {
        var diff = a.start - b.start;
        return diff == 0 ? (a.userName != b.userName ? comparers_1.Comparers.string(a.userName, b.userName) : comparers_1.Comparers.string(a.group, b.group)) : diff;
    };
    return ConstRangePermission;
}(const_1.ConstInterval));
exports.ConstRangePermission = ConstRangePermission;
