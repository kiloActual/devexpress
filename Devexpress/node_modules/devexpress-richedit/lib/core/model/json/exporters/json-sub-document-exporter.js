"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var common_1 = require("@devexpress/utils/lib/utils/common");
var json_field_enums_1 = require("../enums/json-field-enums");
var json_paragraph_enums_1 = require("../enums/json-paragraph-enums");
var json_run_enums_1 = require("../enums/json-run-enums");
var json_sub_document_enums_1 = require("../enums/json-sub-document-enums");
var json_tab_converter_1 = require("../importers/json-tab-converter");
var json_table_exporter_1 = require("./json-table-exporter");
var JSONSubDocumentExporter = (function () {
    function JSONSubDocumentExporter() {
    }
    JSONSubDocumentExporter.exportSubDocument = function (subDocument, content) {
        json_table_exporter_1.JSONTableExporter.exportTables(subDocument, content[json_sub_document_enums_1.JSONEnumLoadPieceTable.Tables] = []);
        JSONSubDocumentExporter.exportFields(subDocument, content[json_sub_document_enums_1.JSONEnumLoadPieceTable.Fields] = []);
        JSONSubDocumentExporter.exportBookmarks(subDocument, content[json_sub_document_enums_1.JSONEnumLoadPieceTable.Bookmarks] = []);
        JSONSubDocumentExporter.exportParagraphs(subDocument, content[json_sub_document_enums_1.JSONEnumLoadPieceTable.Paragraphs] = []);
        JSONSubDocumentExporter.exportChunks(subDocument, content[json_sub_document_enums_1.JSONEnumLoadPieceTable.Chunks] = []);
        JSONSubDocumentExporter.exportRangePermissions(subDocument, content[json_sub_document_enums_1.JSONEnumLoadPieceTable.RangePermissions] = []);
    };
    JSONSubDocumentExporter.exportFields = function (subDocument, jsonFields) {
        for (var _i = 0, _a = subDocument.fields; _i < _a.length; _i++) {
            var field = _a[_i];
            var jsonField = {};
            jsonField[json_field_enums_1.JSONFieldProperty.StartPos] = field.getAllFieldInterval().start;
            jsonField[json_field_enums_1.JSONFieldProperty.SeparatorPos] = field.getSeparatorPosition();
            jsonField[json_field_enums_1.JSONFieldProperty.EndPos] = field.getAllFieldInterval().end;
            if (field.getHyperlinkInfo()) {
                jsonField[json_field_enums_1.JSONFieldProperty.Uri] = field.getHyperlinkInfo().uri;
                jsonField[json_field_enums_1.JSONFieldProperty.Anchor] = field.getHyperlinkInfo().anchor;
                jsonField[json_field_enums_1.JSONFieldProperty.Tip] = field.getHyperlinkInfo().tip;
                jsonField[json_field_enums_1.JSONFieldProperty.Visited] = common_1.boolToInt(field.getHyperlinkInfo().visited);
            }
            else
                jsonField[json_field_enums_1.JSONFieldProperty.NoInfo] = 1;
            jsonFields.push(jsonField);
        }
    };
    JSONSubDocumentExporter.exportBookmarks = function (subDocument, jsonBookmarks) {
        for (var _i = 0, _a = subDocument.bookmarks; _i < _a.length; _i++) {
            var bookmark = _a[_i];
            var jsonBookmark = {};
            jsonBookmark[json_sub_document_enums_1.JSONBookmarkProperty.StartPos] = bookmark.start;
            jsonBookmark[json_sub_document_enums_1.JSONBookmarkProperty.Length] = bookmark.interval.length;
            jsonBookmark[json_sub_document_enums_1.JSONBookmarkProperty.Name] = bookmark.name;
            jsonBookmarks.push(jsonBookmark);
        }
    };
    JSONSubDocumentExporter.exportParagraphs = function (subDocument, jsonParagraphs) {
        var paragraphs = subDocument.paragraphs;
        var parStyles = subDocument.documentModel.paragraphStyles;
        var maskedParagraphPropertiesCache = subDocument.documentModel.cache.maskedParagraphPropertiesCache;
        for (var _i = 0, paragraphs_1 = paragraphs; _i < paragraphs_1.length; _i++) {
            var modelParagraph = paragraphs_1[_i];
            var jsonParagraph = {};
            var maskedParagraphPropertiesIndex = maskedParagraphPropertiesCache.indexOf(modelParagraph.maskedParagraphProperties);
            jsonParagraph[json_paragraph_enums_1.JSONParagraphProperty.MaskedParagraphPropertiesIndex] = maskedParagraphPropertiesIndex;
            jsonParagraph[json_paragraph_enums_1.JSONParagraphProperty.ParagraphStyleIndex] = parStyles.indexOf(modelParagraph.paragraphStyle);
            jsonParagraph[json_paragraph_enums_1.JSONParagraphProperty.LogPosition] = modelParagraph.startLogPosition.value;
            jsonParagraph[json_paragraph_enums_1.JSONParagraphProperty.Length] = modelParagraph.length;
            jsonParagraph[json_paragraph_enums_1.JSONParagraphProperty.Tabs] = json_tab_converter_1.JSONTabConverter.convertFromTabPropertiesToJSON(modelParagraph.tabs);
            jsonParagraph[json_paragraph_enums_1.JSONParagraphProperty.ListIndex] = modelParagraph.numberingListIndex;
            jsonParagraph[json_paragraph_enums_1.JSONParagraphProperty.ListLevelIndex] = modelParagraph.listLevelIndex;
            jsonParagraphs.push(jsonParagraph);
        }
    };
    JSONSubDocumentExporter.exportChunks = function (subDocument, jsonChunks) {
        var chunks = subDocument.chunks;
        var characterStyles = subDocument.documentModel.characterStyles;
        var maskedCharacterPropertiesCache = subDocument.documentModel.cache.maskedCharacterPropertiesCache;
        for (var _i = 0, chunks_1 = chunks; _i < chunks_1.length; _i++) {
            var chunk = chunks_1[_i];
            var jsonChunk = {};
            jsonChunk[json_sub_document_enums_1.JSONChunkProperty.StartPos] = chunk.startLogPosition.value;
            jsonChunk[json_sub_document_enums_1.JSONChunkProperty.TextBuffer] = chunk.textBuffer;
            jsonChunk[json_sub_document_enums_1.JSONChunkProperty.IsLast] = common_1.boolToInt(chunk.isLast);
            var jsonRuns = [];
            for (var _a = 0, _b = chunk.textRuns; _a < _b.length; _a++) {
                var run = _b[_a];
                var jsonRun = {};
                var maskedCharacterPropertiesIndex = maskedCharacterPropertiesCache.indexOf(run.maskedCharacterProperties);
                jsonRun[json_run_enums_1.JSONRunBaseProperty.MaskedCharacterPropertiesCacheIndex] = maskedCharacterPropertiesIndex;
                jsonRun[json_run_enums_1.JSONRunBaseProperty.Type] = run.getType();
                jsonRun[json_run_enums_1.JSONRunBaseProperty.Offset] = run.startOffset;
                jsonRun[json_run_enums_1.JSONRunBaseProperty.Length] = run.getLength();
                jsonRun[json_run_enums_1.JSONRunBaseProperty.CharacterStyleIndex] = characterStyles.indexOf(run.characterStyle);
                jsonRuns.push(jsonRun);
            }
            jsonChunk[json_sub_document_enums_1.JSONChunkProperty.Runs] = jsonRuns;
            jsonChunks.push(jsonChunk);
        }
    };
    JSONSubDocumentExporter.exportRangePermissions = function (subDocument, jsonRangePermissions) {
        for (var _i = 0, _a = subDocument.availableRangePermissions; _i < _a.length; _i++) {
            var rangePermission = _a[_i];
            var jsonRangePermission = {};
            jsonRangePermission[json_sub_document_enums_1.JSONRangePermissionProperty.Start] = rangePermission.start;
            jsonRangePermission[json_sub_document_enums_1.JSONRangePermissionProperty.Length] = rangePermission.interval.length;
            jsonRangePermission[json_sub_document_enums_1.JSONRangePermissionProperty.UserName] = rangePermission.userName;
            jsonRangePermission[json_sub_document_enums_1.JSONRangePermissionProperty.Group] = rangePermission.group;
            jsonRangePermissions.push(jsonRangePermission);
        }
    };
    return JSONSubDocumentExporter;
}());
exports.JSONSubDocumentExporter = JSONSubDocumentExporter;
