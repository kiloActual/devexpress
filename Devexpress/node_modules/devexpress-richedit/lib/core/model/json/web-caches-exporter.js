"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var errors_1 = require("@devexpress/utils/lib/errors");
var number_1 = require("@devexpress/utils/lib/utils/map/number");
var enums_1 = require("../enums");
var sub_document_infos_1 = require("../sub-document-infos");
var json_sub_document_enums_1 = require("./enums/json-sub-document-enums");
var json_top_level_enums_1 = require("./enums/json-top-level-enums");
var json_sub_document_exporter_1 = require("./exporters/json-sub-document-exporter");
var json_color_model_info_converter_1 = require("./importers/json-color-model-info-converter");
var json_font_info_converter_1 = require("./importers/json-font-info-converter");
var json_masked_character_properties_converter_1 = require("./importers/json-masked-character-properties-converter");
var json_masked_paragraph_properties_converter_1 = require("./importers/json-masked-paragraph-properties-converter");
var json_shading_info_converter_1 = require("./importers/json-shading-info-converter");
var json_list_level_properties_converter_1 = require("./importers/numbering-list/json-list-level-properties-converter");
var json_sub_document_importer_1 = require("./importers/sub-document/json-sub-document-importer");
var json_table_cell_properties_converter_1 = require("./importers/table/json-table-cell-properties-converter");
var json_table_row_properties_converter_1 = require("./importers/table/json-table-row-properties-converter");
var WebCachesExporter = (function () {
    function WebCachesExporter(cache, caches, documentModel) {
        this.documentModel = documentModel;
        this.cache = cache;
        var fontInfoCache = caches[json_top_level_enums_1.JSONCachesDataProperty.FontInfoCache];
        var charPropsCache = caches[json_top_level_enums_1.JSONCachesDataProperty.CharacterPropertiesCache];
        var parPropsCache = caches[json_top_level_enums_1.JSONCachesDataProperty.ParagraphPropertiesCache];
        var listLevelPropsCache = caches[json_top_level_enums_1.JSONCachesDataProperty.ListLevelPropertiesCache];
        var tableRowPropsCache = caches[json_top_level_enums_1.JSONCachesDataProperty.TableRowPropertiesCache];
        var tableCellPropsCache = caches[json_top_level_enums_1.JSONCachesDataProperty.TableCellPropertiesCache];
        var colorModelInfoCache = caches[json_top_level_enums_1.JSONCachesDataProperty.ColorModelInfoCache];
        var shadingInfoCache = caches[json_top_level_enums_1.JSONCachesDataProperty.ShadingInfoCache];
        if (fontInfoCache)
            cache.fontInfoCache.merge(fontInfoCache, json_font_info_converter_1.JSONFontInfoConverter.convertFromJSON);
        if (colorModelInfoCache)
            cache.colorModelInfoCache.merge(colorModelInfoCache, json_color_model_info_converter_1.JSONColorModelInfoConverter.convertFromJSON);
        if (shadingInfoCache)
            cache.shadingInfoCache.merge(shadingInfoCache, function (obj) { return json_shading_info_converter_1.JSONShadingInfoConverter.convertFromJSON(obj, cache.colorModelInfoCache); });
        if (charPropsCache)
            cache.maskedCharacterPropertiesCache.merge(charPropsCache, function (property) { return json_masked_character_properties_converter_1.JSONMaskedCharacterPropertiesConverter.convertFromJSON(property, cache.colorModelInfoCache, cache.shadingInfoCache, cache.fontInfoCache); });
        if (parPropsCache)
            cache.maskedParagraphPropertiesCache.merge(parPropsCache, function (property) { return json_masked_paragraph_properties_converter_1.JSONMaskedParagraphPropertiesConverter.convertFromJSON(property, cache.colorModelInfoCache, cache.shadingInfoCache); });
        if (listLevelPropsCache)
            cache.listLevelPropertiesCache.merge(listLevelPropsCache, json_list_level_properties_converter_1.JSONListLevelPropertiesConverter.convertFromJSON);
        if (tableRowPropsCache)
            cache.tableRowPropertiesCache.merge(tableRowPropsCache, json_table_row_properties_converter_1.JSONTableRowPropertiesConverter.convertFromJSON);
        if (tableCellPropsCache)
            cache.tableCellPropertiesCache.merge(tableCellPropsCache, function (property) { return json_table_cell_properties_converter_1.JSONTableCellPropertiesConverter.convertFromJSON(property, cache.colorModelInfoCache, cache.shadingInfoCache); });
        this.jsonSubDocs = caches[json_top_level_enums_1.JSONCachesDataProperty.SubDocuments];
    }
    WebCachesExporter.prototype.importSubDocuments = function (documentProtectionSettings, imageCorrespondence) {
        var _this = this;
        number_1.NumberMapUtils.forEach(this.jsonSubDocs, function (jsonSubDoc, subDocumentId) {
            var subDocType = jsonSubDoc[json_sub_document_enums_1.JSONPieceTableInfo.Type];
            var info;
            switch (subDocType) {
                case enums_1.SubDocumentInfoType.Header:
                    info = WebCachesExporter.getInfoBySubDocumentId(_this.documentModel.headers, subDocumentId);
                    break;
                case enums_1.SubDocumentInfoType.Footer:
                    info = WebCachesExporter.getInfoBySubDocumentId(_this.documentModel.footers, subDocumentId);
                    break;
                case enums_1.SubDocumentInfoType.Main:
                    info = sub_document_infos_1.SubDocumentInfoBase.create(subDocType, subDocumentId, -1);
                    break;
                case enums_1.SubDocumentInfoType.TextBox:
                    info = sub_document_infos_1.SubDocumentInfoBase.create(subDocType, subDocumentId, jsonSubDoc[json_sub_document_enums_1.JSONPieceTableInfo.ParentPieceTableId]);
                    break;
                default:
                    throw new Error("Unknown subDocumentType");
            }
            var subDocument = info.isMain ? _this.documentModel.mainSubDocument : _this.documentModel.importSubDocument(info);
            var jsonSubDocStructures = jsonSubDoc[json_sub_document_enums_1.JSONPieceTableInfo.Info];
            json_sub_document_importer_1.JSONSubDocumentImporter.importSubDocument(subDocument, documentProtectionSettings, jsonSubDocStructures, imageCorrespondence);
        });
    };
    WebCachesExporter.prototype.exportSubDocuments = function () {
        var subDocuments = this.documentModel.subDocuments;
        var jsonSubDocuments = [];
        number_1.NumberMapUtils.forEach(subDocuments, function (subDocument) {
            var jsonSubDocument = [];
            json_sub_document_exporter_1.JSONSubDocumentExporter.exportSubDocument(subDocument, jsonSubDocument);
            jsonSubDocuments.push(jsonSubDocument);
        });
        return jsonSubDocuments;
    };
    WebCachesExporter.getInfoBySubDocumentId = function (infos, subDocumentId) {
        for (var _i = 0, infos_1 = infos; _i < infos_1.length; _i++) {
            var info = infos_1[_i];
            if (info.subDocumentId === subDocumentId)
                return info;
        }
        throw new Error(errors_1.Errors.InternalException);
    };
    WebCachesExporter.prototype.dispose = function () {
        this.cache.clearTemporaryCaches();
    };
    return WebCachesExporter;
}());
exports.WebCachesExporter = WebCachesExporter;
