"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var point_1 = require("@devexpress/utils/lib/geometry/point");
var common_1 = require("@devexpress/utils/lib/utils/common");
var anchor_info_1 = require("../../../floating-objects/anchor-info");
var json_floating_enums_1 = require("../../enums/json-floating-enums");
var JSONAnchorInfoConverter = (function () {
    function JSONAnchorInfoConverter() {
    }
    JSONAnchorInfoConverter.convertFromJSON = function (obj) {
        var result = new anchor_info_1.AnchorInfo();
        result.allowOverlap = !!obj[json_floating_enums_1.JSONAnchorInfoProperty.AllowOverlap];
        result.hidden = !!obj[json_floating_enums_1.JSONAnchorInfoProperty.Hidden];
        result.layoutTableCell = !!obj[json_floating_enums_1.JSONAnchorInfoProperty.LayoutTableCell];
        result.locked = !!obj[json_floating_enums_1.JSONAnchorInfoProperty.Locked];
        result.isBehindDoc = !!obj[json_floating_enums_1.JSONAnchorInfoProperty.IsBehindDoc];
        result.leftDistance = obj[json_floating_enums_1.JSONAnchorInfoProperty.LeftDistance];
        result.rightDistance = obj[json_floating_enums_1.JSONAnchorInfoProperty.RightDistance];
        result.topDistance = obj[json_floating_enums_1.JSONAnchorInfoProperty.TopDistance];
        result.bottomDistance = obj[json_floating_enums_1.JSONAnchorInfoProperty.BottomDistance];
        result.zOrder = obj[json_floating_enums_1.JSONAnchorInfoProperty.ZOrder];
        result.wrapType = obj[json_floating_enums_1.JSONAnchorInfoProperty.WrapType];
        result.wrapSide = obj[json_floating_enums_1.JSONAnchorInfoProperty.WrapSide];
        result.horizontalPositionType = obj[json_floating_enums_1.JSONAnchorInfoProperty.HorizontalPositionType];
        result.horizontalPositionAlignment = obj[json_floating_enums_1.JSONAnchorInfoProperty.HorizontalPositionAlignment];
        result.verticalPositionType = obj[json_floating_enums_1.JSONAnchorInfoProperty.VerticalPositionType];
        result.verticalPositionAlignment = obj[json_floating_enums_1.JSONAnchorInfoProperty.VerticalPositionAlignment];
        result.offset = new point_1.Point(obj[json_floating_enums_1.JSONAnchorInfoProperty.OffsetX], obj[json_floating_enums_1.JSONAnchorInfoProperty.OffsetY]);
        result.percentOffset = new point_1.Point(obj[json_floating_enums_1.JSONAnchorInfoProperty.PercentOffsetX], obj[json_floating_enums_1.JSONAnchorInfoProperty.PercentOffsetY]);
        return result;
    };
    JSONAnchorInfoConverter.convertToJSON = function (source) {
        var result = {};
        result[json_floating_enums_1.JSONAnchorInfoProperty.AllowOverlap] = common_1.boolToInt(source.allowOverlap);
        result[json_floating_enums_1.JSONAnchorInfoProperty.Hidden] = common_1.boolToInt(source.hidden);
        result[json_floating_enums_1.JSONAnchorInfoProperty.LayoutTableCell] = common_1.boolToInt(source.layoutTableCell);
        result[json_floating_enums_1.JSONAnchorInfoProperty.Locked] = common_1.boolToInt(source.locked);
        result[json_floating_enums_1.JSONAnchorInfoProperty.IsBehindDoc] = common_1.boolToInt(source.isBehindDoc);
        result[json_floating_enums_1.JSONAnchorInfoProperty.LeftDistance] = source.leftDistance;
        result[json_floating_enums_1.JSONAnchorInfoProperty.RightDistance] = source.rightDistance;
        result[json_floating_enums_1.JSONAnchorInfoProperty.TopDistance] = source.topDistance;
        result[json_floating_enums_1.JSONAnchorInfoProperty.BottomDistance] = source.bottomDistance;
        result[json_floating_enums_1.JSONAnchorInfoProperty.ZOrder] = source.zOrder;
        result[json_floating_enums_1.JSONAnchorInfoProperty.WrapType] = source.wrapType;
        result[json_floating_enums_1.JSONAnchorInfoProperty.WrapSide] = source.wrapSide;
        result[json_floating_enums_1.JSONAnchorInfoProperty.HorizontalPositionType] = source.horizontalPositionType;
        result[json_floating_enums_1.JSONAnchorInfoProperty.HorizontalPositionAlignment] = source.horizontalPositionAlignment;
        result[json_floating_enums_1.JSONAnchorInfoProperty.VerticalPositionType] = source.verticalPositionType;
        result[json_floating_enums_1.JSONAnchorInfoProperty.VerticalPositionAlignment] = source.verticalPositionAlignment;
        result[json_floating_enums_1.JSONAnchorInfoProperty.OffsetX] = source.offset.x;
        result[json_floating_enums_1.JSONAnchorInfoProperty.OffsetY] = source.offset.y;
        result[json_floating_enums_1.JSONAnchorInfoProperty.PercentOffsetX] = source.percentOffset.x;
        result[json_floating_enums_1.JSONAnchorInfoProperty.PercentOffsetY] = source.percentOffset.y;
        return result;
    };
    return JSONAnchorInfoConverter;
}());
exports.JSONAnchorInfoConverter = JSONAnchorInfoConverter;
