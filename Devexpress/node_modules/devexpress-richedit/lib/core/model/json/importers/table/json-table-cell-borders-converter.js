"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var table_cell_borders_1 = require("../../../borders/table-cell-borders");
var json_table_structures_enums_1 = require("../../enums/table/json-table-structures-enums");
var json_border_info_converter_1 = require("../json-border-info-converter");
var JSONTableCellBordersConverter = (function () {
    function JSONTableCellBordersConverter() {
    }
    JSONTableCellBordersConverter.convertFromJSON = function (obj, colorModelInfoCache) {
        var result = new table_cell_borders_1.TableCellBorders();
        result.topBorder = json_border_info_converter_1.JSONBorderInfoConverter.convertFromJSON(obj[json_table_structures_enums_1.JSONTableCellBordersProperty.TopBorder], colorModelInfoCache);
        result.leftBorder = json_border_info_converter_1.JSONBorderInfoConverter.convertFromJSON(obj[json_table_structures_enums_1.JSONTableCellBordersProperty.LeftBorder], colorModelInfoCache);
        result.rightBorder = json_border_info_converter_1.JSONBorderInfoConverter.convertFromJSON(obj[json_table_structures_enums_1.JSONTableCellBordersProperty.RightBorder], colorModelInfoCache);
        result.bottomBorder = json_border_info_converter_1.JSONBorderInfoConverter.convertFromJSON(obj[json_table_structures_enums_1.JSONTableCellBordersProperty.BottomBorder], colorModelInfoCache);
        result.topLeftDiagonalBorder = json_border_info_converter_1.JSONBorderInfoConverter.convertFromJSON(obj[json_table_structures_enums_1.JSONTableCellBordersProperty.TopLeftDiagonalBorder], colorModelInfoCache);
        result.topRightDiagonalBorder = json_border_info_converter_1.JSONBorderInfoConverter.convertFromJSON(obj[json_table_structures_enums_1.JSONTableCellBordersProperty.TopRightDiagonalBorder], colorModelInfoCache);
        return result;
    };
    JSONTableCellBordersConverter.convertToJSON = function (source) {
        var result = {};
        result[json_table_structures_enums_1.JSONTableCellBordersProperty.TopBorder] = json_border_info_converter_1.JSONBorderInfoConverter.convertToJSON(source.topBorder);
        result[json_table_structures_enums_1.JSONTableCellBordersProperty.LeftBorder] = json_border_info_converter_1.JSONBorderInfoConverter.convertToJSON(source.leftBorder);
        result[json_table_structures_enums_1.JSONTableCellBordersProperty.RightBorder] = json_border_info_converter_1.JSONBorderInfoConverter.convertToJSON(source.rightBorder);
        result[json_table_structures_enums_1.JSONTableCellBordersProperty.BottomBorder] = json_border_info_converter_1.JSONBorderInfoConverter.convertToJSON(source.bottomBorder);
        result[json_table_structures_enums_1.JSONTableCellBordersProperty.TopLeftDiagonalBorder] = json_border_info_converter_1.JSONBorderInfoConverter.convertToJSON(source.topLeftDiagonalBorder);
        result[json_table_structures_enums_1.JSONTableCellBordersProperty.TopRightDiagonalBorder] = json_border_info_converter_1.JSONBorderInfoConverter.convertToJSON(source.topRightDiagonalBorder);
        return result;
    };
    return JSONTableCellBordersConverter;
}());
exports.JSONTableCellBordersConverter = JSONTableCellBordersConverter;
