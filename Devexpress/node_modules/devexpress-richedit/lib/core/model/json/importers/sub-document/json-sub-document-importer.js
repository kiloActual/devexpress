"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
var fixed_1 = require("@devexpress/utils/lib/intervals/fixed");
var list_1 = require("@devexpress/utils/lib/utils/list");
var number_1 = require("@devexpress/utils/lib/utils/map/number");
var search_1 = require("@devexpress/utils/lib/utils/search");
var bookmarks_1 = require("../../../bookmarks");
var chunk_1 = require("../../../chunk");
var field_1 = require("../../../fields/field");
var paragraph_1 = require("../../../paragraph/paragraph");
var range_permissions_1 = require("../../../range-permissions");
var run_type_1 = require("../../../runs/run-type");
var simple_runs_1 = require("../../../runs/simple-runs");
var json_field_enums_1 = require("../../enums/json-field-enums");
var json_paragraph_enums_1 = require("../../enums/json-paragraph-enums");
var json_run_enums_1 = require("../../enums/json-run-enums");
var json_sub_document_enums_1 = require("../../enums/json-sub-document-enums");
var json_tab_converter_1 = require("../json-tab-converter");
var json_table_importer_1 = require("../table/json-table-importer");
var run_importers_1 = require("./run-importers");
var JSONSubDocumentImporter = (function () {
    function JSONSubDocumentImporter() {
    }
    JSONSubDocumentImporter.importSubDocument = function (subDocument, documentProtectionSettings, content, imageCorrespondence) {
        json_table_importer_1.JSONTableImporter.importTables(subDocument, content[json_sub_document_enums_1.JSONEnumLoadPieceTable.Tables]);
        JSONSubDocumentImporter.importFields(subDocument, content[json_sub_document_enums_1.JSONEnumLoadPieceTable.Fields]);
        JSONSubDocumentImporter.importBookmarks(subDocument, content[json_sub_document_enums_1.JSONEnumLoadPieceTable.Bookmarks]);
        JSONSubDocumentImporter.importParagraphs(subDocument, content[json_sub_document_enums_1.JSONEnumLoadPieceTable.Paragraphs]);
        JSONSubDocumentImporter.importChunks(subDocument, content[json_sub_document_enums_1.JSONEnumLoadPieceTable.Chunks], imageCorrespondence);
        JSONSubDocumentImporter.importRangePermissions(subDocument, documentProtectionSettings, content[json_sub_document_enums_1.JSONEnumLoadPieceTable.RangePermissions]);
    };
    JSONSubDocumentImporter.importFields = function (subDocument, jsonFields) {
        if (!jsonFields)
            return;
        for (var fieldIndex = 0, jsonField; jsonField = jsonFields[fieldIndex]; fieldIndex++) {
            var hyperlinkInfo = undefined;
            var uri = jsonField[json_field_enums_1.JSONFieldProperty.Uri];
            var anchor = jsonField[json_field_enums_1.JSONFieldProperty.Anchor];
            if (uri !== undefined || anchor !== undefined)
                hyperlinkInfo = new field_1.HyperlinkInfo(uri, anchor, jsonField[json_field_enums_1.JSONFieldProperty.Tip], !!jsonField[json_field_enums_1.JSONFieldProperty.Visited]);
            subDocument.fields.push(new field_1.Field(subDocument.positionManager, fieldIndex, jsonField[json_field_enums_1.JSONFieldProperty.StartPos], jsonField[json_field_enums_1.JSONFieldProperty.SeparatorPos], jsonField[json_field_enums_1.JSONFieldProperty.EndPos], false, hyperlinkInfo));
        }
        subDocument.fields.sort(function (a, b) { return a.getCodeStartPosition() - b.getCodeStartPosition(); });
        for (var fieldIndex = 0, field; field = subDocument.fields[fieldIndex]; fieldIndex++) {
            field.index = fieldIndex;
            field.initParent(subDocument.fields);
        }
    };
    JSONSubDocumentImporter.importBookmarks = function (subDocument, content) {
        if (!content)
            return;
        list_1.ListUtils.forEach(content, function (jsonBookmark) {
            var start = parseInt(jsonBookmark[json_sub_document_enums_1.JSONBookmarkProperty.StartPos]);
            var len = parseInt(jsonBookmark[json_sub_document_enums_1.JSONBookmarkProperty.Length]);
            var name = jsonBookmark[json_sub_document_enums_1.JSONBookmarkProperty.Name];
            subDocument.bookmarks.push(new bookmarks_1.Bookmark(subDocument.positionManager, new fixed_1.FixedInterval(start, len), name));
        });
        subDocument.bookmarks = subDocument.bookmarks.sort(bookmarks_1.ConstBookmark.comparer);
    };
    JSONSubDocumentImporter.importRangePermissions = function (subDocument, documentProtectionSettings, content) {
        if (!content)
            return;
        subDocument.availableRangePermissions = !subDocument.documentModel.isDocumentProtectionEnabled ?
            [] :
            list_1.ListUtils.reducedMap(content, function (jsonRangePermissions) {
                var start = parseInt(jsonRangePermissions[json_sub_document_enums_1.JSONRangePermissionProperty.Start]);
                var len = parseInt(jsonRangePermissions[json_sub_document_enums_1.JSONRangePermissionProperty.Length]) + 1;
                var rangePermission = new range_permissions_1.RangePermission(subDocument.positionManager, new fixed_1.FixedInterval(start, len), jsonRangePermissions[json_sub_document_enums_1.JSONRangePermissionProperty.UserName], jsonRangePermissions[json_sub_document_enums_1.JSONRangePermissionProperty.Group]);
                return rangePermission.isGranted(documentProtectionSettings) ? rangePermission : null;
            });
    };
    JSONSubDocumentImporter.importParagraphs = function (subDocument, jsonParagraphs) {
        if (!jsonParagraphs)
            return;
        var paragraphs = subDocument.paragraphs;
        var parStyles = subDocument.documentModel.paragraphStyles;
        var positionManager = subDocument.positionManager;
        for (var _i = 0, jsonParagraphs_1 = jsonParagraphs; _i < jsonParagraphs_1.length; _i++) {
            var jsonParagraph = jsonParagraphs_1[_i];
            var paragraph = new paragraph_1.Paragraph(subDocument, positionManager.registerPosition(jsonParagraph[json_paragraph_enums_1.JSONParagraphProperty.LogPosition]), jsonParagraph[json_paragraph_enums_1.JSONParagraphProperty.Length], parStyles[jsonParagraph[json_paragraph_enums_1.JSONParagraphProperty.ParagraphStyleIndex]], null, jsonParagraph[json_paragraph_enums_1.JSONParagraphProperty.MaskedParagraphPropertiesIndex]);
            paragraph.numberingListIndex = jsonParagraph[json_paragraph_enums_1.JSONParagraphProperty.ListIndex];
            paragraph.listLevelIndex = jsonParagraph[json_paragraph_enums_1.JSONParagraphProperty.ListLevelIndex];
            paragraph.tabs.setTabs(json_tab_converter_1.JSONTabConverter.convertFromJSONToTabProperties(jsonParagraph[json_paragraph_enums_1.JSONParagraphProperty.Tabs]));
            paragraphs.push(paragraph);
        }
    };
    JSONSubDocumentImporter.importChunks = function (subDocument, jsonChunks, imageCorrespondence) {
        if (!jsonChunks)
            return;
        var charStyles = subDocument.documentModel.characterStyles;
        var imageCache = subDocument.documentModel.cache.imageCache;
        var maskedCharacterPropertiesCache = subDocument.documentModel.cache.maskedCharacterPropertiesCache;
        number_1.NumberMapUtils.forEach(JSONSubDocumentImporter.runTypeToRunImporter, function (run) {
            return run.init(maskedCharacterPropertiesCache, charStyles, imageCache, imageCorrespondence);
        });
        var chunks = subDocument.chunks;
        var paragraphs = subDocument.paragraphs;
        var firstChunkPosition = jsonChunks[0][json_sub_document_enums_1.JSONChunkProperty.StartPos];
        var currParagraphIndex = search_1.SearchUtils.normedInterpolationIndexOf(paragraphs, function (p) { return p.startLogPosition.value; }, firstChunkPosition);
        var currParagraph = paragraphs[currParagraphIndex];
        var currParagraphEndPos = currParagraph.getEndPosition();
        for (var _i = 0, jsonChunks_1 = jsonChunks; _i < jsonChunks_1.length; _i++) {
            var jsonChunk = jsonChunks_1[_i];
            var currChunkPosition = jsonChunk[json_sub_document_enums_1.JSONChunkProperty.StartPos];
            var chunk = new chunk_1.Chunk(subDocument.positionManager.registerPosition(currChunkPosition), jsonChunk[json_sub_document_enums_1.JSONChunkProperty.TextBuffer], !!jsonChunk[json_sub_document_enums_1.JSONChunkProperty.IsLast]);
            chunks.push(chunk);
            for (var _a = 0, _b = jsonChunk[json_sub_document_enums_1.JSONChunkProperty.Runs]; _a < _b.length; _a++) {
                var jsonRun = _b[_a];
                var runOffset = jsonRun[json_run_enums_1.JSONRunBaseProperty.Offset];
                if (currChunkPosition + runOffset >= currParagraphEndPos) {
                    currParagraph = paragraphs[++currParagraphIndex];
                    currParagraphEndPos = currParagraph.getEndPosition();
                }
                chunk.textRuns.push(JSONSubDocumentImporter.runTypeToRunImporter[jsonRun[json_run_enums_1.JSONRunBaseProperty.Type]]
                    .getRun(currParagraph, runOffset, jsonRun));
            }
        }
    };
    JSONSubDocumentImporter.runTypeToRunImporter = (_a = {},
        _a[run_type_1.RunType.TextRun] = new run_importers_1.TextRunImporter(),
        _a[run_type_1.RunType.ParagraphRun] = new run_importers_1.SimpleRunImporter(simple_runs_1.ParagraphRun),
        _a[run_type_1.RunType.SectionRun] = new run_importers_1.SimpleRunImporter(simple_runs_1.SectionRun),
        _a[run_type_1.RunType.FieldCodeStartRun] = new run_importers_1.SimpleRunImporter(simple_runs_1.FieldCodeStartRun),
        _a[run_type_1.RunType.FieldCodeEndRun] = new run_importers_1.SimpleRunImporter(simple_runs_1.FieldCodeEndRun),
        _a[run_type_1.RunType.FieldResultEndRun] = new run_importers_1.SimpleRunImporter(simple_runs_1.FieldResultEndRun),
        _a[run_type_1.RunType.AnchoredPictureRun] = new run_importers_1.AnchoredPictureRunImporter(),
        _a[run_type_1.RunType.AnchoredTextBoxRun] = new run_importers_1.AnchoredTextBoxRunImporter(),
        _a[run_type_1.RunType.InlinePictureRun] = new run_importers_1.InlinePictureRunImporter(),
        _a[run_type_1.RunType.InlineTextBoxRun] = new run_importers_1.InlineTextBoxRunImporter(),
        _a[run_type_1.RunType.LayoutDependentRun] = new run_importers_1.SimpleRunImporter(simple_runs_1.LayoutDependentRun),
        _a[run_type_1.RunType.FootNoteRun] = new run_importers_1.SimpleRunImporter(simple_runs_1.FootNoteRun),
        _a[run_type_1.RunType.EndNoteRun] = new run_importers_1.SimpleRunImporter(simple_runs_1.EndNoteRun),
        _a[run_type_1.RunType.NoteSeparatorRun] = new run_importers_1.SimpleRunImporter(simple_runs_1.NoteSeparatorRun),
        _a[run_type_1.RunType.NoteContinuationSeparatorRun] = new run_importers_1.SimpleRunImporter(simple_runs_1.NoteContinuationSeparatorRun),
        _a);
    return JSONSubDocumentImporter;
}());
exports.JSONSubDocumentImporter = JSONSubDocumentImporter;
