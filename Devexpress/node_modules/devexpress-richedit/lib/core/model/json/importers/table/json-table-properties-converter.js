"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var common_1 = require("@devexpress/utils/lib/utils/common");
var table_properties_1 = require("../../../tables/properties/table-properties");
var json_table_enums_1 = require("../../enums/table/json-table-enums");
var json_shading_info_converter_1 = require("../json-shading-info-converter");
var json_table_borders_converter_1 = require("./json-table-borders-converter");
var json_table_cell_margins_converter_1 = require("./json-table-cell-margins-converter");
var json_table_unit_converter_1 = require("./json-table-unit-converter");
var JSONTablePropertiesConverter = (function () {
    function JSONTablePropertiesConverter() {
    }
    JSONTablePropertiesConverter.convertFromJSON = function (obj, colorModelInfoCache, shadingInfoCache) {
        var result = new table_properties_1.TableProperties();
        result.cellMargins = json_table_cell_margins_converter_1.JSONTableCellMarginsConverter.convertFromJSON(obj[json_table_enums_1.JSONEnumTableProperty.CellMargins]);
        result.cellSpacing = json_table_unit_converter_1.JSONTableWidthUnitConverter.convertFromJSON(obj[json_table_enums_1.JSONEnumTableProperty.CellSpacing]);
        result.indent = json_table_unit_converter_1.JSONTableWidthUnitConverter.convertFromJSON(obj[json_table_enums_1.JSONEnumTableProperty.Indent]);
        result.borders = json_table_borders_converter_1.JSONTableBordersConverter.convertFromJSON(obj[json_table_enums_1.JSONEnumTableProperty.Borders], colorModelInfoCache);
        result.tableStyleColumnBandSize = obj[json_table_enums_1.JSONEnumTableProperty.TableStyleColBandSize];
        result.tableStyleRowBandSize = obj[json_table_enums_1.JSONEnumTableProperty.TableStyleRowBandSize];
        result.isTableOverlap = !!obj[json_table_enums_1.JSONEnumTableProperty.IsTableOverlap];
        result.avoidDoubleBorders = !!obj[json_table_enums_1.JSONEnumTableProperty.AvoidDoubleBorders];
        result.layoutType = obj[json_table_enums_1.JSONEnumTableProperty.LayoutType];
        result.shadingInfo = shadingInfoCache.getItemByJsonKey(obj[json_table_enums_1.JSONEnumTableProperty.ShadingInfoIndex]);
        result.tableRowAlignment = obj[json_table_enums_1.JSONEnumTableProperty.TableRowAlignment];
        result.bottomFromText = obj[json_table_enums_1.JSONEnumTableProperty.BottomFromText];
        result.leftFromText = obj[json_table_enums_1.JSONEnumTableProperty.LeftFromText];
        result.topFromText = obj[json_table_enums_1.JSONEnumTableProperty.TopFromText];
        result.rightFromText = obj[json_table_enums_1.JSONEnumTableProperty.RightFromText];
        result.tableHorizontalPosition = obj[json_table_enums_1.JSONEnumTableProperty.TableHorizontalPosition];
        result.tableVerticalPosition = obj[json_table_enums_1.JSONEnumTableProperty.TableVerticalPosition];
        result.horizontalAlignMode = obj[json_table_enums_1.JSONEnumTableProperty.HorizontalAlignMode];
        result.verticalAlignMode = obj[json_table_enums_1.JSONEnumTableProperty.VerticalAlignMode];
        result.horizontalAnchorType = obj[json_table_enums_1.JSONEnumTableProperty.HorizontalAnchorType];
        result.verticalAnchorType = obj[json_table_enums_1.JSONEnumTableProperty.VerticalAnchorType];
        result.textWrapping = obj[json_table_enums_1.JSONEnumTableProperty.TextWrapping];
        result.mask = obj[json_table_enums_1.JSONEnumTableProperty.UseValue];
        return result;
    };
    JSONTablePropertiesConverter.convertToJSON = function (source) {
        var result = {};
        result[json_table_enums_1.JSONEnumTableProperty.CellMargins] = json_table_cell_margins_converter_1.JSONTableCellMarginsConverter.convertToJSON(source.cellMargins);
        result[json_table_enums_1.JSONEnumTableProperty.CellSpacing] = json_table_unit_converter_1.JSONTableWidthUnitConverter.convertToJSON(source.cellSpacing);
        result[json_table_enums_1.JSONEnumTableProperty.Indent] = json_table_unit_converter_1.JSONTableWidthUnitConverter.convertToJSON(source.indent);
        result[json_table_enums_1.JSONEnumTableProperty.Borders] = json_table_borders_converter_1.JSONTableBordersConverter.convertToJSON(source.borders);
        result[json_table_enums_1.JSONEnumTableProperty.TableStyleColBandSize] = source.tableStyleColumnBandSize;
        result[json_table_enums_1.JSONEnumTableProperty.TableStyleRowBandSize] = source.tableStyleRowBandSize;
        result[json_table_enums_1.JSONEnumTableProperty.IsTableOverlap] = common_1.boolToInt(source.isTableOverlap);
        result[json_table_enums_1.JSONEnumTableProperty.AvoidDoubleBorders] = common_1.boolToInt(source.avoidDoubleBorders);
        result[json_table_enums_1.JSONEnumTableProperty.LayoutType] = source.layoutType;
        result[json_table_enums_1.JSONEnumTableProperty.ShadingInfo] = json_shading_info_converter_1.JSONShadingInfoConverter.convertToJSON(source.shadingInfo);
        result[json_table_enums_1.JSONEnumTableProperty.TableRowAlignment] = source.tableRowAlignment;
        result[json_table_enums_1.JSONEnumTableProperty.BottomFromText] = source.bottomFromText;
        result[json_table_enums_1.JSONEnumTableProperty.LeftFromText] = source.leftFromText;
        result[json_table_enums_1.JSONEnumTableProperty.TopFromText] = source.topFromText;
        result[json_table_enums_1.JSONEnumTableProperty.RightFromText] = source.rightFromText;
        result[json_table_enums_1.JSONEnumTableProperty.TableHorizontalPosition] = source.tableHorizontalPosition;
        result[json_table_enums_1.JSONEnumTableProperty.TableVerticalPosition] = source.tableVerticalPosition;
        result[json_table_enums_1.JSONEnumTableProperty.HorizontalAlignMode] = source.horizontalAlignMode;
        result[json_table_enums_1.JSONEnumTableProperty.VerticalAlignMode] = source.verticalAlignMode;
        result[json_table_enums_1.JSONEnumTableProperty.HorizontalAnchorType] = source.horizontalAnchorType;
        result[json_table_enums_1.JSONEnumTableProperty.VerticalAnchorType] = source.verticalAnchorType;
        result[json_table_enums_1.JSONEnumTableProperty.TextWrapping] = source.textWrapping;
        result[json_table_enums_1.JSONEnumTableProperty.UseValue] = source.mask;
        return result;
    };
    return JSONTablePropertiesConverter;
}());
exports.JSONTablePropertiesConverter = JSONTablePropertiesConverter;
