"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var common_1 = require("@devexpress/utils/lib/utils/common");
var font_info_cache_1 = require("../../caches/hashed-caches/font-info-cache");
var character_properties_1 = require("../../character/character-properties");
var lang_info_1 = require("../../character/lang-info");
var json_character_enums_1 = require("../enums/json-character-enums");
var json_color_model_info_converter_1 = require("./json-color-model-info-converter");
var json_shading_info_converter_1 = require("./json-shading-info-converter");
var JSONMaskedCharacterPropertiesConverter = (function () {
    function JSONMaskedCharacterPropertiesConverter() {
    }
    JSONMaskedCharacterPropertiesConverter.convertFromJSON = function (obj, colorModelInfoCache, shadingInfoCache, fontCache) {
        var result = new character_properties_1.MaskedCharacterProperties();
        result.fontSize = obj[json_character_enums_1.JSONCharacterFormattingProperty.Size];
        result.fontBold = !!obj[json_character_enums_1.JSONCharacterFormattingProperty.Bold];
        result.fontItalic = !!obj[json_character_enums_1.JSONCharacterFormattingProperty.Italic];
        result.fontStrikeoutType = obj[json_character_enums_1.JSONCharacterFormattingProperty.StrikeoutType];
        result.fontUnderlineType = obj[json_character_enums_1.JSONCharacterFormattingProperty.UnderlineType];
        result.allCaps = !!obj[json_character_enums_1.JSONCharacterFormattingProperty.AllCaps];
        result.strikeoutWordsOnly = !!obj[json_character_enums_1.JSONCharacterFormattingProperty.StrikeoutWordsOnly];
        result.underlineWordsOnly = !!obj[json_character_enums_1.JSONCharacterFormattingProperty.UnderlineWordsOnly];
        result.script = obj[json_character_enums_1.JSONCharacterFormattingProperty.Script];
        result.hidden = !!obj[json_character_enums_1.JSONCharacterFormattingProperty.Hidden];
        result.noProof = !!obj[json_character_enums_1.JSONCharacterFormattingProperty.NoProof];
        result.useValue = obj[json_character_enums_1.JSONCharacterFormattingProperty.UseValue];
        result.langInfo = JSONLangInfoConverter.convertFromJSON(obj[json_character_enums_1.JSONCharacterFormattingProperty.LangInfo]);
        result.fontInfo = fontCache instanceof font_info_cache_1.FontInfoCache ?
            fontCache.getItemByJsonKey(obj[json_character_enums_1.JSONCharacterFormattingProperty.FontInfoIndex]) :
            fontCache(obj[json_character_enums_1.JSONCharacterFormattingProperty.FontInfoIndex]);
        result.textColor = colorModelInfoCache.getItemByJsonKey(obj[json_character_enums_1.JSONCharacterFormattingProperty.TextColorIndex]);
        result.shadingInfo = shadingInfoCache.getItemByJsonKey(obj[json_character_enums_1.JSONCharacterFormattingProperty.ShadingInfoIndex]);
        result.highlightColor = colorModelInfoCache.getItemByJsonKey(obj[json_character_enums_1.JSONCharacterFormattingProperty.HighlightColorIndex]);
        result.underlineColor = colorModelInfoCache.getItemByJsonKey(obj[json_character_enums_1.JSONCharacterFormattingProperty.UnderlineColorIndex]);
        result.strikeoutColor = colorModelInfoCache.getItemByJsonKey(obj[json_character_enums_1.JSONCharacterFormattingProperty.StrikeoutColorIndex]);
        return result;
    };
    JSONMaskedCharacterPropertiesConverter.convertToJSON = function (source) {
        var result = {};
        result[json_character_enums_1.JSONCharacterFormattingProperty.FontName] = source.fontInfo.name;
        result[json_character_enums_1.JSONCharacterFormattingProperty.Size] = source.fontSize;
        result[json_character_enums_1.JSONCharacterFormattingProperty.Bold] = common_1.boolToInt(source.fontBold);
        result[json_character_enums_1.JSONCharacterFormattingProperty.Italic] = common_1.boolToInt(source.fontItalic);
        result[json_character_enums_1.JSONCharacterFormattingProperty.StrikeoutType] = source.fontStrikeoutType;
        result[json_character_enums_1.JSONCharacterFormattingProperty.UnderlineType] = source.fontUnderlineType;
        result[json_character_enums_1.JSONCharacterFormattingProperty.AllCaps] = common_1.boolToInt(source.allCaps);
        result[json_character_enums_1.JSONCharacterFormattingProperty.StrikeoutWordsOnly] = common_1.boolToInt(source.strikeoutWordsOnly);
        result[json_character_enums_1.JSONCharacterFormattingProperty.UnderlineWordsOnly] = common_1.boolToInt(source.underlineWordsOnly);
        result[json_character_enums_1.JSONCharacterFormattingProperty.TextColor] = json_color_model_info_converter_1.JSONColorModelInfoConverter.convertToJSON(source.textColor);
        result[json_character_enums_1.JSONCharacterFormattingProperty.ShadingInfo] = json_shading_info_converter_1.JSONShadingInfoConverter.convertToJSON(source.shadingInfo);
        result[json_character_enums_1.JSONCharacterFormattingProperty.HighlightColor] = json_color_model_info_converter_1.JSONColorModelInfoConverter.convertToJSON(source.highlightColor);
        result[json_character_enums_1.JSONCharacterFormattingProperty.UnderlineColor] = json_color_model_info_converter_1.JSONColorModelInfoConverter.convertToJSON(source.underlineColor);
        result[json_character_enums_1.JSONCharacterFormattingProperty.StrikeoutColor] = json_color_model_info_converter_1.JSONColorModelInfoConverter.convertToJSON(source.strikeoutColor);
        result[json_character_enums_1.JSONCharacterFormattingProperty.Script] = source.script;
        result[json_character_enums_1.JSONCharacterFormattingProperty.Hidden] = common_1.boolToInt(source.hidden);
        result[json_character_enums_1.JSONCharacterFormattingProperty.NoProof] = common_1.boolToInt(source.noProof);
        result[json_character_enums_1.JSONCharacterFormattingProperty.UseValue] = source.useValue;
        result[json_character_enums_1.JSONCharacterFormattingProperty.LangInfo] = JSONLangInfoConverter.convertToJSON(source.langInfo);
        return result;
    };
    return JSONMaskedCharacterPropertiesConverter;
}());
exports.JSONMaskedCharacterPropertiesConverter = JSONMaskedCharacterPropertiesConverter;
var JSONLangInfoConverter = (function () {
    function JSONLangInfoConverter() {
    }
    JSONLangInfoConverter.convertFromJSON = function (obj) {
        var result = new lang_info_1.LangInfo();
        result.bidi = obj[json_character_enums_1.JSONLangInfoProperty.Bidi] || "";
        result.eastAsia = obj[json_character_enums_1.JSONLangInfoProperty.EastAsia] || "";
        result.latin = obj[json_character_enums_1.JSONLangInfoProperty.Latin] || "";
        return result;
    };
    JSONLangInfoConverter.convertToJSON = function (source) {
        var result = {};
        result[json_character_enums_1.JSONLangInfoProperty.Bidi] = source ? source.bidi : "";
        result[json_character_enums_1.JSONLangInfoProperty.EastAsia] = source ? source.eastAsia : "";
        result[json_character_enums_1.JSONLangInfoProperty.Latin] = source ? source.latin : "";
        return result;
    };
    return JSONLangInfoConverter;
}());
exports.JSONLangInfoConverter = JSONLangInfoConverter;
