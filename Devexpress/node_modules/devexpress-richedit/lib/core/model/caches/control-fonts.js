"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var flag_1 = require("@devexpress/utils/lib/class/flag");
var list_1 = require("@devexpress/utils/lib/utils/list");
var string_1 = require("@devexpress/utils/lib/utils/map/string");
var font_info_1 = require("../fonts/font-info");
var ControlFontsCache = (function () {
    function ControlFontsCache() {
        this.cache = {};
        this.list = [];
    }
    ControlFontsCache.prototype.addFont = function (info) {
        var oldFont = this.cache[info.cacheKey];
        if (oldFont)
            return oldFont;
        this.cache[info.cacheKey] = info;
        this.list.push(info);
        return info;
    };
    ControlFontsCache.prototype.getFontByKey = function (cacheKey) {
        return this.cache[cacheKey];
    };
    ControlFontsCache.prototype.getFont = function (info) {
        return this.cache[info.cacheKey];
    };
    ControlFontsCache.prototype.deleteFont = function (info) {
        var oldFont = this.cache[info.cacheKey];
        if (oldFont) {
            delete this.cache[info.cacheKey];
            list_1.ListUtils.removeBy(this.list, function (el) { return el.cacheKey == info.cacheKey; });
        }
    };
    ControlFontsCache.prototype.clone = function () {
        var result = new ControlFontsCache();
        result.list = list_1.ListUtils.deepCopy(this.list);
        result.cache = string_1.StringMapUtils.deepCopy(this.cache);
        return result;
    };
    ControlFontsCache.prototype.findSimularFontByType = function (fontFamily, type) {
        var flag = new flag_1.Flag(type);
        return list_1.ListUtils.elementBy(this.list, function (controlFont) {
            return controlFont.fontFamily == fontFamily &&
                controlFont.descriptors.msWordBold() == flag.get(font_info_1.ControlFontType.Bold) &&
                controlFont.descriptors.msWordItalic() == flag.get(font_info_1.ControlFontType.Italic);
        });
    };
    return ControlFontsCache;
}());
exports.ControlFontsCache = ControlFontsCache;
