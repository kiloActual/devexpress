"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var list_1 = require("@devexpress/utils/lib/utils/list");
var range_permissions_changed_1 = require("../changes/sub-document/range-permissions-changed");
var range_permissions_1 = require("../range-permissions");
var base_manipulator_1 = require("./base-manipulator");
var RangePermissionManipulator = (function (_super) {
    tslib_1.__extends(RangePermissionManipulator, _super);
    function RangePermissionManipulator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RangePermissionManipulator.prototype.createRangePermission = function (subDocument, permissionTemplate) {
        subDocument.rangePermissions.push(new range_permissions_1.RangePermission(subDocument.positionManager, permissionTemplate.interval, permissionTemplate.userName, permissionTemplate.group));
        subDocument.rangePermissions = subDocument.rangePermissions.sort(range_permissions_1.ConstRangePermission.comparer);
        subDocument.filterRangePermissions(this.modelManipulator.modelManager.richOptions.documentProtection);
        this.modelManipulator.notifyModelChanged(new range_permissions_changed_1.RangePermissionsChangedSubDocumentChange(subDocument.id, permissionTemplate));
    };
    RangePermissionManipulator.prototype.deleteRangePermission = function (subDocument, permissionTemplate, permissionIndex) {
        if (permissionIndex === void 0) { permissionIndex = list_1.ListUtils.indexBy(subDocument.rangePermissions, function (b) { return b.constRangePermission.equals(permissionTemplate); }); }
        subDocument.rangePermissions.splice(permissionIndex, 1)[0].destructor(subDocument.positionManager);
        subDocument.filterRangePermissions(this.modelManipulator.modelManager.richOptions.documentProtection);
        this.modelManipulator.notifyModelChanged(new range_permissions_changed_1.RangePermissionsChangedSubDocumentChange(subDocument.id, permissionTemplate));
    };
    return RangePermissionManipulator;
}(base_manipulator_1.BaseManipulator));
exports.RangePermissionManipulator = RangePermissionManipulator;
