"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var number_1 = require("@devexpress/utils/lib/utils/map/number");
var string_1 = require("@devexpress/utils/lib/utils/string");
var document_protection_changed_1 = require("../changes/model/document-protection-changed");
var range_permissions_changed_1 = require("../changes/sub-document/range-permissions-changed");
var document_protection_history_item_1 = require("../history/items/document-protection-history-item");
var json_document_enums_1 = require("../json/enums/json-document-enums");
var document_protection_1 = require("../options/document-protection");
var password_hash_code_calculator_1 = require("../protection/password-hash-code-calculator");
var base_manipulator_1 = require("./base-manipulator");
var DocumentProtectionPropertiesManipulator = (function (_super) {
    tslib_1.__extends(DocumentProtectionPropertiesManipulator, _super);
    function DocumentProtectionPropertiesManipulator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DocumentProtectionPropertiesManipulator.prototype.changeProtectionProperties = function (documentModel, newProtectionProperties) {
        var oldValue = documentModel.documentProtectionProperties.clone();
        documentModel.documentProtectionProperties.copyFrom(newProtectionProperties);
        this.raiseProtectionPropertiesChanged();
        return oldValue;
    };
    DocumentProtectionPropertiesManipulator.prototype.raiseProtectionPropertiesChanged = function () {
        this.filterRangePermissions();
        this.modelManipulator.notifyModelChanged(new document_protection_changed_1.DocumentProtectionChangedModelChange(this.model.documentProtectionProperties));
    };
    DocumentProtectionPropertiesManipulator.prototype.raiseRangePermissionPropertiesChanged = function () {
        this.filterRangePermissions();
        this.modelManipulator.notifyModelChanged(new range_permissions_changed_1.RangePermissionsPropertiesChange());
    };
    DocumentProtectionPropertiesManipulator.prototype.filterRangePermissions = function () {
        var _this = this;
        number_1.NumberMapUtils.forEach(this.model.subDocuments, function (subDocument) {
            subDocument.filterRangePermissions(_this.modelManipulator.modelManager.richOptions.documentProtection);
        });
    };
    DocumentProtectionPropertiesManipulator.prototype.enforceDocumentProtection = function (password, protectionType) {
        if (protectionType === void 0) { protectionType = json_document_enums_1.DocumentProtectionType.ReadOnly; }
        var protectionProperties = this.model.documentProtectionProperties.clone();
        protectionProperties.enforceProtection = true;
        protectionProperties.protectionType = protectionType;
        if (string_1.StringUtils.isNullOrEmpty(password)) {
            protectionProperties.hashAlgorithmType = document_protection_1.HashAlgorithmType.None;
            protectionProperties.hashIterationCount = 0;
            protectionProperties.passwordPrefix = null;
            protectionProperties.passwordHash = null;
            protectionProperties.word2003PasswordHash = null;
            protectionProperties.openOfficePasswordHash = null;
        }
        else {
            protectionProperties.hashAlgorithmType = document_protection_1.HashAlgorithmType.Sha1;
            protectionProperties.hashIterationCount = 100000;
            var calculator = new password_hash_code_calculator_1.PasswordHashCodeCalculator();
            protectionProperties.passwordPrefix = calculator.generatePasswordPrefix(16);
            protectionProperties.passwordHash = calculator.calculatePasswordHash(password, protectionProperties.passwordPrefix, protectionProperties.hashIterationCount, protectionProperties.hashAlgorithmType);
            protectionProperties.word2003PasswordHash = calculator.calculateLegacyPasswordHash(password);
        }
        this.modelManipulator.modelManager.history.addAndRedo(new document_protection_history_item_1.DocumentProtectionHistoryItem(this.modelManipulator, protectionProperties));
    };
    DocumentProtectionPropertiesManipulator.prototype.forceRemoveDocumentProtection = function () {
        var protectionProperties = this.model.documentProtectionProperties.clone();
        protectionProperties.enforceProtection = false;
        this.modelManipulator.modelManager.history.addAndRedo(new document_protection_history_item_1.DocumentProtectionHistoryItem(this.modelManipulator, protectionProperties));
    };
    return DocumentProtectionPropertiesManipulator;
}(base_manipulator_1.BaseManipulator));
exports.DocumentProtectionPropertiesManipulator = DocumentProtectionPropertiesManipulator;
