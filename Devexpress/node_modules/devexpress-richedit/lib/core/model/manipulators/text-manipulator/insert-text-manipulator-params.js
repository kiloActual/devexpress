"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var rich_utils_1 = require("../../rich-utils");
var run_type_1 = require("../../runs/run-type");
var manipulator_params_base_1 = require("../utils/manipulator-params-base");
var InsertTextManipulatorParams = (function (_super) {
    tslib_1.__extends(InsertTextManipulatorParams, _super);
    function InsertTextManipulatorParams(subDocPos, charPropsBundle, runType, text) {
        var _this = _super.call(this, subDocPos, charPropsBundle) || this;
        _this.text = text;
        _this.runType = runType;
        return _this;
    }
    InsertTextManipulatorParams.prototype.clone = function () {
        var obj = new InsertTextManipulatorParams(this.subDocPos, this.charPropsBundle, this.runType, this.text);
        return obj;
    };
    return InsertTextManipulatorParams;
}(manipulator_params_base_1.ManipulatorParamsCharacterPropertiesBased));
exports.InsertTextManipulatorParams = InsertTextManipulatorParams;
var InsertLayoutDependentTextManipulatorParams = (function (_super) {
    tslib_1.__extends(InsertLayoutDependentTextManipulatorParams, _super);
    function InsertLayoutDependentTextManipulatorParams(subDocPos, charPropsBundle) {
        return _super.call(this, subDocPos, charPropsBundle, run_type_1.RunType.LayoutDependentRun, rich_utils_1.RichUtils.specialCharacters.LayoutDependentText) || this;
    }
    return InsertLayoutDependentTextManipulatorParams;
}(InsertTextManipulatorParams));
exports.InsertLayoutDependentTextManipulatorParams = InsertLayoutDependentTextManipulatorParams;
