"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var anchored_text_box_properties_changed_1 = require("../../changes/sub-document/anchor/anchored-text-box-properties-changed");
var history_item_state_1 = require("../../history/states/history-item-state");
var history_item_state_object_1 = require("../../history/states/history-item-state-object");
var base_manipulator_1 = require("../base-manipulator");
var TextBoxPropertiesManipulator = (function (_super) {
    tslib_1.__extends(TextBoxPropertiesManipulator, _super);
    function TextBoxPropertiesManipulator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TextBoxPropertiesManipulator.prototype.setValue = function (subDocument, interval, newValue) {
        var oldState = new history_item_state_1.HistoryItemIntervalState();
        var newState = new history_item_state_1.HistoryItemIntervalState();
        var run = subDocument.getRunByPosition(interval.start);
        oldState.register(new history_item_state_object_1.HistoryItemIntervalAnchoredTextBoxPropertiesStateObject(interval, run.textBoxProperties.clone()));
        run.textBoxProperties = newValue;
        newState.register(new history_item_state_object_1.HistoryItemIntervalAnchoredTextBoxPropertiesStateObject(interval, newValue));
        this.modelManipulator.notifyModelChanged(new anchored_text_box_properties_changed_1.AnchoredTextBoxPropertiesChangedSubDocumentChange(subDocument.id, run.anchoredObjectID, newState.interval.start, newState));
        return oldState;
    };
    TextBoxPropertiesManipulator.prototype.restoreValue = function (subDocument, state) {
        var stateValue = state.lastObject;
        var run = subDocument.getRunByPosition(stateValue.interval.start);
        run.textBoxProperties = stateValue.value;
        this.modelManipulator.notifyModelChanged(new anchored_text_box_properties_changed_1.AnchoredTextBoxPropertiesChangedSubDocumentChange(subDocument.id, run.anchoredObjectID, state.interval.start, state));
    };
    return TextBoxPropertiesManipulator;
}(base_manipulator_1.BaseManipulator));
exports.TextBoxPropertiesManipulator = TextBoxPropertiesManipulator;
