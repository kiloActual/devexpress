"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var size_1 = require("@devexpress/utils/lib/geometry/size");
var anchor_info_1 = require("../../floating-objects/anchor-info");
var sizes_1 = require("../../floating-objects/sizes");
var shape_1 = require("../../shapes/shape");
var non_visual_drawing_object_info_1 = require("./non-visual-drawing-object-info");
var BasePictureInfo = (function () {
    function BasePictureInfo(size, shape, containerProperties, drawingProperties) {
        this.size = size;
        this.shape = shape;
        this.containerProperties = containerProperties;
        this.nonVisualDrawingProperties = drawingProperties;
    }
    Object.defineProperty(BasePictureInfo.prototype, "cacheInfo", {
        get: function () { return this.size.cacheInfo; },
        enumerable: true,
        configurable: true
    });
    return BasePictureInfo;
}());
exports.BasePictureInfo = BasePictureInfo;
var InlinePictureInfo = (function (_super) {
    tslib_1.__extends(InlinePictureInfo, _super);
    function InlinePictureInfo(size, shape, publicAPIID, containerProperties, drawingProperties) {
        var _this = _super.call(this, size, shape, containerProperties, drawingProperties) || this;
        _this.publicAPIID = publicAPIID;
        return _this;
    }
    InlinePictureInfo.prototype.clone = function () {
        return new InlinePictureInfo(this.size.clone(), this.shape.clone(), this.publicAPIID, this.containerProperties.clone(), this.nonVisualDrawingProperties.clone());
    };
    InlinePictureInfo.prototype.cloneToNewSubDocument = function (subDocument) {
        return new InlinePictureInfo(this.size.cloneToNewSubDocument(subDocument), this.shape.clone(), this.publicAPIID, this.containerProperties.clone(), this.nonVisualDrawingProperties.clone());
    };
    InlinePictureInfo.defaultInfo = function (cacheInfo, scale) {
        if (scale === void 0) { scale = new size_1.Size(100, 100); }
        return new InlinePictureInfo(new sizes_1.PictureSize(true, 0, cacheInfo, scale), new shape_1.Shape(), -1, new non_visual_drawing_object_info_1.NonVisualDrawingObjectInfo(), new non_visual_drawing_object_info_1.NonVisualDrawingObjectInfo());
    };
    return InlinePictureInfo;
}(BasePictureInfo));
exports.InlinePictureInfo = InlinePictureInfo;
var AnchorPictureInfo = (function (_super) {
    tslib_1.__extends(AnchorPictureInfo, _super);
    function AnchorPictureInfo(size, shape, anchorInfo, containerProperties, drawingProperties) {
        var _this = _super.call(this, size, shape, containerProperties, drawingProperties) || this;
        _this.anchorInfo = anchorInfo;
        return _this;
    }
    AnchorPictureInfo.prototype.clone = function () {
        return new AnchorPictureInfo(this.size.clone(), this.shape.clone(), this.anchorInfo.clone(), this.containerProperties.clone(), this.nonVisualDrawingProperties.clone());
    };
    AnchorPictureInfo.prototype.cloneToNewSubDocument = function (subDocument) {
        return new AnchorPictureInfo(this.size.cloneToNewSubDocument(subDocument), this.shape.clone(), this.anchorInfo.clone(), new non_visual_drawing_object_info_1.NonVisualDrawingObjectInfo(), new non_visual_drawing_object_info_1.NonVisualDrawingObjectInfo());
    };
    AnchorPictureInfo.defaultInfo = function (cacheInfo, scale) {
        if (scale === void 0) { scale = new size_1.Size(100, 100); }
        return new AnchorPictureInfo(new sizes_1.PictureSize(true, 0, cacheInfo, scale), new shape_1.Shape(), new anchor_info_1.AnchorInfo(), new non_visual_drawing_object_info_1.NonVisualDrawingObjectInfo(), new non_visual_drawing_object_info_1.NonVisualDrawingObjectInfo());
    };
    return AnchorPictureInfo;
}(BasePictureInfo));
exports.AnchorPictureInfo = AnchorPictureInfo;
