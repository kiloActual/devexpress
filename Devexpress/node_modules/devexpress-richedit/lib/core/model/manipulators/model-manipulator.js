"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var event_dispatcher_1 = require("../../../base-utils/event-dispatcher");
var bookmarks_manipulator_1 = require("./bookmarks-manipulator");
var character_properties_manipulator_1 = require("./character-properties-manipulator");
var merger_1 = require("./doc-merger/merger");
var document_properties_manipulator_1 = require("./document-properties-manipulator");
var document_protection_properties_manipulator_1 = require("./document-protection-properties-manipulator");
var fields_manipulator_1 = require("./fields-manipulator");
var floating_objects_manipulator_1 = require("./floating-objects/floating-objects-manipulator");
var font_manipulator_1 = require("./font-manipulator");
var header_footer_manipulator_1 = require("./header-footer-manipulator");
var inline_object_manipulator_1 = require("./inline-object-manipulator");
var numbering_list_manipulator_1 = require("./numbering-lists/numbering-list-manipulator");
var paragraph_manipulator_1 = require("./paragraph-manipulator/paragraph-manipulator");
var paragraph_properties_manipulator_1 = require("./paragraph-properties-manipulator");
var picture_manipulator_1 = require("./picture-manipulator/picture-manipulator");
var range_permission_manipulator_1 = require("./range-permission-manipulator");
var range_manipulator_1 = require("./range/range-manipulator");
var section_manipulator_1 = require("./section-manipulator");
var section_properties_manipulator_1 = require("./section-properties-manipulator");
var styles_manipulator_1 = require("./styles-manipulator");
var sub_document_manipulator_1 = require("./sub-document-manipulator");
var tables_manipulator_1 = require("./tables/tables-manipulator");
var tabs_manipulator_1 = require("./tabs-manipulator");
var text_box_manipulator_1 = require("./text-box-manipulator");
var text_case_manipulator_1 = require("./text-case-manipulator");
var text_manipulator_1 = require("./text-manipulator/text-manipulator");
var ModelManipulator = (function () {
    function ModelManipulator(modelManager, batchUpdatableObject) {
        this.modelListeners = [];
        this.onFontsChanged = new event_dispatcher_1.EventDispatcher();
        this.batchUpdatableObject = batchUpdatableObject;
        this.modelManager = modelManager;
        this.floatingObject = new floating_objects_manipulator_1.FloatingObjectsManipulator(this);
        this.numberingList = new numbering_list_manipulator_1.NumberingListManipulator(this);
        this.range = new range_manipulator_1.RangeManipulator(this);
        this.table = new tables_manipulator_1.TablesManipulator(this);
        this.bookmark = new bookmarks_manipulator_1.BookmarksManipulator(this);
        this.rangePermission = new range_permission_manipulator_1.RangePermissionManipulator(this);
        this.characterProperties = new character_properties_manipulator_1.CharacterPropertiesManipulator(this);
        this.documentProperties = new document_properties_manipulator_1.DocumentPropertiesManipulator(this);
        this.documentProtectionProperties = new document_protection_properties_manipulator_1.DocumentProtectionPropertiesManipulator(this);
        this.field = new fields_manipulator_1.FieldsManipulator(this);
        this.font = new font_manipulator_1.FontManipulator(this);
        this.header = new header_footer_manipulator_1.HeaderManipulator(this);
        this.footer = new header_footer_manipulator_1.FooterManipulator(this);
        this.inlineObject = new inline_object_manipulator_1.InlineObjectManipulator(this);
        this.paragraphProperties = new paragraph_properties_manipulator_1.ParagraphPropertiesManipulator(this);
        this.sectionProperties = new section_properties_manipulator_1.SectionPropertiesManipulator(this);
        this.style = new styles_manipulator_1.StylesManipulator(this);
        this.subDocument = new sub_document_manipulator_1.SubDocumentManipulator(this);
        this.tab = new tabs_manipulator_1.TabsManipulator(this);
        this.textCase = new text_case_manipulator_1.TextCaseManipulator(this);
        this.text = new text_manipulator_1.TextManipulator(this);
        this.paragraph = new paragraph_manipulator_1.ParagraphManipulator(this);
        this.picture = new picture_manipulator_1.PictureManipulator(this);
        this.textBox = new text_box_manipulator_1.TextBoxManipulator(this);
        this.section = new section_manipulator_1.SectionManipulator(this);
        this.documentMerger = new merger_1.DocumentMerger(this);
    }
    Object.defineProperty(ModelManipulator.prototype, "model", {
        get: function () { return this.modelManager.model; },
        enumerable: true,
        configurable: true
    });
    ModelManipulator.prototype.notifyModelChanged = function (change) {
        this.modelListeners.forEach(function (listener) { return listener.modelChanged(change); });
    };
    ModelManipulator.prototype.removeModelListener = function (listener) {
        var index = this.modelListeners.indexOf(listener);
        if (index >= 0)
            this.modelListeners.splice(index, 1);
    };
    ModelManipulator.prototype.raiseFontAdded = function (newFontInfo) {
        if (newFontInfo)
            this.onFontsChanged.listeners.forEach(function (listener) { return listener.NotifyFontAdded(newFontInfo); });
    };
    ModelManipulator.prototype.raiseFontRemoved = function (font) {
        if (font)
            this.onFontsChanged.listeners.forEach(function (listener) { return listener.NotifyFontRemoved(font); });
    };
    ModelManipulator.prototype.raiseFontListChanged = function (fontCache) {
        this.onFontsChanged.listeners.forEach(function (listener) { return listener.NotifyFontListChanged(fontCache); });
    };
    ModelManipulator.prototype.clearListeners = function () {
        this.onFontsChanged.clear();
        this.modelListeners = [];
    };
    return ModelManipulator;
}());
exports.ModelManipulator = ModelManipulator;
