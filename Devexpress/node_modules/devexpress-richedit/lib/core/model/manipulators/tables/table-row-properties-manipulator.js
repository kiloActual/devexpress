"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var row_property_changed_1 = require("../../changes/sub-document/table/row-property-changed");
var history_item_state_1 = require("../../history/states/history-item-state");
var history_item_state_object_1 = require("../../history/states/history-item-state-object");
var json_table_row_enums_1 = require("../../json/enums/table/json-table-row-enums");
var table_row_properties_1 = require("../../tables/properties/table-row-properties");
var TableRowPropertiesManipulator = (function () {
    function TableRowPropertiesManipulator(manipulator) {
        this.cellSpacing = new TableRowPropertiesWithUseManipulatorCore(manipulator, json_table_row_enums_1.JSONServerTableRowProperty.CellSpacing, table_row_properties_1.TableRowPropertiesMask.UseCellSpacing, function (prop, val) { return prop.cellSpacing = val; }, function (prop) { return prop.cellSpacing; });
        this.cantSplit = new TableRowPropertiesWithUseManipulatorCore(manipulator, json_table_row_enums_1.JSONServerTableRowProperty.CantSplit, table_row_properties_1.TableRowPropertiesMask.UseCantSplit, function (prop, val) { return prop.cantSplit = val; }, function (prop) { return prop.cantSplit; });
        this.hideCellMark = new TableRowPropertiesWithUseManipulatorCore(manipulator, json_table_row_enums_1.JSONServerTableRowProperty.HideCellMark, table_row_properties_1.TableRowPropertiesMask.UseHideCellMark, function (prop, val) { return prop.hideCellMark = val; }, function (prop) { return prop.hideCellMark; });
        this.header = new TableRowPropertiesWithUseManipulatorCore(manipulator, json_table_row_enums_1.JSONServerTableRowProperty.Header, table_row_properties_1.TableRowPropertiesMask.UseHeader, function (prop, val) { return prop.header = val; }, function (prop) { return prop.header; });
        this.tableRowAlignment = new TableRowPropertiesWithUseManipulatorCore(manipulator, json_table_row_enums_1.JSONServerTableRowProperty.TableRowAlignment, table_row_properties_1.TableRowPropertiesMask.UseTableRowAlignment, function (prop, val) { return prop.tableRowAlignment = val; }, function (prop) { return prop.tableRowAlignment; });
        this.height = new TableRowPropertiesManipulatorCore(manipulator, json_table_row_enums_1.JSONServerTableRowProperty.Height, function (row, val) { return row.height = val; }, function (prop) { return prop.height; });
        this.gridAfter = new TableRowPropertiesManipulatorCore(manipulator, json_table_row_enums_1.JSONServerTableRowProperty.GridAfter, function (row, val) { return row.gridAfter = val; }, function (row) { return row.gridAfter; });
        this.gridBefore = new TableRowPropertiesManipulatorCore(manipulator, json_table_row_enums_1.JSONServerTableRowProperty.GridBefore, function (row, val) { return row.gridBefore = val; }, function (row) { return row.gridBefore; });
        this.widthAfter = new TableRowPropertiesManipulatorCore(manipulator, json_table_row_enums_1.JSONServerTableRowProperty.WidthAfter, function (row, val) { return row.widthAfter = val; }, function (row) { return row.widthAfter; });
        this.widthBefore = new TableRowPropertiesManipulatorCore(manipulator, json_table_row_enums_1.JSONServerTableRowProperty.WidthBefore, function (row, val) { return row.widthBefore = val; }, function (row) { return row.widthBefore; });
    }
    return TableRowPropertiesManipulator;
}());
exports.TableRowPropertiesManipulator = TableRowPropertiesManipulator;
var TableRowPropertiesManipulatorCore = (function () {
    function TableRowPropertiesManipulatorCore(manipulator, jsonTableCellProperty, setProperty, getProperty) {
        this.manipulator = manipulator;
        this.jsonTableRowProperty = jsonTableCellProperty;
        this.setProperty = setProperty;
        this.getProperty = getProperty;
    }
    TableRowPropertiesManipulatorCore.prototype.setValue = function (subDocument, tableIndex, rowIndex, newValue) {
        var table = subDocument.tables[tableIndex];
        var tableStartPosition = table.getStartPosition();
        var newState = new history_item_state_1.HistoryItemState();
        var oldState = new history_item_state_1.HistoryItemState();
        var row = table.rows[rowIndex];
        oldState.register(new history_item_state_object_1.HistoryItemTableRowStateObject(tableStartPosition, table.nestedLevel, tableIndex, rowIndex, this.getProperty(row)));
        this.setProperty(row, newValue);
        newState.register(new history_item_state_object_1.HistoryItemTableRowStateObject(tableStartPosition, table.nestedLevel, tableIndex, rowIndex, newValue));
        this.manipulator.notifyModelChanged(new row_property_changed_1.TableRowPropertyChangedSubDocumentChange(subDocument, this.jsonTableRowProperty, newState));
        return oldState;
    };
    TableRowPropertiesManipulatorCore.prototype.restoreValue = function (subDocument, state) {
        var table = subDocument.tables[state.lastObject.tableIndex];
        var row = table.rows[state.lastObject.rowIndex];
        this.setProperty(row, state.lastObject.value);
        this.manipulator.notifyModelChanged(new row_property_changed_1.TableRowPropertyChangedSubDocumentChange(subDocument, this.jsonTableRowProperty, state));
    };
    return TableRowPropertiesManipulatorCore;
}());
var TableRowPropertiesWithUseManipulatorCore = (function () {
    function TableRowPropertiesWithUseManipulatorCore(manipulator, jsonTableCellProperty, tableRowPropertiesMask, setProperty, getProperty) {
        this.manipulator = manipulator;
        this.tableRowPropertiesMask = tableRowPropertiesMask;
        this.jsonTableRowProperty = jsonTableCellProperty;
        this.setProperty = setProperty;
        this.getProperty = getProperty;
    }
    TableRowPropertiesWithUseManipulatorCore.prototype.setValue = function (subDocument, tableIndex, rowIndex, newValue, newUse) {
        var table = subDocument.tables[tableIndex];
        var tableStartPosition = table.getStartPosition();
        var newState = new history_item_state_1.HistoryItemState();
        var oldState = new history_item_state_1.HistoryItemState();
        var row = table.rows[rowIndex];
        var properties = row.properties;
        oldState.register(new history_item_state_object_1.HistoryItemTableRowUseStateObject(tableStartPosition, table.nestedLevel, tableIndex, rowIndex, this.getProperty(properties), properties.getUseValue(this.tableRowPropertiesMask)));
        this.setValueCore(subDocument.documentModel.cache, row, newValue, newUse);
        newState.register(new history_item_state_object_1.HistoryItemTableRowUseStateObject(tableStartPosition, table.nestedLevel, tableIndex, rowIndex, newValue, newUse));
        this.manipulator.notifyModelChanged(new row_property_changed_1.TableRowPropertyChangedSubDocumentChange(subDocument, this.jsonTableRowProperty, newState));
        return oldState;
    };
    TableRowPropertiesWithUseManipulatorCore.prototype.restoreValue = function (subDocument, state) {
        var table = subDocument.tables[state.lastObject.tableIndex];
        var row = table.rows[state.lastObject.rowIndex];
        this.setValueCore(subDocument.documentModel.cache, row, state.lastObject.value, state.lastObject.use);
        this.manipulator.notifyModelChanged(new row_property_changed_1.TableRowPropertyChangedSubDocumentChange(subDocument, this.jsonTableRowProperty, state));
    };
    TableRowPropertiesWithUseManipulatorCore.prototype.setValueCore = function (cache, row, newValue, newUse) {
        var properties = row.properties.clone();
        this.setProperty(properties, newValue);
        properties.setUseValue(this.tableRowPropertiesMask, newUse);
        row.properties = cache.tableRowPropertiesCache.getItem(properties);
    };
    return TableRowPropertiesWithUseManipulatorCore;
}());
