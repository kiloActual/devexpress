"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var property_changed_1 = require("../../changes/sub-document/table/property-changed");
var history_item_state_1 = require("../../history/states/history-item-state");
var history_item_state_object_1 = require("../../history/states/history-item-state-object");
var json_table_enums_1 = require("../../json/enums/table/json-table-enums");
var table_properties_1 = require("../../tables/properties/table-properties");
var TablePropertiesManipulator = (function () {
    function TablePropertiesManipulator(manipulator) {
        this.cellMargins = new TableComplexPropertyWithUseManipulator(manipulator, json_table_enums_1.JSONEnumTableProperty.CellMargins, [table_properties_1.TablePropertiesMask.UseTopMargin, table_properties_1.TablePropertiesMask.UseRightMargin, table_properties_1.TablePropertiesMask.UseBottomMargin, table_properties_1.TablePropertiesMask.UseLeftMargin], function (prop, vals) {
            prop.cellMargins.top = vals[0];
            prop.cellMargins.right = vals[1];
            prop.cellMargins.bottom = vals[2];
            prop.cellMargins.left = vals[3];
        }, function (prop) { return [prop.cellMargins.top, prop.cellMargins.right, prop.cellMargins.bottom, prop.cellMargins.left]; });
        this.cellSpacing = new TablePropertiesWithUseManipulatorCore(manipulator, json_table_enums_1.JSONEnumTableProperty.CellSpacing, table_properties_1.TablePropertiesMask.UseCellSpacing, function (prop, val) { return prop.cellSpacing = val; }, function (prop) { return prop.cellSpacing; });
        this.indent = new TablePropertiesWithUseManipulatorCore(manipulator, json_table_enums_1.JSONEnumTableProperty.Indent, table_properties_1.TablePropertiesMask.UseTableIndent, function (prop, val) { return prop.indent = val; }, function (prop) { return prop.indent; });
        this.preferredWidth = new TablePropertiesManipulatorCore(manipulator, json_table_enums_1.JSONEnumTableProperty.PreferredWidth, function (table, val) { return table.preferredWidth = val; }, function (table) { return table.preferredWidth; });
        this.lookTypes = new TablePropertiesManipulatorCore(manipulator, json_table_enums_1.JSONEnumTableProperty.TableLookTypes, function (table, val) { return table.lookTypes = val; }, function (table) { return table.lookTypes; });
        this.borders = new TableComplexPropertyWithUseManipulator(manipulator, json_table_enums_1.JSONEnumTableProperty.Borders, [table_properties_1.TablePropertiesMask.UseTopBorder, table_properties_1.TablePropertiesMask.UseRightBorder, table_properties_1.TablePropertiesMask.UseBottomBorder, table_properties_1.TablePropertiesMask.UseLeftBorder, table_properties_1.TablePropertiesMask.UseInsideHorizontalBorder, table_properties_1.TablePropertiesMask.UseInsideVerticalBorder], function (prop, vals) {
            prop.borders.topBorder = vals[0] || prop.borders.topBorder;
            prop.borders.rightBorder = vals[1] || prop.borders.rightBorder;
            prop.borders.bottomBorder = vals[2] || prop.borders.bottomBorder;
            prop.borders.leftBorder = vals[3] || prop.borders.leftBorder;
            prop.borders.insideHorizontalBorder = vals[4] || prop.borders.insideHorizontalBorder;
            prop.borders.insideVerticalBorder = vals[5] || prop.borders.insideVerticalBorder;
        }, function (prop) { return [prop.borders.topBorder, prop.borders.rightBorder, prop.borders.bottomBorder, prop.borders.leftBorder, prop.borders.insideHorizontalBorder, prop.borders.insideVerticalBorder]; });
        this.tableStyleColumnBandSize = new TablePropertiesWithUseManipulatorCore(manipulator, json_table_enums_1.JSONEnumTableProperty.TableStyleColBandSize, table_properties_1.TablePropertiesMask.UseTableStyleColBandSize, function (prop, val) { return prop.tableStyleColumnBandSize = val; }, function (prop) { return prop.tableStyleColumnBandSize; });
        this.tableStyleRowBandSize = new TablePropertiesWithUseManipulatorCore(manipulator, json_table_enums_1.JSONEnumTableProperty.TableStyleRowBandSize, table_properties_1.TablePropertiesMask.UseTableStyleRowBandSize, function (prop, val) { return prop.tableStyleRowBandSize = val; }, function (prop) { return prop.tableStyleRowBandSize; });
        this.avoidDoubleBorders = new TablePropertiesWithUseManipulatorCore(manipulator, json_table_enums_1.JSONEnumTableProperty.AvoidDoubleBorders, table_properties_1.TablePropertiesMask.UseAvoidDoubleBorders, function (prop, val) { return prop.avoidDoubleBorders = val; }, function (prop) { return prop.avoidDoubleBorders; });
        this.layoutType = new TablePropertiesWithUseManipulatorCore(manipulator, json_table_enums_1.JSONEnumTableProperty.LayoutType, table_properties_1.TablePropertiesMask.UseTableLayout, function (prop, val) { return prop.layoutType = val; }, function (prop) { return prop.layoutType; });
        this.shadingInfo = new TablePropertiesWithUseManipulatorCore(manipulator, json_table_enums_1.JSONEnumTableProperty.ShadingInfo, table_properties_1.TablePropertiesMask.UseShadingInfoIndex, function (prop, val) { return prop.shadingInfo = val; }, function (prop) { return prop.shadingInfo; });
        this.tableRowAlignment = new TablePropertiesWithUseManipulatorCore(manipulator, json_table_enums_1.JSONEnumTableProperty.TableRowAlignment, table_properties_1.TablePropertiesMask.UseTableAlignment, function (prop, val) { return prop.tableRowAlignment = val; }, function (prop) { return prop.tableRowAlignment; });
        this.isTableOverlap = new TablePropertiesWithUseManipulatorCore(manipulator, json_table_enums_1.JSONEnumTableProperty.IsTableOverlap, table_properties_1.TablePropertiesMask.UseIsTableOverlap, function (prop, val) { return prop.isTableOverlap = val; }, function (prop) { return prop.isTableOverlap; });
    }
    return TablePropertiesManipulator;
}());
exports.TablePropertiesManipulator = TablePropertiesManipulator;
var TablePropertiesManipulatorCore = (function () {
    function TablePropertiesManipulatorCore(manipulator, jsonTableProperty, setProperty, getProperty) {
        this.manipulator = manipulator;
        this.jsonTableProperty = jsonTableProperty;
        this.setProperty = setProperty;
        this.getProperty = getProperty;
    }
    TablePropertiesManipulatorCore.prototype.setValue = function (subDocument, tableIndex, newValue) {
        var table = subDocument.tables[tableIndex];
        var tableStartPosition = table.getStartPosition();
        var newState = new history_item_state_1.HistoryItemState();
        var oldState = new history_item_state_1.HistoryItemState();
        oldState.register(new history_item_state_object_1.HistoryItemTableStateObject(tableStartPosition, table.nestedLevel, tableIndex, this.getProperty(table)));
        this.setProperty(table, newValue);
        newState.register(new history_item_state_object_1.HistoryItemTableStateObject(tableStartPosition, table.nestedLevel, tableIndex, newValue));
        this.manipulator.notifyModelChanged(new property_changed_1.TablePropertyChangedSubDocumentChange(subDocument, this.jsonTableProperty, newState));
        return oldState;
    };
    TablePropertiesManipulatorCore.prototype.restoreValue = function (subDocument, state) {
        var table = subDocument.tables[state.lastObject.tableIndex];
        this.setProperty(table, state.lastObject.value);
        this.manipulator.notifyModelChanged(new property_changed_1.TablePropertyChangedSubDocumentChange(subDocument, this.jsonTableProperty, state));
    };
    return TablePropertiesManipulatorCore;
}());
var TableComplexPropertyWithUseManipulator = (function () {
    function TableComplexPropertyWithUseManipulator(manipulator, jsonTableProperty, masks, setProperties, getProperties) {
        this.manipulator = manipulator;
        this.jsonTableProperty = jsonTableProperty;
        this.setProperties = setProperties;
        this.getProperties = getProperties;
        this.masks = masks;
    }
    TableComplexPropertyWithUseManipulator.prototype.setValue = function (subDocument, tableIndex, newValues, newUses) {
        var table = subDocument.tables[tableIndex];
        var tableStartPosition = table.getStartPosition();
        var newState = new history_item_state_1.HistoryItemState();
        var oldState = new history_item_state_1.HistoryItemState();
        var properties = table.properties;
        var oldUseValues = [];
        for (var _i = 0, _a = this.masks; _i < _a.length; _i++) {
            var mask = _a[_i];
            oldUseValues.push(properties.getUseValue(mask));
        }
        oldState.register(new history_item_state_object_1.HistoryItemTableComplexUseStateObject(tableStartPosition, table.nestedLevel, tableIndex, this.getProperties(properties), oldUseValues));
        this.setValuesCore(table, newValues, newUses);
        newState.register(new history_item_state_object_1.HistoryItemTableComplexUseStateObject(tableStartPosition, table.nestedLevel, tableIndex, newValues, newUses));
        this.manipulator.notifyModelChanged(new property_changed_1.TablePropertyChangedSubDocumentChange(subDocument, this.jsonTableProperty, newState));
        return oldState;
    };
    TableComplexPropertyWithUseManipulator.prototype.restoreValue = function (subDocument, state) {
        var table = subDocument.tables[state.lastObject.tableIndex];
        this.setValuesCore(table, state.lastObject.value, state.lastObject.uses);
        this.manipulator.notifyModelChanged(new property_changed_1.TablePropertyChangedSubDocumentChange(subDocument, this.jsonTableProperty, state));
    };
    TableComplexPropertyWithUseManipulator.prototype.setValuesCore = function (table, newValues, newUses) {
        var properties = table.properties.clone();
        this.setProperties(properties, newValues);
        for (var i = this.masks.length - 1; i >= 0; i--) {
            if (newUses[i] !== undefined)
                properties.setUseValue(this.masks[i], newUses[i]);
        }
        table.properties = properties;
    };
    return TableComplexPropertyWithUseManipulator;
}());
var TablePropertiesWithUseManipulatorCore = (function () {
    function TablePropertiesWithUseManipulatorCore(manipulator, jsonTableProperty, tablePropertiesMask, setProperty, getProperty) {
        this.manipulator = manipulator;
        this.tablePropertiesMask = tablePropertiesMask;
        this.jsonTableProperty = jsonTableProperty;
        this.setProperty = setProperty;
        this.getProperty = getProperty;
    }
    TablePropertiesWithUseManipulatorCore.prototype.setValue = function (subDocument, tableIndex, newValue, newUse) {
        var table = subDocument.tables[tableIndex];
        var tableStartPosition = table.getStartPosition();
        var newState = new history_item_state_1.HistoryItemState();
        var oldState = new history_item_state_1.HistoryItemState();
        var properties = table.properties;
        oldState.register(new history_item_state_object_1.HistoryItemTableUseStateObject(tableStartPosition, table.nestedLevel, tableIndex, this.getProperty(properties), properties.getUseValue(this.tablePropertiesMask)));
        this.setValueCore(table, newValue, newUse);
        newState.register(new history_item_state_object_1.HistoryItemTableUseStateObject(tableStartPosition, table.nestedLevel, tableIndex, newValue, newUse));
        this.manipulator.notifyModelChanged(new property_changed_1.TablePropertyChangedSubDocumentChange(subDocument, this.jsonTableProperty, newState));
        return oldState;
    };
    TablePropertiesWithUseManipulatorCore.prototype.restoreValue = function (subDocument, state) {
        var table = subDocument.tables[state.lastObject.tableIndex];
        this.setValueCore(table, state.lastObject.value, state.lastObject.use);
        this.manipulator.notifyModelChanged(new property_changed_1.TablePropertyChangedSubDocumentChange(subDocument, this.jsonTableProperty, state));
    };
    TablePropertiesWithUseManipulatorCore.prototype.setValueCore = function (table, newValue, newUse) {
        var properties = table.properties.clone();
        this.setProperty(properties, newValue);
        properties.setUseValue(this.tablePropertiesMask, newUse);
        table.properties = properties;
    };
    return TablePropertiesWithUseManipulatorCore;
}());
