"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var errors_1 = require("@devexpress/utils/lib/errors");
var enums_1 = require("./enums");
var enums_2 = require("./section/enums");
var SubDocumentInfoBase = (function () {
    function SubDocumentInfoBase(subDocumentId) {
        this.isMain = true;
        this.isHeaderFooter = false;
        this.isFooter = false;
        this.isHeader = false;
        this.isNote = false;
        this.isFootNote = false;
        this.isEndNote = false;
        this.isTextBox = false;
        this.isComment = false;
        this.isReferenced = true;
        this.subDocumentId = subDocumentId;
    }
    SubDocumentInfoBase.prototype.getEndPosition = function (documentModel) {
        return documentModel.subDocuments[this.subDocumentId].getLastChunk().getEndPosition();
    };
    SubDocumentInfoBase.prototype.getSubDocument = function (documentModel) {
        return documentModel.subDocuments[this.subDocumentId];
    };
    SubDocumentInfoBase.create = function (type, subDocumentId, parentSubDocumentId) {
        switch (type) {
            case enums_1.SubDocumentInfoType.Main:
                return new MainSubDocumentInfo();
            case enums_1.SubDocumentInfoType.Header:
                return new HeaderSubDocumentInfo(subDocumentId);
            case enums_1.SubDocumentInfoType.Footer:
                return new FooterSubDocumentInfo(subDocumentId);
            case enums_1.SubDocumentInfoType.TextBox:
                return new TextBoxSubDocumentInfoBase(subDocumentId, parentSubDocumentId);
        }
        throw new Error(errors_1.Errors.NotImplemented);
    };
    return SubDocumentInfoBase;
}());
exports.SubDocumentInfoBase = SubDocumentInfoBase;
var TextBoxSubDocumentInfoBase = (function (_super) {
    tslib_1.__extends(TextBoxSubDocumentInfoBase, _super);
    function TextBoxSubDocumentInfoBase(subDocumentId, parentSubDocumentId) {
        var _this = _super.call(this, subDocumentId) || this;
        _this.isMain = false;
        _this.isTextBox = true;
        _this.parentSubDocumentId = parentSubDocumentId;
        return _this;
    }
    TextBoxSubDocumentInfoBase.prototype.getType = function () {
        return enums_1.SubDocumentInfoType.TextBox;
    };
    TextBoxSubDocumentInfoBase.prototype.clone = function () {
        return new TextBoxSubDocumentInfoBase(this.subDocumentId, this.parentSubDocumentId);
    };
    return TextBoxSubDocumentInfoBase;
}(SubDocumentInfoBase));
exports.TextBoxSubDocumentInfoBase = TextBoxSubDocumentInfoBase;
var MainSubDocumentInfo = (function (_super) {
    tslib_1.__extends(MainSubDocumentInfo, _super);
    function MainSubDocumentInfo() {
        return _super.call(this, 0) || this;
    }
    MainSubDocumentInfo.prototype.getType = function () {
        return enums_1.SubDocumentInfoType.Main;
    };
    MainSubDocumentInfo.prototype.getEndPosition = function (documentModel) {
        var sections = documentModel.sections;
        var lastSection = sections[sections.length - 1];
        return lastSection.startLogPosition.value + lastSection.getLength();
    };
    MainSubDocumentInfo.prototype.clone = function () {
        return new MainSubDocumentInfo();
    };
    return MainSubDocumentInfo;
}(SubDocumentInfoBase));
exports.MainSubDocumentInfo = MainSubDocumentInfo;
var HeaderFooterSubDocumentInfoBase = (function (_super) {
    tslib_1.__extends(HeaderFooterSubDocumentInfoBase, _super);
    function HeaderFooterSubDocumentInfoBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.headerFooterType = enums_2.HeaderFooterType.Odd;
        _this.isMain = false;
        _this.isHeaderFooter = true;
        return _this;
    }
    return HeaderFooterSubDocumentInfoBase;
}(SubDocumentInfoBase));
exports.HeaderFooterSubDocumentInfoBase = HeaderFooterSubDocumentInfoBase;
var HeaderSubDocumentInfo = (function (_super) {
    tslib_1.__extends(HeaderSubDocumentInfo, _super);
    function HeaderSubDocumentInfo() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isHeader = true;
        return _this;
    }
    HeaderSubDocumentInfo.prototype.getType = function () {
        return enums_1.SubDocumentInfoType.Header;
    };
    HeaderSubDocumentInfo.prototype.clone = function () {
        return new HeaderSubDocumentInfo(this.subDocumentId);
    };
    return HeaderSubDocumentInfo;
}(HeaderFooterSubDocumentInfoBase));
exports.HeaderSubDocumentInfo = HeaderSubDocumentInfo;
var FooterSubDocumentInfo = (function (_super) {
    tslib_1.__extends(FooterSubDocumentInfo, _super);
    function FooterSubDocumentInfo() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isFooter = true;
        return _this;
    }
    FooterSubDocumentInfo.prototype.getType = function () {
        return enums_1.SubDocumentInfoType.Footer;
    };
    FooterSubDocumentInfo.prototype.clone = function () {
        return new FooterSubDocumentInfo(this.subDocumentId);
    };
    return FooterSubDocumentInfo;
}(HeaderFooterSubDocumentInfoBase));
exports.FooterSubDocumentInfo = FooterSubDocumentInfo;
