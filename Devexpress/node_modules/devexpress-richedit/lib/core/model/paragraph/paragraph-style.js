"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var search_1 = require("@devexpress/utils/lib/utils/search");
var numbering_list_1 = require("../numbering-lists/numbering-list");
var style_base_1 = require("../style-base");
var ParagraphStyle = (function (_super) {
    tslib_1.__extends(ParagraphStyle, _super);
    function ParagraphStyle(styleName, localizedName, deleted, hidden, semihidden, isDefault, maskedCharacterProperties, maskedParagraphProperties, tabs, autoUpdate, numberingListIndex, listLevelIndex, base64EncodedImage, id) {
        var _this = _super.call(this, styleName, localizedName, deleted, hidden, semihidden, isDefault, base64EncodedImage, id) || this;
        _this.linkedStyle = null;
        _this.nextParagraphStyle = null;
        _this.maskedCharacterProperties = maskedCharacterProperties;
        _this.maskedParagraphProperties = maskedParagraphProperties;
        _this.tabs = tabs;
        _this.autoUpdate = autoUpdate;
        _this.numberingListIndex = numberingListIndex;
        _this.listLevelIndex = listLevelIndex;
        return _this;
    }
    ParagraphStyle.prototype.getNumberingListIndex = function () {
        if (this.numberingListIndex >= 0 || this.numberingListIndex === numbering_list_1.NumberingList.NoNumberingListIndex || !this.parent)
            return this.numberingListIndex;
        else
            return this.parent.getNumberingListIndex();
    };
    ParagraphStyle.prototype.getListLevelIndex = function () {
        if (this.listLevelIndex >= 0 || this.listLevelIndex === numbering_list_1.NumberingList.NoNumberingListIndex || !this.parent)
            return this.listLevelIndex;
        else
            return this.parent.getListLevelIndex();
    };
    ParagraphStyle.prototype.clone = function () {
        var style = new ParagraphStyle(this.styleName, this.localizedName, this.deleted, this.hidden, this.semihidden, this.isDefault, this.maskedCharacterProperties, this.maskedParagraphProperties, this.tabs.clone(), this.autoUpdate, this.numberingListIndex, this.listLevelIndex, this.base64EncodedImage, this.id);
        style.parent = this.parent;
        style.linkedStyle = this.linkedStyle;
        style.nextParagraphStyle = this.nextParagraphStyle;
        style.primary = this.primary;
        return style;
    };
    ParagraphStyle.normalStyleName = "Normal";
    ParagraphStyle.headingStyleName = "heading";
    ParagraphStyle.tocStyleName = "toc";
    return ParagraphStyle;
}(style_base_1.StyleBase));
exports.ParagraphStyle = ParagraphStyle;
var TabProperties = (function () {
    function TabProperties() {
        this.tabsInfo = [];
    }
    TabProperties.prototype.clone = function () {
        var tabProperties = new TabProperties();
        for (var _i = 0, _a = this.tabsInfo; _i < _a.length; _i++) {
            var tab = _a[_i];
            tabProperties.tabsInfo.push(tab.clone());
        }
        return tabProperties;
    };
    TabProperties.prototype.equals = function (obj) {
        for (var i = 0, tab; tab = this.tabsInfo[i]; i++)
            if (!tab.equals(obj.tabsInfo[i]))
                return false;
        return true;
    };
    TabProperties.prototype.sort = function () {
        this.tabsInfo.sort(function (a, b) { return a.position - b.position; });
    };
    TabProperties.prototype.indexOf = function (tabInfo) {
        return search_1.SearchUtils.binaryIndexOf(this.tabsInfo, function (t) { return t.position - tabInfo.position; });
    };
    TabProperties.prototype.add = function (tabInfo) {
        this.tabsInfo.push(tabInfo);
        this.sort();
    };
    TabProperties.prototype.deleteByIndex = function (index) {
        this.tabsInfo.splice(index, 1);
    };
    TabProperties.prototype.setTabs = function (tabProp) {
        this.tabsInfo = tabProp.tabsInfo;
        this.tabsInfo.sort(function (a, b) { return a.position - b.position; });
    };
    return TabProperties;
}());
exports.TabProperties = TabProperties;
var TabInfo = (function () {
    function TabInfo(position, alignment, leader, deleted, isDefault) {
        this.position = position;
        this.alignment = alignment;
        this.leader = leader;
        this.isDefault = isDefault;
        this.deleted = deleted;
    }
    TabInfo.prototype.clone = function () {
        return new TabInfo(this.position, this.alignment, this.leader, this.deleted, this.isDefault);
    };
    TabInfo.prototype.equals = function (obj) {
        if (!obj)
            return false;
        return this.alignment == obj.alignment &&
            this.leader == obj.leader &&
            this.position == obj.position &&
            this.deleted == obj.deleted &&
            this.isDefault == obj.isDefault;
    };
    return TabInfo;
}());
exports.TabInfo = TabInfo;
