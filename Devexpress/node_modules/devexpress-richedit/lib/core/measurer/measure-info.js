"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var encode_1 = require("@devexpress/utils/lib/utils/encode");
var html_converter_1 = require("../rich-utils/html-converter");
var MeasureInfo = (function () {
    function MeasureInfo(text, charProp) {
        this.text = text;
        this.charProp = charProp;
        this.resultSize = this.charProp.getSize(this.text);
    }
    Object.defineProperty(MeasureInfo.prototype, "signCssString", {
        get: function () {
            return html_converter_1.HtmlConverter.getSizeSignificantCssString(this.charProp);
        },
        enumerable: true,
        configurable: true
    });
    return MeasureInfo;
}());
exports.MeasureInfo = MeasureInfo;
var MeasureInfoText = (function (_super) {
    tslib_1.__extends(MeasureInfoText, _super);
    function MeasureInfoText() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MeasureInfoText.prototype.getEncodedText = function () {
        return encode_1.EncodeUtils.encodeHtml(this.text);
    };
    return MeasureInfoText;
}(MeasureInfo));
exports.MeasureInfoText = MeasureInfoText;
var MeasureInfoNonText = (function (_super) {
    tslib_1.__extends(MeasureInfoNonText, _super);
    function MeasureInfoNonText() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MeasureInfoNonText.prototype.getEncodedText = function () {
        return this.text;
    };
    return MeasureInfoNonText;
}(MeasureInfo));
exports.MeasureInfoNonText = MeasureInfoNonText;
