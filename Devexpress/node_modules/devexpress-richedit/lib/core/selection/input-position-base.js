"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var enum_1 = require("@devexpress/utils/lib/utils/enum");
var list_1 = require("@devexpress/utils/lib/utils/list");
var search_1 = require("@devexpress/utils/lib/utils/search");
var character_property_descriptor_1 = require("../model/character/character-property-descriptor");
var field_1 = require("../model/fields/field");
var model_iterator_1 = require("../model/model-iterator");
var paragraph_properties_1 = require("../model/paragraph/paragraph-properties");
var run_type_1 = require("../model/runs/run-type");
var properties_bundle_1 = require("../rich-utils/properties-bundle");
var InputPositionBase = (function () {
    function InputPositionBase() {
    }
    Object.defineProperty(InputPositionBase.prototype, "model", {
        get: function () { return this.intervalsInfo.subDocument.documentModel; },
        enumerable: true,
        configurable: true
    });
    ;
    InputPositionBase.prototype.resetParagraphMergedProperties = function () {
        this.mergedParagraphPropertiesRaw = null;
        this.mergedParagraphPropertiesFull = null;
    };
    Object.defineProperty(InputPositionBase.prototype, "charPropsBundle", {
        get: function () {
            return new properties_bundle_1.MaskedCharacterPropertiesBundle(this.getMaskedCharacterProperties().clone(), this.getCharacterStyle());
        },
        enumerable: true,
        configurable: true
    });
    InputPositionBase.prototype.setIntervals = function (intervalsInfo) {
        this.intervalsInfo = intervalsInfo.clone();
        this.resetReturnValues();
        return this;
    };
    InputPositionBase.prototype.getCharacterStyle = function () {
        if (!this.characterStyle)
            this.characterStyle = this.getCharacterStyleInternal();
        return this.characterStyle;
    };
    InputPositionBase.prototype.setCharacterStyle = function (characterStyle) {
        this.characterStyle = characterStyle;
    };
    InputPositionBase.prototype.getMaskedCharacterProperties = function () {
        if (!this.maskedCharacterProperties) {
            this.setSourceRun();
            this.maskedCharacterProperties = this.sourceRun.maskedCharacterProperties.clone();
        }
        return this.maskedCharacterProperties;
    };
    InputPositionBase.prototype.getMergedCharacterPropertiesRaw = function () {
        if (!this.mergedCharacterPropertiesRaw)
            this.setMergedCharacterAndParagraphPropertiesRaw();
        return this.mergedCharacterPropertiesRaw;
    };
    InputPositionBase.prototype.getMergedCharacterPropertiesFull = function () {
        if (!this.mergedCharacterPropertiesFull)
            this.mergedCharacterPropertiesFull = InputPositionBase.mergePropertiesFull(this.getMergedCharacterPropertiesRaw(), character_property_descriptor_1.CharacterPropertyDescriptor.ALL_FIELDS);
        return this.mergedCharacterPropertiesFull;
    };
    InputPositionBase.prototype.getMergedParagraphPropertiesRaw = function () {
        if (!this.mergedParagraphPropertiesRaw)
            this.setMergedCharacterAndParagraphPropertiesRaw();
        return this.mergedParagraphPropertiesRaw;
    };
    InputPositionBase.prototype.getMergedParagraphPropertiesFull = function () {
        if (!this.mergedParagraphPropertiesFull)
            this.mergedParagraphPropertiesFull = InputPositionBase.mergePropertiesFull(this.getMergedParagraphPropertiesRaw(), paragraph_properties_1.ParagraphPropertyDescriptor.ALL_FIELDS);
        return this.mergedParagraphPropertiesFull;
    };
    InputPositionBase.prototype.setMergedCharacterAndParagraphPropertiesRaw = function () {
        this.setSourceRun();
        this.mergedCharacterPropertiesRaw = this.sourceRun.getCharacterMergedProperties().clone();
        this.mergedParagraphPropertiesRaw = this.sourceRun.paragraph.getParagraphMergedProperties().clone();
        var interval = this.intervalsInfo.interval;
        var intervalStartPosition = interval.start;
        var intervalEndPosition = interval.end;
        var chunks = this.intervalsInfo.subDocument.chunks;
        var chunkIndex = search_1.SearchUtils.normedInterpolationIndexOf(chunks, function (c) { return c.startLogPosition.value; }, intervalStartPosition);
        var chunk = chunks[chunkIndex];
        var runIndex = search_1.SearchUtils.normedInterpolationIndexOf(chunk.textRuns, function (r) { return chunk.startLogPosition.value + r.startOffset; }, intervalStartPosition);
        var prevParagraph = this.sourceRun.paragraph;
        exitBothLoops: for (; chunk = chunks[chunkIndex]; chunkIndex++) {
            for (var run; run = chunk.textRuns[runIndex]; runIndex++) {
                if (chunk.startLogPosition.value + run.startOffset >= intervalEndPosition)
                    break exitBothLoops;
                if (run !== this.sourceRun) {
                    if (run.getType() === run_type_1.RunType.TextRun)
                        InputPositionBase.mergePropertiesRaw(this.mergedCharacterPropertiesRaw, run.getCharacterMergedProperties(), character_property_descriptor_1.CharacterPropertyDescriptor.ALL_FIELDS);
                    if (prevParagraph !== run.paragraph) {
                        InputPositionBase.mergePropertiesRaw(this.mergedParagraphPropertiesRaw, run.paragraph.getParagraphMergedProperties(), paragraph_properties_1.ParagraphPropertyDescriptor.ALL_FIELDS);
                        prevParagraph = run.paragraph;
                    }
                }
            }
        }
    };
    InputPositionBase.mergePropertiesRaw = function (sourceProps, otherProps, descriptors) {
        for (var i = 0, desc; desc = descriptors[i]; i++) {
            if (!desc.binaryEquals(desc.getProp(sourceProps), desc.getProp(otherProps)))
                desc.setProp(sourceProps, undefined);
        }
    };
    InputPositionBase.mergePropertiesFull = function (sourceProps, descriptors) {
        var result = sourceProps.clone();
        for (var i = 0, desc; desc = descriptors[i]; i++) {
            if (desc.getProp(result) === undefined)
                desc.setProp(result, desc.defaultValue);
        }
        return result;
    };
    InputPositionBase.prototype.getCharacterStyleInternal = function () {
        var interval = this.intervalsInfo.interval;
        if (interval.length == 0)
            return this.getCharacterStyleCollapsedIntervalInternal(interval.start);
        var chunks = this.intervalsInfo.subDocument.chunks;
        var intervalStartPosition = interval.start;
        var intervalEndPosition = interval.end;
        var firstRun = this.intervalsInfo.subDocument.getRunAndIndexesByPosition(intervalStartPosition);
        if (intervalStartPosition == firstRun.run.paragraph.startLogPosition.value && firstRun.run.paragraph.length > 1)
            return firstRun.run.characterStyle;
        if (intervalStartPosition > 0) {
            var prevFirstRun = this.intervalsInfo.subDocument.getRunAndIndexesByPosition(intervalStartPosition - 1);
            if (prevFirstRun.run.getType() == run_type_1.RunType.TextRun)
                return prevFirstRun.run.characterStyle;
        }
        for (var chunk, chunkIndex = firstRun.chunkIndex; chunk = chunks[chunkIndex]; chunkIndex++) {
            for (var run, runIndex = firstRun.runIndex; run = chunk.textRuns[runIndex]; runIndex++) {
                if (chunk.startLogPosition.value + run.startOffset >= intervalEndPosition)
                    return firstRun.run.characterStyle;
                if (run.getType() == run_type_1.RunType.TextRun)
                    return run.characterStyle;
            }
        }
        return firstRun.run.characterStyle;
    };
    InputPositionBase.prototype.isHyperlinkField = function (resultRunPosition) {
        resultRunPosition++;
        var fields = this.intervalsInfo.subDocument.fields;
        return fields[0] && list_1.ListUtils.reverseElementBy(fields, function (f) { return f.getFieldEndPosition() == resultRunPosition; }, Math.max(0, field_1.Field.normedBinaryIndexOf(fields, resultRunPosition))).isHyperlinkField();
    };
    InputPositionBase.prototype.getCharacterStyleCollapsedIntervalInternal = function (intervalStartPosition) {
        var chunks = this.intervalsInfo.subDocument.chunks;
        if (intervalStartPosition == 0)
            return chunks[0].textRuns[0].characterStyle;
        var iter = new model_iterator_1.ModelIterator(this.intervalsInfo.subDocument, false);
        iter.setPosition(intervalStartPosition - 1);
        if (!iter.run.isParagraphOrSectionRun() && !(iter.run.getType() == run_type_1.RunType.FieldResultEndRun && this.isHyperlinkField(iter.getAbsolutePosition())))
            return iter.run.characterStyle;
        iter.moveToNextRun();
        return iter.run.characterStyle;
    };
    InputPositionBase.prototype.setSourceRun = function () {
        if (this.sourceRun)
            return;
        var interval = this.intervalsInfo.interval;
        if (interval.length == 0) {
            if (interval.start == 0) {
                var firstChunk = this.intervalsInfo.subDocument.chunks[0];
                this.sourceRun = firstChunk ? firstChunk.textRuns[0].clone() : null;
            }
            else {
                var iter = new model_iterator_1.ModelIterator(this.intervalsInfo.subDocument, false);
                iter.setPosition(interval.start - 1);
                if (!enum_1.EnumUtils.isAnyOf(iter.run.getType(), run_type_1.RunType.TextRun, run_type_1.RunType.FieldResultEndRun))
                    iter.moveToNextRun();
                this.sourceRun = iter.run.clone();
            }
        }
        else {
            var firstRunInInterval = this.intervalsInfo.subDocument.getRunByPosition(interval.start);
            if (firstRunInInterval.getType() == run_type_1.RunType.TextRun) {
                this.sourceRun = firstRunInInterval.clone();
                return;
            }
            var intervalEnd = interval.end;
            var lastRunInInterval = this.intervalsInfo.subDocument.getRunByPosition(intervalEnd - 1);
            var lastSection = this.model.sections[this.model.sections.length - 1];
            if (intervalEnd == lastSection.getEndPosition() && intervalEnd > 2)
                lastRunInInterval = this.intervalsInfo.subDocument.getRunByPosition(intervalEnd - 2);
            if (lastRunInInterval.getType() == run_type_1.RunType.TextRun) {
                this.sourceRun = lastRunInInterval.clone();
                return;
            }
            this.sourceRun = firstRunInInterval.clone();
        }
    };
    InputPositionBase.prototype.resetReturnValues = function () {
        this.sourceRun = null;
        this.characterStyle = null;
        this.maskedCharacterProperties = null;
        this.mergedCharacterPropertiesRaw = null;
        this.mergedCharacterPropertiesFull = null;
        this.mergedParagraphPropertiesRaw = null;
        this.mergedParagraphPropertiesFull = null;
    };
    InputPositionBase.prototype.getAllCharacterProperties = function () {
        return new InputPositionCharacterProperties(this.getMaskedCharacterProperties().clone(), this.getMergedCharacterPropertiesRaw().clone(), this.mergedCharacterPropertiesFull ? this.mergedCharacterPropertiesFull.clone() : null);
    };
    InputPositionBase.prototype.applyAllCharacterProperties = function (props) {
        this.setSourceRun();
        this.sourceRun.maskedCharacterProperties = this.maskedCharacterProperties = props.maskedCharacterProperties;
        this.sourceRun.setCharacterMergedProperies(this.mergedCharacterPropertiesRaw = props.mergedCharacterPropertiesRaw);
        this.mergedCharacterPropertiesFull = props.mergedCharacterPropertiesFull;
    };
    return InputPositionBase;
}());
exports.InputPositionBase = InputPositionBase;
var InputPositionCharacterProperties = (function () {
    function InputPositionCharacterProperties(maskedCharacterProperties, mergedCharacterPropertiesRaw, mergedCharacterPropertiesFull) {
        this.maskedCharacterProperties = maskedCharacterProperties;
        this.mergedCharacterPropertiesRaw = mergedCharacterPropertiesRaw;
        this.mergedCharacterPropertiesFull = mergedCharacterPropertiesFull;
    }
    return InputPositionCharacterProperties;
}());
exports.InputPositionCharacterProperties = InputPositionCharacterProperties;
