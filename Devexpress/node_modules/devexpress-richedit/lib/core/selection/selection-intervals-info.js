"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fixed_1 = require("@devexpress/utils/lib/intervals/fixed");
var list_1 = require("@devexpress/utils/lib/utils/list");
var sub_document_1 = require("../model/sub-document");
var selected_cells_engine_1 = require("./selected-cells-engine");
var selected_special_run_info_1 = require("./selected-special-run-info");
var SelectionIntervalsInfo = (function () {
    function SelectionIntervalsInfo(subDocument, intervals, lastIntervalIndex) {
        if (lastIntervalIndex === void 0) { lastIntervalIndex = intervals.length - 1; }
        this.specialRunInfo = new selected_special_run_info_1.SelectedSpecialRunInfo();
        this.subDocument = subDocument;
        this._intervals = intervals;
        this.lastIntervalIndex = lastIntervalIndex;
        this._tableInfo = null;
    }
    SelectionIntervalsInfo.prototype.resetTableInfo = function () {
        this._tableInfo = null;
    };
    Object.defineProperty(SelectionIntervalsInfo.prototype, "tableInfo", {
        get: function () {
            if (!this._tableInfo)
                this._tableInfo = new selected_cells_engine_1.SelectedCellsCalculator().calculate(this.subDocument.tables, this.intervals);
            return this._tableInfo;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SelectionIntervalsInfo.prototype, "intervals", {
        get: function () { return this._intervals; },
        set: function (val) { this._intervals = val; this.lastIntervalIndex = val.length - 1; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SelectionIntervalsInfo.prototype, "interval", {
        get: function () { return this.intervals[this.lastIntervalIndex]; },
        set: function (val) { this._intervals = [val]; this.lastIntervalIndex = 0; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SelectionIntervalsInfo.prototype, "position", {
        get: function () { return this.interval.start; },
        set: function (val) { this._intervals = [new fixed_1.FixedInterval(val, 0)]; this.lastIntervalIndex = 0; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SelectionIntervalsInfo.prototype, "subDocIntervals", {
        get: function () { return new sub_document_1.SubDocumentIntervals(this.subDocument, list_1.ListUtils.deepCopy(this.intervals)); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SelectionIntervalsInfo.prototype, "subDocInterval", {
        get: function () { return new sub_document_1.SubDocumentInterval(this.subDocument, this.interval.clone()); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SelectionIntervalsInfo.prototype, "subDocPosition", {
        get: function () { return new sub_document_1.SubDocumentPosition(this.subDocument, this.position); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SelectionIntervalsInfo.prototype, "multiselection", {
        get: function () { return this.intervals.length > 1; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SelectionIntervalsInfo.prototype, "isCollapsed", {
        get: function () { return !this._intervals[1] && this._intervals[0].isCollapsed(); },
        enumerable: true,
        configurable: true
    });
    SelectionIntervalsInfo.fromPosition = function (subDocument, position) {
        return new SelectionIntervalsInfo(subDocument, [new fixed_1.FixedInterval(position, 0)], 0);
    };
    SelectionIntervalsInfo.fromInterval = function (subDocument, interval) {
        return new SelectionIntervalsInfo(subDocument, [interval], 0);
    };
    SelectionIntervalsInfo.prototype.validateInterval = function () {
        var docEnd = this.subDocument.getDocumentEndPosition();
        for (var _i = 0, _a = this.intervals; _i < _a.length; _i++) {
            var curr = _a[_i];
            curr.start = Math.max(docEnd - 1, curr.start);
            curr.end = Math.max(docEnd - 1, curr.end);
        }
    };
    SelectionIntervalsInfo.prototype.equals = function (obj) {
        return obj &&
            this.subDocument.id == obj.subDocument.id &&
            obj._intervals && list_1.ListUtils.equals(this._intervals, obj._intervals) &&
            this.lastIntervalIndex == obj.lastIntervalIndex;
    };
    SelectionIntervalsInfo.prototype.clone = function () {
        var obj = new SelectionIntervalsInfo(this.subDocument, list_1.ListUtils.deepCopy(this._intervals), this.lastIntervalIndex);
        obj._tableInfo = this._tableInfo;
        obj.specialRunInfo = this.specialRunInfo.clone();
        return obj;
    };
    return SelectionIntervalsInfo;
}());
exports.SelectionIntervalsInfo = SelectionIntervalsInfo;
