import { FixedInterval } from '@devexpress/utils/lib/intervals/fixed';
import { ISubDocumentInterval, ISubDocumentIntervals, ISubDocumentPosition, SubDocument, SubDocumentInterval, SubDocumentIntervals, SubDocumentPosition } from '../model/sub-document';
import { SelectedTableInfo } from './selected-cells-engine';
import { SelectedSpecialRunInfo } from './selected-special-run-info';
export declare class SelectionIntervalsInfo implements ISubDocumentPosition, ISubDocumentInterval, ISubDocumentIntervals {
    private _intervals;
    private _tableInfo;
    specialRunInfo: SelectedSpecialRunInfo;
    subDocument: SubDocument;
    lastIntervalIndex: number;
    resetTableInfo(): void;
    constructor(subDocument: SubDocument, intervals: FixedInterval[], lastIntervalIndex?: number);
    static fromPosition(subDocument: SubDocument, position: number): SelectionIntervalsInfo;
    static fromInterval(subDocument: SubDocument, interval: FixedInterval): SelectionIntervalsInfo;
    validateInterval(): void;
    equals(obj: SelectionIntervalsInfo): boolean;
    clone(): SelectionIntervalsInfo;
    readonly tableInfo: SelectedTableInfo;
    intervals: FixedInterval[];
    interval: FixedInterval;
    position: number;
    readonly subDocIntervals: SubDocumentIntervals;
    readonly subDocInterval: SubDocumentInterval;
    readonly subDocPosition: SubDocumentPosition;
    readonly multiselection: boolean;
    readonly isCollapsed: boolean;
}
//# sourceMappingURL=selection-intervals-info.d.ts.map
