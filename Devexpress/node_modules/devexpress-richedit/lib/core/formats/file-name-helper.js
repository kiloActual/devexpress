"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var string_1 = require("@devexpress/utils/lib/utils/string");
var document_format_1 = require("../document-format");
var FileNameHelper = (function () {
    function FileNameHelper(fullPath, isPDF, documentFormat) {
        var pattern = string_1.StringUtils.trim(fullPath).replace(/\//g, "\\").match(/(.*?\\?)([^\\]*)(\..+?)$/i);
        this.isPDF = isPDF;
        this.folderPath = pattern ? FileNameHelper.normalizeVirtualFolderPath(pattern[1], false) : "";
        this.name = pattern ? pattern[2] : fullPath;
        this.extension = this.isPDF ? ".pdf" : (pattern ? pattern[3] : "");
        this.documentFormat = documentFormat ? documentFormat : FileNameHelper.convertToDocumentFormat("." + this.extension);
    }
    FileNameHelper.prototype.getFullPath = function () {
        return this.folderPath + this.name + this.extension;
    };
    FileNameHelper.prototype.checkFileName = function () {
        if (this.name.length === 0)
            throw new Error("File name is not defined");
    };
    FileNameHelper.prototype.checkExtension = function () {
        if (this.extension.length === 0)
            throw new Error("File extension is not defined");
    };
    FileNameHelper.normalizeVirtualFolderPath = function (folderPath, isNormalizePath) {
        if (isNormalizePath)
            folderPath = string_1.StringUtils.trim(folderPath).replace(/\//g, "\\");
        if (folderPath.length == 0 || folderPath == "\\")
            return "";
        return string_1.StringUtils.getSymbolFromEnd(folderPath, 1) == "\\" ? folderPath : folderPath + "\\";
    };
    FileNameHelper.convertToDocumentFormat = function (fileName) {
        var fName = string_1.StringUtils.trim(fileName);
        if (FileNameHelper.testFormat(fName, "doc"))
            return document_format_1.DocumentFormat.Doc;
        if (FileNameHelper.testFormat(fName, "epub"))
            return document_format_1.DocumentFormat.ePub;
        if (FileNameHelper.testFormat(fName, "html") || FileNameHelper.testFormat(fName, "htm"))
            return document_format_1.DocumentFormat.Html;
        if (FileNameHelper.testFormat(fName, "mht"))
            return document_format_1.DocumentFormat.Mht;
        if (FileNameHelper.testFormat(fName, "odt"))
            return document_format_1.DocumentFormat.OpenDocument;
        if (FileNameHelper.testFormat(fName, "docx"))
            return document_format_1.DocumentFormat.OpenXml;
        if (FileNameHelper.testFormat(fName, "txt"))
            return document_format_1.DocumentFormat.PlainText;
        if (FileNameHelper.testFormat(fName, "rtf"))
            return document_format_1.DocumentFormat.Rtf;
        if (FileNameHelper.testFormat(fName, "xml"))
            return document_format_1.DocumentFormat.WordML;
        return document_format_1.DocumentFormat.Undefined;
    };
    FileNameHelper.convertExtensionToDocumentFormat = function (extension) {
        switch (extension.toLowerCase()) {
            case "doc":
            case ".doc": return document_format_1.DocumentFormat.Doc;
            case "epub":
            case ".epub": return document_format_1.DocumentFormat.ePub;
            case "html":
            case ".html":
            case "htm":
            case "htm": return document_format_1.DocumentFormat.Html;
            case "mht":
            case ".mht": return document_format_1.DocumentFormat.Mht;
            case "odt":
            case ".odt": return document_format_1.DocumentFormat.OpenDocument;
            case "docx":
            case ".docx": return document_format_1.DocumentFormat.OpenXml;
            case "txt":
            case ".txt": return document_format_1.DocumentFormat.PlainText;
            case "rtf":
            case ".rtf": return document_format_1.DocumentFormat.Rtf;
            case "xml":
            case ".xml": return document_format_1.DocumentFormat.WordML;
            default: return document_format_1.DocumentFormat.Undefined;
        }
    };
    FileNameHelper.convertToString = function (docFormat) {
        switch (docFormat) {
            case document_format_1.DocumentFormat.Doc: return ".doc";
            case document_format_1.DocumentFormat.ePub: return ".epub";
            case document_format_1.DocumentFormat.Html: return ".html";
            case document_format_1.DocumentFormat.Mht: return ".mht";
            case document_format_1.DocumentFormat.OpenDocument: return ".odt";
            case document_format_1.DocumentFormat.PlainText: return ".txt";
            case document_format_1.DocumentFormat.Rtf: return ".rtf";
            case document_format_1.DocumentFormat.WordML: return ".xml";
            case document_format_1.DocumentFormat.OpenXml: return ".docx";
            default: return "";
        }
    };
    FileNameHelper.testFormat = function (fileName, extension) {
        return new RegExp(".*\\." + extension + "$", "i").test(fileName);
    };
    return FileNameHelper;
}());
exports.FileNameHelper = FileNameHelper;
