"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var algorithms_1 = require("@devexpress/utils/lib/intervals/algorithms");
var fixed_1 = require("@devexpress/utils/lib/intervals/fixed");
var list_1 = require("@devexpress/utils/lib/utils/list");
var search_1 = require("@devexpress/utils/lib/utils/search");
var document_layout_details_level_1 = require("../layout/document-layout-details-level");
var layout_position_1 = require("../layout/layout-position");
var layout_page_1 = require("../layout/main-structures/layout-page");
var log_1 = require("../rich-utils/debug/logger/base-logger/log");
var log_obj_to_str_1 = require("../rich-utils/debug/logger/base-logger/log-obj-to-str");
var PageIndexAndInterval = (function () {
    function PageIndexAndInterval(pageIndex, interval) {
        this.interval = interval;
        this.pageIndex = pageIndex;
    }
    return PageIndexAndInterval;
}());
var LayoutPositionCreatorConflictFlags = (function () {
    function LayoutPositionCreatorConflictFlags() {
    }
    LayoutPositionCreatorConflictFlags.prototype.setDefault = function (defaultVal) {
        this.left = defaultVal;
        this.middle = defaultVal;
        this.right = defaultVal;
        this.simple = defaultVal;
        return this;
    };
    LayoutPositionCreatorConflictFlags.prototype.setCustom = function (left, middle, right, simple) {
        this.left = left;
        this.middle = middle;
        this.right = right;
        this.simple = simple;
        return this;
    };
    LayoutPositionCreatorConflictFlags.prototype.allIsTrue = function () {
        return this.left && this.middle && this.right && this.simple;
    };
    LayoutPositionCreatorConflictFlags.prototype.atLeastOneIsTrue = function () {
        return this.left || this.middle || this.right || this.simple;
    };
    LayoutPositionCreatorConflictFlags.prototype.atLeastOneIsFalse = function () {
        return !(this.left && this.middle && this.right && this.simple);
    };
    LayoutPositionCreatorConflictFlags.prototype.copyFrom = function (obj) {
        this.left = obj.left;
        this.middle = obj.middle;
        this.right = obj.right;
        this.simple = obj.simple;
        return this;
    };
    LayoutPositionCreatorConflictFlags.prototype.clone = function () {
        return new LayoutPositionCreatorConflictFlags().copyFrom(this);
    };
    return LayoutPositionCreatorConflictFlags;
}());
exports.LayoutPositionCreatorConflictFlags = LayoutPositionCreatorConflictFlags;
var LayoutPositionCreator = (function () {
    function LayoutPositionCreator(documentLayout, subDocument, logPosition, detailsLevel) {
        this.layout = documentLayout;
        this.subDocument = subDocument;
        this.position = logPosition;
        this.startPosition = logPosition;
        this.detailsLevel = detailsLevel;
        this.result = new layout_position_1.LayoutPosition(detailsLevel);
    }
    LayoutPositionCreator.prototype.create = function (endRowConflictFlags, middleRowConflictFlags) {
        this.endRowConflictFlags = endRowConflictFlags;
        this.middleRowConflictFlags = middleRowConflictFlags;
        return null;
    };
    LayoutPositionCreator.createLightLayoutPosition = function (documentLayout, subDocument, logPosition, pageIndex, detailsLevel, endOfLine, closerToTheRightEdgeHiddenBox) {
        return (subDocument.isMain() ?
            new LayoutPositionMainSubDocumentCreator(documentLayout, subDocument, logPosition, detailsLevel)
                .create(new LayoutPositionCreatorConflictFlags().setDefault(endOfLine), new LayoutPositionCreatorConflictFlags().setDefault(closerToTheRightEdgeHiddenBox)) :
            new LayoutPositionOtherSubDocumentCreator(documentLayout, subDocument, logPosition, pageIndex, detailsLevel)
                .create(new LayoutPositionCreatorConflictFlags().setDefault(endOfLine), new LayoutPositionCreatorConflictFlags().setDefault(closerToTheRightEdgeHiddenBox)));
    };
    LayoutPositionCreator.prototype.updateRowInfo = function () {
        var _a;
        var rows = this.result.column.rows;
        var rowIndex = search_1.SearchUtils.normedInterpolationIndexOf(rows, function (r) { return r.columnOffset; }, this.position);
        var row = rows[rowIndex];
        _a = LayoutPositionCreator.conflictResolver(this.position, this.endRowConflictFlags, rows, row, rowIndex, function (obj) { return obj.columnOffset; }, function (obj) { return obj.getEndPosition(); }), this.result.row = _a[0], this.result.rowIndex = _a[1];
        if (this.result.detailsLevel > document_layout_details_level_1.DocumentLayoutDetailsLevel.Row) {
            this.position = Math.max(0, this.position - this.result.row.columnOffset);
            this.updateBoxInfo();
        }
    };
    LayoutPositionCreator.prototype.updateBoxInfo = function () {
        var _a;
        var boxes = this.result.row.boxes;
        var boxIndex = Math.max(0, search_1.SearchUtils.normedInterpolationIndexOf(boxes, function (b) { return b.rowOffset; }, this.position));
        var box = boxes[boxIndex];
        _a = LayoutPositionCreator.conflictResolver(this.position, this.middleRowConflictFlags, boxes, box, boxIndex, function (obj) { return obj.rowOffset; }, function (obj) { return obj.getEndPosition(); }), this.result.box = _a[0], this.result.boxIndex = _a[1];
        if (this.result.detailsLevel > document_layout_details_level_1.DocumentLayoutDetailsLevel.Box) {
            this.position = Math.max(0, this.position - this.result.box.rowOffset);
            var boxLength = this.result.box.getLength();
            this.result.charOffset = this.position < boxLength ? this.position : boxLength;
        }
    };
    LayoutPositionCreator.conflictResolver = function (position, conflictFlags, objects, object, objectIndex, getObjectStartPos, getObjectEndPos) {
        var prevObject = objects[objectIndex - 1];
        var objectStartPos = getObjectStartPos(object);
        if (prevObject && objectStartPos == position) {
            var prevObjectEndPos = getObjectEndPos(prevObject);
            if (objectStartPos == prevObjectEndPos)
                return conflictFlags.simple ? [prevObject, objectIndex - 1] : [object, objectIndex];
            else
                return conflictFlags.right ? [prevObject, objectIndex - 1] : [object, objectIndex];
        }
        var nextObject = objects[objectIndex + 1];
        if (nextObject) {
            var objectEndPos = getObjectEndPos(object);
            if (position >= objectEndPos) {
                var nextObjectStartPos = getObjectStartPos(nextObject);
                if (objectEndPos == nextObjectStartPos)
                    return conflictFlags.simple ? [object, objectIndex] : [nextObject, objectIndex + 1];
                if (position == objectEndPos)
                    return conflictFlags.left ? [object, objectIndex] : [nextObject, objectIndex + 1];
                return conflictFlags.middle ? [object, objectIndex] : [nextObject, objectIndex + 1];
            }
        }
        return [object, objectIndex];
    };
    return LayoutPositionCreator;
}());
exports.LayoutPositionCreator = LayoutPositionCreator;
var LayoutPositionMainSubDocumentCreator = (function (_super) {
    tslib_1.__extends(LayoutPositionMainSubDocumentCreator, _super);
    function LayoutPositionMainSubDocumentCreator(documentLayout, subDocument, logPosition, detailsLevel, isUseMoreHardAlgorithm) {
        if (isUseMoreHardAlgorithm === void 0) { isUseMoreHardAlgorithm = false; }
        var _this = _super.call(this, documentLayout, subDocument, logPosition, detailsLevel) || this;
        _this.isUseMoreHardAlgorithm = isUseMoreHardAlgorithm;
        if (!_this.subDocument.isMain())
            throw new Error("LayoutPositionMainSubDocumentCreator need set here main sub document");
        return _this;
    }
    LayoutPositionMainSubDocumentCreator.prototype.create = function (endRowConflictFlags, middleRowConflictFlags) {
        _super.prototype.create.call(this, endRowConflictFlags, middleRowConflictFlags);
        if (this.layout.pages.length)
            this.updatePageInfo();
        else
            this.result = null;
        return this.result;
    };
    LayoutPositionMainSubDocumentCreator.ensureLayoutPosition = function (formatterController, subDocument, logPosition, detailsLevel, endRowConflictFlags, middleRowConflictFlags) {
        var documentLayout = formatterController.layout;
        while (true) {
            var layoutPosition = new LayoutPositionMainSubDocumentCreator(documentLayout, subDocument, logPosition, detailsLevel)
                .create(endRowConflictFlags, middleRowConflictFlags);
            if (layoutPosition)
                break;
            if (!formatterController.forceFormatPage(documentLayout.validPageCount))
                break;
        }
        return layoutPosition;
    };
    LayoutPositionMainSubDocumentCreator.prototype.updatePageInfoInterval = function (validPageCount, pages, foundPage) {
        var _this = this;
        if (foundPage.index == 0 && this.position <= foundPage.getPosition())
            return validPageCount > 0 ? foundPage : null;
        var firstPageInGroupIndex = Math.max(0, layout_page_1.LayoutPage.getFirstPageInGroup(pages, foundPage.index).index - 1);
        var lastPageInGroup = layout_page_1.LayoutPage.getLastValidPageInGroup(pages, foundPage.index, validPageCount, !this.isUseMoreHardAlgorithm, true);
        if (!lastPageInGroup)
            return null;
        var endPageIndex = Math.min(validPageCount, lastPageInGroup.index + 2);
        var intervalsList = [];
        for (var pageIndex = Math.max(0, firstPageInGroupIndex - 1); pageIndex < endPageIndex; pageIndex++) {
            var page = pages[pageIndex];
            page.calculateContentIntervals(this.layout.anchorObjectsPositionInfo, this.isUseMoreHardAlgorithm);
            for (var _i = 0, _a = page.getContentIntervals(); _i < _a.length; _i++) {
                var interval = _a[_i];
                if (interval.containsWithoutIntervalEndAndStart(this.position))
                    return page;
                intervalsList.push(new PageIndexAndInterval(page.index, interval));
            }
        }
        if (intervalsList.length == 0)
            return null;
        intervalsList.sort(function (a, b) { return a.interval.start - b.interval.start; });
        if (log_1.Log.isDebug)
            list_1.ListUtils.forEach(intervalsList, function (a, ind) {
                list_1.ListUtils.forEach(intervalsList, function (b) {
                    if (algorithms_1.IntervalAlgorithms.getIntersectionNonNullLength(a.interval, b.interval))
                        throw new Error("Detected page intervals intersection. It's very bad. " +
                            list_1.ListUtils.map(intervalsList, function (curr) { return log_obj_to_str_1.LogObjToStr.fixedInterval(curr.interval); }).join(", "));
                }, ind + 1);
            });
        var currInfo = intervalsList[0];
        var nextInfo;
        for (var nextInfoIndex = 1; nextInfo = intervalsList[nextInfoIndex]; nextInfoIndex++) {
            if (fixed_1.FixedInterval.fromPositions(currInfo.interval.end, nextInfo.interval.start).containsWithIntervalEnd(this.position))
                break;
            currInfo = nextInfo;
        }
        var firstPageIndex = currInfo.pageIndex;
        var secondPageIndex = nextInfo ? nextInfo.pageIndex : firstPageIndex + 1;
        if (firstPageIndex == secondPageIndex)
            return pages[firstPageIndex];
        if (secondPageIndex >= validPageCount) {
            if (this.layout.isFullyFormatted)
                return pages[firstPageIndex];
            else
                return this.endRowConflictFlags.allIsTrue() &&
                    list_1.ListUtils.unsafeAnyOf(pages[firstPageIndex].getContentIntervals(), function (interval) { return interval.containsWithIntervalEnd(_this.position); }) ? pages[firstPageIndex] : null;
        }
        if (!nextInfo)
            return this.layout.isFullyFormatted ? pages[firstPageIndex] : null;
        return this.getPageResolvedFlag(currInfo.interval.end, nextInfo.interval.start) ? pages[firstPageIndex] : pages[secondPageIndex];
    };
    LayoutPositionMainSubDocumentCreator.prototype.getPageResolvedFlag = function (posA, posB) {
        return posA == posB ? this.endRowConflictFlags.simple :
            (posA == this.position ? this.endRowConflictFlags.left :
                (posB == this.position ? this.endRowConflictFlags.right :
                    this.endRowConflictFlags.middle));
    };
    LayoutPositionMainSubDocumentCreator.prototype.updatePageInfo = function () {
        var validPageCount = this.layout.validPageCount;
        var pages = this.layout.pages;
        var foundPageIndex = Math.max(0, search_1.SearchUtils.normedInterpolationIndexOf(pages, function (p) { return p.getPosition(); }, this.position, 0, validPageCount - 1));
        var foundPage = pages[foundPageIndex];
        if (foundPage)
            this.result.page = this.updatePageInfoInterval(validPageCount, pages, foundPage);
        if (!this.result.page) {
            this.result = null;
            return;
        }
        this.result.pageIndex = this.result.page.index;
        if (this.result.detailsLevel > document_layout_details_level_1.DocumentLayoutDetailsLevel.Page) {
            this.position = Math.max(0, this.position - this.result.page.getPosition());
            this.updatePageAreaInfo();
        }
    };
    LayoutPositionMainSubDocumentCreator.prototype.updatePageAreaInfo = function () {
        var _a;
        var areas = this.result.page.mainSubDocumentPageAreas;
        if (areas.length > 1) {
            var pageAreaIndex = Math.max(0, search_1.SearchUtils.normedInterpolationIndexOf(areas, function (a) { return a.pageOffset; }, this.position));
            var pageArea = areas[pageAreaIndex];
            _a = LayoutPositionCreator.conflictResolver(this.position, this.endRowConflictFlags, areas, pageArea, pageAreaIndex, function (obj) { return obj.pageOffset; }, function (obj) { return obj.getEndPosition(); }), this.result.pageArea = _a[0], this.result.pageAreaIndex = _a[1];
        }
        else {
            this.result.pageAreaIndex = 0;
            this.result.pageArea = areas[0];
        }
        if (this.result.detailsLevel > document_layout_details_level_1.DocumentLayoutDetailsLevel.PageArea) {
            this.position = Math.max(0, this.position - this.result.pageArea.pageOffset);
            this.updateColumnInfo();
        }
    };
    LayoutPositionMainSubDocumentCreator.prototype.updateColumnInfo = function () {
        var _a;
        var columns = this.result.pageArea.columns;
        if (columns.length > 1) {
            var columnIndex = search_1.SearchUtils.normedInterpolationIndexOf(columns, function (c) { return c.pageAreaOffset; }, this.position);
            var column = columns[columnIndex];
            _a = LayoutPositionCreator.conflictResolver(this.position, this.endRowConflictFlags, columns, column, columnIndex, function (obj) { return obj.pageAreaOffset; }, function (obj) { return obj.getEndPosition(); }), this.result.column = _a[0], this.result.columnIndex = _a[1];
        }
        else {
            this.result.columnIndex = 0;
            this.result.column = columns[0];
        }
        if (this.result.detailsLevel > document_layout_details_level_1.DocumentLayoutDetailsLevel.Column) {
            this.position = Math.max(0, this.position - this.result.column.pageAreaOffset);
            this.updateRowInfo();
        }
    };
    return LayoutPositionMainSubDocumentCreator;
}(LayoutPositionCreator));
exports.LayoutPositionMainSubDocumentCreator = LayoutPositionMainSubDocumentCreator;
var LayoutPositionOtherSubDocumentCreator = (function (_super) {
    tslib_1.__extends(LayoutPositionOtherSubDocumentCreator, _super);
    function LayoutPositionOtherSubDocumentCreator(documentLayout, subDocument, logPosition, pageIndex, detailsLevel) {
        var _this = _super.call(this, documentLayout, subDocument, logPosition, detailsLevel) || this;
        if (_this.subDocument.isMain())
            throw new Error("LayoutPositionMainSubDocumentCreator need set here not main sub document");
        _this.result.page = _this.layout.pages[pageIndex];
        _this.result.pageIndex = pageIndex;
        return _this;
    }
    LayoutPositionOtherSubDocumentCreator.prototype.create = function (endRowConflictFlags, middleRowConflictFlags) {
        _super.prototype.create.call(this, endRowConflictFlags, middleRowConflictFlags);
        if (!this.result.page) {
            this.result = null;
            return null;
        }
        this.result.pageArea = this.result.page.otherPageAreas[this.subDocument.id];
        if (!this.result.pageArea) {
            this.result = null;
        }
        else {
            this.result.pageAreaIndex = 0;
            this.position = Math.max(0, this.position - this.result.pageArea.pageOffset);
            this.result.column = this.result.pageArea.columns[0];
            this.result.columnIndex = 0;
            this.position = Math.max(0, this.position - this.result.column.pageAreaOffset);
            this.updateRowInfo();
        }
        return this.result;
    };
    return LayoutPositionOtherSubDocumentCreator;
}(LayoutPositionCreator));
exports.LayoutPositionOtherSubDocumentCreator = LayoutPositionOtherSubDocumentCreator;
