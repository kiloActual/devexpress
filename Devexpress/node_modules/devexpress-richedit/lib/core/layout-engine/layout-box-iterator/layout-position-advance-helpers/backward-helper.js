"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var errors_1 = require("@devexpress/utils/lib/errors");
var number_1 = require("@devexpress/utils/lib/utils/map/number");
var layout_position_1 = require("../../../layout/layout-position");
var layout_table_cell_info_1 = require("../../../layout/table/layout-table-cell-info");
var base_advance_helper_1 = require("./base-advance-helper");
var LayoutPositionAdvanceBackwardHelper = (function (_super) {
    tslib_1.__extends(LayoutPositionAdvanceBackwardHelper, _super);
    function LayoutPositionAdvanceBackwardHelper() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LayoutPositionAdvanceBackwardHelper.prototype.advance = function () {
        if (this.lp.charOffset != 0) {
            layout_position_1.LayoutPositionDiscardHelper.onEndCharLevel(this.lp);
            return true;
        }
        return this.finalHandle(this.advanceBoxSimple(false, false) ? true : this.moveToPrevRow());
    };
    LayoutPositionAdvanceBackwardHelper.prototype.moveToPrevRow = function () {
        var oldCell = this.lp.row.tableCellInfo;
        if (!oldCell) {
            if (!this.advanceRowSimple(true, false))
                return false;
            var cellInfo = this.lp.row.tableCellInfo;
            if (!cellInfo)
                return true;
            this.setOnLastCellOnTable(cellInfo.parentRow.parentTable.logicInfo);
            return true;
        }
        if (this.advanceRowSimple(false, false)) {
            var newCell = this.lp.row.tableCellInfo;
            if (newCell) {
                if (newCell == oldCell || oldCell.parentRow.parentTable.parentCell == newCell)
                    return true;
                if (newCell.parentRow.parentTable.parentCell == oldCell) {
                    this.setOnLastCellOnTable(newCell.parentRow.parentTable.logicInfo);
                    return true;
                }
            }
        }
        return this.moveToPrevCell(oldCell);
    };
    LayoutPositionAdvanceBackwardHelper.prototype.setOnLastCellOnTable = function (logicInfo) {
        var grid = logicInfo.grid;
        var rowIndex = grid.tableCellInfos.length - 1;
        var cellIndex = grid.tableCellInfos[rowIndex].length - 1;
        var prevTableCellGridInfo = base_advance_helper_1.LayoutPositionBaseAdvanceHelper.getNextTableCellGridInfo(false, grid, null, rowIndex, cellIndex);
        this.setRowByGridInfo(false, logicInfo, prevTableCellGridInfo, false, false);
    };
    LayoutPositionAdvanceBackwardHelper.prototype.moveToPrevCell = function (cell) {
        var logicInfo = cell.parentRow.parentTable.logicInfo;
        var grid = logicInfo.grid;
        var rowIndex = cell.parentRow.rowIndex;
        var info = grid.tableCellGridInfos[rowIndex][cell.cellGridIndex];
        if (!cell.boundFlags.get(layout_table_cell_info_1.TableCellBoundFlags.StartOnThisColumn)) {
            this.setRowByGridInfo(false, logicInfo, info, false, true);
            return true;
        }
        var prevTableCellGridInfo = base_advance_helper_1.LayoutPositionBaseAdvanceHelper.getNextTableCellGridInfo(false, grid, info, rowIndex, info.getCellIndex(rowIndex - info.getStartRowIndex()) - 1);
        if (prevTableCellGridInfo) {
            var moveToNext = prevTableCellGridInfo.getEndRowIndex() - 1 >= rowIndex;
            var tmpLp = this.lp.clone();
            if (!this.setRowByGridInfo(false, logicInfo, prevTableCellGridInfo, moveToNext, false)) {
                this.lp.copyFrom(tmpLp);
                if (moveToNext)
                    this.setRowByGridInfo(false, logicInfo, prevTableCellGridInfo, false, true);
                else
                    throw new Error(errors_1.Errors.InternalException);
            }
            return true;
        }
        var parentTbl = cell.parentRow.parentTable;
        var parentCell = parentTbl.parentCell;
        if (parentCell) {
            var indInternalTable = number_1.NumberMapUtils.keyBy(parentCell.internalTables, function (tbl) { return tbl == parentTbl; });
            var row = parentCell.layoutRows[indInternalTable - 1];
            if (row) {
                this.setLayoutRow(row.indexInColumn, false);
                return true;
            }
            if (cell.boundFlags.get(layout_table_cell_info_1.TableCellBoundFlags.StartOnThisColumn))
                return this.moveToPrevCell(parentCell);
            var parentRow = parentCell.parentRow;
            var logicInfo_1 = parentRow.parentTable.logicInfo;
            var info_1 = logicInfo_1.grid.tableCellGridInfos[parentRow.rowIndex][parentCell.cellGridIndex];
            this.setRowByGridInfo(false, logicInfo_1, info_1, false, true);
            return true;
        }
        this.lp.copyFrom(this.oldLp);
        return this.advanceRowSimple(true, false);
    };
    return LayoutPositionAdvanceBackwardHelper;
}(base_advance_helper_1.LayoutPositionBaseAdvanceHelper));
exports.LayoutPositionAdvanceBackwardHelper = LayoutPositionAdvanceBackwardHelper;
