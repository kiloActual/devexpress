"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var list_1 = require("@devexpress/utils/lib/utils/list");
var layout_position_1 = require("../../../layout/layout-position");
var layout_table_cell_info_1 = require("../../../layout/table/layout-table-cell-info");
var table_base_structures_1 = require("../../../model/tables/secondary-structures/table-base-structures");
var LayoutPositionBaseAdvanceHelper = (function () {
    function LayoutPositionBaseAdvanceHelper(lp, layout) {
        this.lp = lp;
        this.layout = layout;
        this.oldLp = lp.clone();
    }
    LayoutPositionBaseAdvanceHelper.prototype.finalHandle = function (result) {
        if (result && !this.lp.page)
            throw new Error("Likely model is incorrect. See last table actions");
        if (result && this.lp.page.isValid)
            return true;
        this.lp.copyFrom(this.oldLp);
        return false;
    };
    LayoutPositionBaseAdvanceHelper.prototype.setLayoutRowInCell = function (cell, onStart) {
        var getInternalTableIndex = onStart ?
            function (_cell) { return 0; } :
            function (cell) { return cell.layoutRows.length; };
        var getInternalTableCell = onStart ?
            function (internalTable) { return internalTable.tableRows[0].rowCells[0]; } :
            function (internalTable) { return list_1.ListUtils.last(list_1.ListUtils.last(internalTable.tableRows).rowCells); };
        var internalTable;
        while (internalTable = cell.internalTables[getInternalTableIndex(cell)])
            cell = getInternalTableCell(internalTable);
        this.setLayoutRow((onStart ? cell.layoutRows[0] : list_1.ListUtils.last(cell.layoutRows)).indexInColumn, onStart);
    };
    LayoutPositionBaseAdvanceHelper.prototype.setLayoutRow = function (rowIndex, onStart) {
        this.lp.rowIndex = rowIndex;
        this.lp.row = this.lp.column.rows[this.lp.rowIndex];
        if (this.lp.row) {
            (onStart ? layout_position_1.LayoutPositionDiscardHelper.onStartBoxLevel : layout_position_1.LayoutPositionDiscardHelper.onEndBoxLevel)(this.lp);
            return true;
        }
        return false;
    };
    LayoutPositionBaseAdvanceHelper.prototype.advanceBoxSimple = function (allowChangeHighLevels, toNext) {
        toNext ? this.lp.boxIndex++ : this.lp.boxIndex--;
        this.lp.box = this.lp.row.boxes[this.lp.boxIndex];
        if (this.lp.box) {
            toNext ? layout_position_1.LayoutPositionDiscardHelper.onStartCharLevel(this.lp) : layout_position_1.LayoutPositionDiscardHelper.onEndCharLevel(this.lp);
            return true;
        }
        return allowChangeHighLevels ? this.advanceRowSimple(true, toNext) : false;
    };
    LayoutPositionBaseAdvanceHelper.prototype.advanceRowSimple = function (allowChangeHighLevels, toNext) {
        toNext ? this.lp.rowIndex++ : this.lp.rowIndex--;
        if (this.setLayoutRow(this.lp.rowIndex, toNext))
            return true;
        return allowChangeHighLevels ? this.advanceColumnSimple(true, toNext) : false;
    };
    LayoutPositionBaseAdvanceHelper.prototype.advanceColumnSimple = function (allowChangeHighLevels, toNext) {
        toNext ? this.lp.columnIndex++ : this.lp.columnIndex--;
        this.lp.column = this.lp.pageArea.columns[this.lp.columnIndex];
        if (this.lp.column) {
            toNext ? layout_position_1.LayoutPositionDiscardHelper.onStartRowLevel(this.lp) : layout_position_1.LayoutPositionDiscardHelper.onEndRowLevel(this.lp);
            return true;
        }
        return allowChangeHighLevels ? this.advancePageAreaSimple(true, toNext) : false;
    };
    LayoutPositionBaseAdvanceHelper.prototype.advancePageAreaSimple = function (allowChangeHighLevels, toNext) {
        toNext ? this.lp.pageAreaIndex++ : this.lp.pageAreaIndex--;
        this.lp.pageArea = this.lp.page.mainSubDocumentPageAreas[this.lp.pageAreaIndex];
        if (this.lp.pageArea) {
            toNext ? layout_position_1.LayoutPositionDiscardHelper.onStartColumnLevel(this.lp) : layout_position_1.LayoutPositionDiscardHelper.onEndColumnLevel(this.lp);
            return true;
        }
        return allowChangeHighLevels ? this.advancePageSimple(toNext) : false;
    };
    LayoutPositionBaseAdvanceHelper.prototype.advancePageSimple = function (toNext) {
        toNext ? this.lp.pageIndex++ : this.lp.pageIndex--;
        this.lp.page = this.layout.pages[this.lp.pageIndex];
        if (!this.lp.page)
            return false;
        toNext ? layout_position_1.LayoutPositionDiscardHelper.onStartPageAreaLevel(this.lp) : layout_position_1.LayoutPositionDiscardHelper.onEndPageAreaLevel(this.lp);
        return true;
    };
    LayoutPositionBaseAdvanceHelper.prototype.setRowByGridInfo = function (isStartFindWithStartTable, logicInfo, cellGridInfo, isAdvanceToNextColumn, isNeedColumnAdvance) {
        if (isNeedColumnAdvance)
            if (!this.advanceColumnSimple(true, isAdvanceToNextColumn))
                return false;
        var sameTable = list_1.ListUtils.elementBy(this.lp.column.tablesInfo, function (tbl) { return tbl.logicInfo == logicInfo; });
        if (!sameTable)
            return false;
        var iteratorFunc = isStartFindWithStartTable ? list_1.ListUtils.unsafeAnyOf : list_1.ListUtils.unsafeReverseAnyOf;
        var tblRowGridInfos = logicInfo.grid.tableCellGridInfos;
        var cell = iteratorFunc(sameTable.tableRows, function (row) {
            var tblRowGridInfo = tblRowGridInfos[row.rowIndex];
            return iteratorFunc(row.rowCells, function (cell) {
                var info = tblRowGridInfo[cell.cellGridIndex];
                return info == cellGridInfo ? cell : null;
            });
        });
        if (cell && (isStartFindWithStartTable ?
            (isAdvanceToNextColumn || cell.boundFlags.get(layout_table_cell_info_1.TableCellBoundFlags.StartOnThisColumn)) :
            ((!isAdvanceToNextColumn || cell.boundFlags.get(layout_table_cell_info_1.TableCellBoundFlags.EndOnThisColumn))))) {
            this.setLayoutRowInCell(cell, isStartFindWithStartTable);
            return true;
        }
        else
            return this.setRowByGridInfo(isStartFindWithStartTable, logicInfo, cellGridInfo, isAdvanceToNextColumn, true);
    };
    LayoutPositionBaseAdvanceHelper.getNextTableCellGridInfo = function (isStartFindWithStartTable, grid, startCellInfo, startRowIndex, cellIndex) {
        var result;
        var iteratorFunc = isStartFindWithStartTable ? list_1.ListUtils.unsafeAnyOf : list_1.ListUtils.unsafeReverseAnyOf;
        if (iteratorFunc(grid.table.rows, function (row, rowIndex) {
            if (cellIndex == -2)
                cellIndex = row.cells.length - 1;
            result = iteratorFunc(row.cells, function (cell, cellInd) {
                if (cell.verticalMerging != table_base_structures_1.TableCellMergingState.Continue) {
                    var currCell = grid.tableCellInfos[rowIndex][cellInd];
                    return currCell == startCellInfo ? null : currCell;
                }
                return null;
            }, cellIndex);
            if (result)
                return result;
            cellIndex = isStartFindWithStartTable ? 0 : -2;
            return null;
        }, startRowIndex))
            return result;
        return null;
    };
    return LayoutPositionBaseAdvanceHelper;
}());
exports.LayoutPositionBaseAdvanceHelper = LayoutPositionBaseAdvanceHelper;
