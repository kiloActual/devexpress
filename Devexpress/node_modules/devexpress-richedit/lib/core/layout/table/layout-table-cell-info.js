"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var flag_1 = require("@devexpress/utils/lib/class/flag");
var rectangle_1 = require("@devexpress/utils/lib/geometry/rectangle");
var list_1 = require("@devexpress/utils/lib/utils/list");
var number_1 = require("@devexpress/utils/lib/utils/map/number");
var TableCellBoundFlags;
(function (TableCellBoundFlags) {
    TableCellBoundFlags[TableCellBoundFlags["StartAndEndOnOtherColumns"] = 0] = "StartAndEndOnOtherColumns";
    TableCellBoundFlags[TableCellBoundFlags["StartOnThisColumn"] = 1] = "StartOnThisColumn";
    TableCellBoundFlags[TableCellBoundFlags["EndOnThisColumn"] = 2] = "EndOnThisColumn";
})(TableCellBoundFlags = exports.TableCellBoundFlags || (exports.TableCellBoundFlags = {}));
var LayoutTableCellInfo = (function (_super) {
    tslib_1.__extends(LayoutTableCellInfo, _super);
    function LayoutTableCellInfo(parentRow, bound, cellGridIndex, avaliableContentWidth) {
        var _this = _super.call(this, bound.x, bound.y, bound.width, bound.height) || this;
        _this.layoutRows = [];
        _this.parentRow = parentRow;
        _this.layoutRows = [];
        _this.cellGridIndex = cellGridIndex;
        _this.boundFlags = new flag_1.Flag(TableCellBoundFlags.StartOnThisColumn | TableCellBoundFlags.EndOnThisColumn);
        _this.internalTables = {};
        _this.avaliableContentWidth = avaliableContentWidth;
        return _this;
    }
    LayoutTableCellInfo.prototype.isStartWithInternalTable = function () {
        return !!this.internalTables[0];
    };
    LayoutTableCellInfo.prototype.isEndWithInternalTable = function () {
        return !!this.internalTables[this.layoutRows.length];
    };
    LayoutTableCellInfo.prototype.getLastLayoutRowIncludingInternalTables = function () {
        var lastInternalTable = this.internalTables[this.layoutRows.length];
        return lastInternalTable ?
            list_1.ListUtils.last(list_1.ListUtils.last(lastInternalTable.tableRows).rowCells).getLastLayoutRowIncludingInternalTables() :
            list_1.ListUtils.last(this.layoutRows);
    };
    LayoutTableCellInfo.prototype.getFirstLayoutRowByModelPositionIncludingInternalTables = function () {
        var firstInternalTable = this.internalTables[0];
        return firstInternalTable ?
            list_1.ListUtils.min(firstInternalTable.tableRows[0].rowCells, function (cell) {
                return cell.getFirstLayoutRowByModelPositionIncludingInternalTables().columnOffset;
            })
                .getFirstLayoutRowByModelPositionIncludingInternalTables() :
            this.layoutRows[0];
    };
    LayoutTableCellInfo.prototype.getEndPosition = function () {
        var internalTableAfterLastRow = this.internalTables[this.layoutRows.length];
        return internalTableAfterLastRow ?
            list_1.ListUtils.last(list_1.ListUtils.last(internalTableAfterLastRow.tableRows).rowCells).getEndPosition() :
            list_1.ListUtils.last(this.layoutRows).getEndPosition();
    };
    LayoutTableCellInfo.prototype.isEmpty = function () {
        return !this.layoutRows.length && number_1.NumberMapUtils.isEmpty(this.internalTables);
    };
    return LayoutTableCellInfo;
}(rectangle_1.Rectangle));
exports.LayoutTableCellInfo = LayoutTableCellInfo;
