"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var measure_info_1 = require("../../../measurer/measure-info");
var rich_utils_1 = require("../../../model/rich-utils");
var layout_box_1 = require("./layout-box");
var LayoutParagraphMarkBox = (function (_super) {
    tslib_1.__extends(LayoutParagraphMarkBox, _super);
    function LayoutParagraphMarkBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LayoutParagraphMarkBox.prototype.equals = function (obj) {
        return _super.prototype.equals.call(this, obj) &&
            this.paragraphMarkSymbol == obj.paragraphMarkSymbol;
    };
    LayoutParagraphMarkBox.prototype.clone = function () {
        var newObj = new LayoutParagraphMarkBox(this.characterProperties, this.colorInfo);
        newObj.copyFrom(this);
        return newObj;
    };
    LayoutParagraphMarkBox.prototype.copyFrom = function (obj) {
        _super.prototype.copyFrom.call(this, obj);
        this.paragraphMarkSymbol = obj.paragraphMarkSymbol;
    };
    LayoutParagraphMarkBox.prototype.getType = function () {
        return layout_box_1.LayoutBoxType.ParagraphMark;
    };
    LayoutParagraphMarkBox.prototype.pushInfoForMeasure = function (info, _showHiddenSymbols) {
        info.push(new measure_info_1.MeasureInfoNonText(rich_utils_1.RichUtils.specialCharacters.HiddenParagraphMark, this.characterProperties));
    };
    LayoutParagraphMarkBox.prototype.popInfoForMeasure = function (info, showHiddenSymbols) {
        this.paragraphMarkSymbol = showHiddenSymbols ? rich_utils_1.RichUtils.specialCharacters.HiddenParagraphMark : "&nbsp;";
        this.setSize(info.pop().resultSize);
    };
    LayoutParagraphMarkBox.prototype.renderGetContent = function (_renderer) {
        return this.paragraphMarkSymbol;
    };
    LayoutParagraphMarkBox.prototype.renderNoStrikeoutAndNoUnderlineIfBoxInEndRow = function () {
        return true;
    };
    LayoutParagraphMarkBox.prototype.isWhitespace = function () {
        return false;
    };
    LayoutParagraphMarkBox.prototype.isLineBreak = function () {
        return true;
    };
    return LayoutParagraphMarkBox;
}(layout_box_1.LayoutBox));
exports.LayoutParagraphMarkBox = LayoutParagraphMarkBox;
