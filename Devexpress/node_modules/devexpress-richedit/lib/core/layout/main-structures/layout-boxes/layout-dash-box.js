"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var measure_info_1 = require("../../../measurer/measure-info");
var layout_box_1 = require("./layout-box");
var LayoutDashBox = (function (_super) {
    tslib_1.__extends(LayoutDashBox, _super);
    function LayoutDashBox(characterProperties, colorInfo, text) {
        var _this = _super.call(this, characterProperties, colorInfo) || this;
        _this.text = text;
        return _this;
    }
    Object.defineProperty(LayoutDashBox.prototype, "isDashBox", {
        get: function () { return true; },
        enumerable: true,
        configurable: true
    });
    LayoutDashBox.prototype.equals = function (obj) {
        return _super.prototype.equals.call(this, obj) &&
            this.text == obj.text;
    };
    LayoutDashBox.prototype.getType = function () {
        return layout_box_1.LayoutBoxType.Dash;
    };
    LayoutDashBox.prototype.clone = function () {
        var newObj = new LayoutDashBox(this.characterProperties, this.colorInfo, this.text);
        newObj.copyFrom(this);
        return newObj;
    };
    LayoutDashBox.prototype.copyFrom = function (obj) {
        _super.prototype.copyFrom.call(this, obj);
        this.text = obj.text;
    };
    LayoutDashBox.prototype.renderGetContent = function (_renderer) {
        return this.text;
    };
    LayoutDashBox.prototype.pushInfoForMeasure = function (info, _showHiddenSymbols) {
        info.push(new measure_info_1.MeasureInfoNonText(this.text, this.characterProperties));
    };
    LayoutDashBox.prototype.popInfoForMeasure = function (info, _showHiddenSymbols) {
        this.setSize(info.pop().resultSize);
    };
    LayoutDashBox.prototype.isVisible = function () {
        return true;
    };
    LayoutDashBox.prototype.isVisibleForRowAlign = function () {
        return true;
    };
    LayoutDashBox.prototype.renderIsWordBox = function () {
        return true;
    };
    LayoutDashBox.prototype.isWhitespace = function () {
        return false;
    };
    LayoutDashBox.prototype.isLineBreak = function () {
        return false;
    };
    return LayoutDashBox;
}(layout_box_1.LayoutBox));
exports.LayoutDashBox = LayoutDashBox;
