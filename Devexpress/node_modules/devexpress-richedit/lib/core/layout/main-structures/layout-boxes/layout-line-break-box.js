"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var measure_info_1 = require("../../../measurer/measure-info");
var character_properties_1 = require("../../../model/character/character-properties");
var rich_utils_1 = require("../../../model/rich-utils");
var layout_box_1 = require("./layout-box");
var LayoutLineBreakBox = (function (_super) {
    tslib_1.__extends(LayoutLineBreakBox, _super);
    function LayoutLineBreakBox(characterProperties, colorInfo) {
        var _this = _super.call(this, characterProperties, colorInfo) || this;
        if (!LayoutLineBreakBox.renderCharacterProperties && characterProperties) {
            LayoutLineBreakBox.renderCharacterProperties = new character_properties_1.CharacterProperties();
            LayoutLineBreakBox.renderCharacterProperties.fontSize = 8;
            LayoutLineBreakBox.renderCharacterProperties.fontInfo = _this.characterProperties.fontInfo.clone();
            LayoutLineBreakBox.renderCharacterProperties.fontInfo.measurer = _this.characterProperties.fontInfo.measurer;
            LayoutLineBreakBox.renderCharacterProperties.fontInfo.name = "Arial";
            LayoutLineBreakBox.renderCharacterProperties.fontInfo.cssString = "Arial";
            LayoutLineBreakBox.renderCharacterProperties.fontInfo.scriptMultiplier = 0.65;
        }
        return _this;
    }
    LayoutLineBreakBox.prototype.equals = function (obj) {
        return _super.prototype.equals.call(this, obj) &&
            this.lineBreakSymbol == obj.lineBreakSymbol;
    };
    LayoutLineBreakBox.prototype.clone = function () {
        var newObj = new LayoutLineBreakBox(this.characterProperties, this.colorInfo);
        newObj.copyFrom(this);
        return newObj;
    };
    LayoutLineBreakBox.prototype.copyFrom = function (obj) {
        _super.prototype.copyFrom.call(this, obj);
        this.lineBreakSymbol = obj.lineBreakSymbol;
    };
    LayoutLineBreakBox.prototype.getType = function () {
        return layout_box_1.LayoutBoxType.LineBreak;
    };
    LayoutLineBreakBox.prototype.pushInfoForMeasure = function (info, _showHiddenSymbols) {
        info.push(new measure_info_1.MeasureInfoNonText("a", this.characterProperties));
    };
    LayoutLineBreakBox.prototype.popInfoForMeasure = function (info, showHiddenSymbols) {
        this.lineBreakSymbol = showHiddenSymbols ? rich_utils_1.RichUtils.specialCharacters.HiddenLineBreak : "&nbsp;";
        this.renderGetCharacterProperties();
        this.setSize(info.pop().resultSize);
    };
    LayoutLineBreakBox.prototype.renderGetContent = function (_renderer) {
        return this.lineBreakSymbol;
    };
    LayoutLineBreakBox.prototype.renderNoStrikeoutAndNoUnderlineIfBoxInEndRow = function () {
        return true;
    };
    LayoutLineBreakBox.prototype.renderGetCharacterProperties = function () {
        LayoutLineBreakBox.renderCharacterProperties.hidden = this.characterProperties.hidden;
        return new layout_box_1.LayoutRenderCharacterProperties(LayoutLineBreakBox.renderCharacterProperties, this.colorInfo);
    };
    LayoutLineBreakBox.prototype.isWhitespace = function () {
        return false;
    };
    LayoutLineBreakBox.prototype.isLineBreak = function () {
        return true;
    };
    return LayoutLineBreakBox;
}(layout_box_1.LayoutBox));
exports.LayoutLineBreakBox = LayoutLineBreakBox;
