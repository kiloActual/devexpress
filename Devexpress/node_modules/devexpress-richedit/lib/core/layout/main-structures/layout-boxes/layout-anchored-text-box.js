"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var errors_1 = require("@devexpress/utils/lib/errors");
var layout_anchored_object_box_1 = require("./layout-anchored-object-box");
var layout_box_1 = require("./layout-box");
var LayoutAnchoredTextBox = (function (_super) {
    tslib_1.__extends(LayoutAnchoredTextBox, _super);
    function LayoutAnchoredTextBox(characterProperties, colorInfo, belongsToSubDocId, anchorInfo, shape, objectId, rotationInRadians, internalSubDocId, textBoxProperties) {
        var _this = _super.call(this, characterProperties, colorInfo, belongsToSubDocId, anchorInfo, shape, objectId, rotationInRadians) || this;
        _this.internalSubDocId = internalSubDocId;
        _this.textBoxProperties = textBoxProperties;
        return _this;
    }
    LayoutAnchoredTextBox.prototype.getType = function () {
        return layout_box_1.LayoutBoxType.AnchorTextBox;
    };
    LayoutAnchoredTextBox.prototype.clone = function () {
        var newObject = new LayoutAnchoredTextBox(this.characterProperties, this.colorInfo, this.belongsToSubDocId, this.anchorInfo, this.shape, this.objectId, this.rotationInRadians, this.internalSubDocId, this.textBoxProperties);
        newObject.copyFrom(this);
        return newObject;
    };
    LayoutAnchoredTextBox.prototype.renderGetContent = function (_renderer) {
        throw Error(errors_1.Errors.NotImplemented);
    };
    return LayoutAnchoredTextBox;
}(layout_anchored_object_box_1.LayoutAnchoredObjectBox));
exports.LayoutAnchoredTextBox = LayoutAnchoredTextBox;
