"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var layout_box_1 = require("./layout-box");
var layout_text_box_1 = require("./layout-text-box");
var LayoutDependentBoxType;
(function (LayoutDependentBoxType) {
    LayoutDependentBoxType[LayoutDependentBoxType["Page"] = 0] = "Page";
    LayoutDependentBoxType[LayoutDependentBoxType["Numpages"] = 1] = "Numpages";
})(LayoutDependentBoxType = exports.LayoutDependentBoxType || (exports.LayoutDependentBoxType = {}));
var LayoutDependentTextBox = (function (_super) {
    tslib_1.__extends(LayoutDependentTextBox, _super);
    function LayoutDependentTextBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LayoutDependentTextBox.prototype.clone = function () {
        var newObj = new LayoutDependentTextBox(this.characterProperties, this.colorInfo, this.text);
        newObj.copyFrom(this);
        return newObj;
    };
    LayoutDependentTextBox.prototype.copyFrom = function (obj) {
        _super.prototype.copyFrom.call(this, obj);
        this.type = obj.type;
    };
    LayoutDependentTextBox.prototype.getType = function () {
        return layout_box_1.LayoutBoxType.LayoutDependent;
    };
    LayoutDependentTextBox.prototype.setType = function (type) {
        this.type = type;
    };
    LayoutDependentTextBox.prototype.calculateText = function (manager) {
        switch (this.type) {
            case LayoutDependentBoxType.Numpages:
                this.text = (manager.layout.lastMaxNumPages).toString();
                if (!manager.activeFormatter.subDocument.isMain())
                    manager.layoutDependentRunCache.add(manager.activeFormatter.layoutPosition.pageIndex, manager.activeFormatter.subDocument.id);
                break;
            case LayoutDependentBoxType.Page:
                this.text = (manager.activeFormatter.layoutPosition.page.pageOrdinal).toString();
                break;
        }
    };
    LayoutDependentTextBox.prototype.isLineBreak = function () {
        return false;
    };
    return LayoutDependentTextBox;
}(layout_text_box_1.LayoutTextBox));
exports.LayoutDependentTextBox = LayoutDependentTextBox;
