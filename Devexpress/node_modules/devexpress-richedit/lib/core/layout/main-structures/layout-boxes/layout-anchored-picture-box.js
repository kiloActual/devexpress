"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var layout_anchored_object_box_1 = require("./layout-anchored-object-box");
var layout_box_1 = require("./layout-box");
var LayoutAnchoredPictureBox = (function (_super) {
    tslib_1.__extends(LayoutAnchoredPictureBox, _super);
    function LayoutAnchoredPictureBox(characterProperties, colorInfo, belongsToSubDocId, anchorInfo, shape, objectId, rotationInRadians, cacheInfo) {
        var _this = _super.call(this, characterProperties, colorInfo, belongsToSubDocId, anchorInfo, shape, objectId, rotationInRadians) || this;
        _this.cacheInfo = cacheInfo;
        _this.isLoaded = _this.cacheInfo.isLoaded;
        return _this;
    }
    LayoutAnchoredPictureBox.prototype.getType = function () {
        return layout_box_1.LayoutBoxType.AnchorPicture;
    };
    LayoutAnchoredPictureBox.prototype.equals = function (obj) {
        return _super.prototype.equals.call(this, obj) && this.cacheInfo.equals(obj.cacheInfo) && this.isLoaded == obj.isLoaded;
    };
    LayoutAnchoredPictureBox.prototype.clone = function () {
        var newObject = new LayoutAnchoredPictureBox(this.characterProperties, this.colorInfo, this.belongsToSubDocId, this.anchorInfo, this.shape, this.objectId, this.rotationInRadians, this.cacheInfo);
        newObject.copyFrom(this);
        return newObject;
    };
    LayoutAnchoredPictureBox.prototype.renderGetContent = function (renderer) {
        return renderer.renderPictureBoxContent(this.createSize(), this.cacheInfo, this.hyperlinkTip);
    };
    return LayoutAnchoredPictureBox;
}(layout_anchored_object_box_1.LayoutAnchoredObjectBox));
exports.LayoutAnchoredPictureBox = LayoutAnchoredPictureBox;
