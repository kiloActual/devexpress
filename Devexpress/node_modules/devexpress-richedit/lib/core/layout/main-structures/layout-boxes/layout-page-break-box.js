"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var measure_info_1 = require("../../../measurer/measure-info");
var character_properties_1 = require("../../../model/character/character-properties");
var layout_box_1 = require("./layout-box");
var LayoutPageBreakBox = (function (_super) {
    tslib_1.__extends(LayoutPageBreakBox, _super);
    function LayoutPageBreakBox(characterProperties, colorInfo) {
        var _this = _super.call(this, characterProperties, colorInfo) || this;
        if (!LayoutPageBreakBox.renderCharacterProperties && characterProperties) {
            LayoutPageBreakBox.renderCharacterProperties = new character_properties_1.CharacterProperties();
            LayoutPageBreakBox.renderCharacterProperties.fontSize = 10;
            LayoutPageBreakBox.renderCharacterProperties.fontInfo = _this.characterProperties.fontInfo.clone();
            LayoutPageBreakBox.renderCharacterProperties.fontInfo.measurer = _this.characterProperties.fontInfo.measurer;
            LayoutPageBreakBox.renderCharacterProperties.fontInfo.name = "Arial";
            LayoutPageBreakBox.renderCharacterProperties.fontInfo.cssString = "Arial";
            LayoutPageBreakBox.renderCharacterProperties.fontInfo.scriptMultiplier = 0.65;
        }
        return _this;
    }
    LayoutPageBreakBox.prototype.equals = function (obj) {
        return _super.prototype.equals.call(this, obj) &&
            this.text == obj.text;
    };
    LayoutPageBreakBox.prototype.clone = function () {
        var newObj = new LayoutPageBreakBox(this.characterProperties, this.colorInfo);
        newObj.copyFrom(this);
        return newObj;
    };
    LayoutPageBreakBox.prototype.copyFrom = function (obj) {
        _super.prototype.copyFrom.call(this, obj);
        this.text = obj.text;
    };
    LayoutPageBreakBox.prototype.getType = function () {
        return layout_box_1.LayoutBoxType.PageBreak;
    };
    LayoutPageBreakBox.prototype.pushInfoForMeasure = function (info, _showHiddenSymbols) {
        info.push(new measure_info_1.MeasureInfoText(this.getHiddenText(), this.renderGetCharacterProperties().initProps));
    };
    LayoutPageBreakBox.prototype.popInfoForMeasure = function (info, showHiddenSymbols) {
        var elem = info.pop();
        this.text = showHiddenSymbols ? elem.text : "&nbsp;";
        this.setSize(elem.resultSize);
    };
    LayoutPageBreakBox.prototype.renderGetContent = function (_renderer) {
        return this.text;
    };
    LayoutPageBreakBox.prototype.renderNoStrikeoutAndNoUnderlineIfBoxInEndRow = function () {
        return true;
    };
    LayoutPageBreakBox.prototype.renderGetCharacterProperties = function () {
        LayoutPageBreakBox.renderCharacterProperties.hidden = this.characterProperties.hidden;
        return new layout_box_1.LayoutRenderCharacterProperties(LayoutPageBreakBox.renderCharacterProperties, this.colorInfo);
    };
    LayoutPageBreakBox.prototype.isWhitespace = function () {
        return false;
    };
    LayoutPageBreakBox.prototype.isLineBreak = function () {
        return true;
    };
    LayoutPageBreakBox.prototype.getHiddenText = function () {
        return "........Page Break........";
    };
    return LayoutPageBreakBox;
}(layout_box_1.LayoutBox));
exports.LayoutPageBreakBox = LayoutPageBreakBox;
