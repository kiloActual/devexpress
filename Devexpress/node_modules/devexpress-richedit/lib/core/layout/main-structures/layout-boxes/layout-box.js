"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var rectangle_1 = require("@devexpress/utils/lib/geometry/rectangle");
var list_1 = require("@devexpress/utils/lib/utils/list");
var LayoutBoxType;
(function (LayoutBoxType) {
    LayoutBoxType[LayoutBoxType["Text"] = 0] = "Text";
    LayoutBoxType[LayoutBoxType["Space"] = 1] = "Space";
    LayoutBoxType[LayoutBoxType["Dash"] = 2] = "Dash";
    LayoutBoxType[LayoutBoxType["TabSpace"] = 3] = "TabSpace";
    LayoutBoxType[LayoutBoxType["LineBreak"] = 4] = "LineBreak";
    LayoutBoxType[LayoutBoxType["PageBreak"] = 5] = "PageBreak";
    LayoutBoxType[LayoutBoxType["ColumnBreak"] = 6] = "ColumnBreak";
    LayoutBoxType[LayoutBoxType["SectionMark"] = 7] = "SectionMark";
    LayoutBoxType[LayoutBoxType["ParagraphMark"] = 8] = "ParagraphMark";
    LayoutBoxType[LayoutBoxType["Picture"] = 9] = "Picture";
    LayoutBoxType[LayoutBoxType["NumberingList"] = 10] = "NumberingList";
    LayoutBoxType[LayoutBoxType["FieldCodeStart"] = 11] = "FieldCodeStart";
    LayoutBoxType[LayoutBoxType["FieldCodeEnd"] = 12] = "FieldCodeEnd";
    LayoutBoxType[LayoutBoxType["FieldResultEnd"] = 13] = "FieldResultEnd";
    LayoutBoxType[LayoutBoxType["LayoutDependent"] = 14] = "LayoutDependent";
    LayoutBoxType[LayoutBoxType["NonBreakingSpace"] = 15] = "NonBreakingSpace";
    LayoutBoxType[LayoutBoxType["AnchorPicture"] = 16] = "AnchorPicture";
    LayoutBoxType[LayoutBoxType["AnchorTextBox"] = 17] = "AnchorTextBox";
})(LayoutBoxType = exports.LayoutBoxType || (exports.LayoutBoxType = {}));
var LayoutRenderCharacterProperties = (function () {
    function LayoutRenderCharacterProperties(initProps, colorInfo) {
        this.initProps = initProps;
        this.colorInfo = colorInfo;
    }
    return LayoutRenderCharacterProperties;
}());
exports.LayoutRenderCharacterProperties = LayoutRenderCharacterProperties;
var LayoutBox = (function (_super) {
    tslib_1.__extends(LayoutBox, _super);
    function LayoutBox(characterProperties, colorInfo) {
        var _this = _super.call(this, 0, 0, 0, 0) || this;
        _this.characterProperties = characterProperties;
        _this.colorInfo = colorInfo;
        return _this;
    }
    Object.defineProperty(LayoutBox.prototype, "isDashBox", {
        get: function () { return false; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutBox.prototype, "isSectionBreakBox", {
        get: function () { return false; },
        enumerable: true,
        configurable: true
    });
    LayoutBox.prototype.equals = function (obj) {
        return _super.prototype.equals.call(this, obj) &&
            this.getType() == obj.getType() &&
            this.characterProperties == obj.characterProperties &&
            this.colorInfo.equals(obj.colorInfo) &&
            this.rowOffset == obj.rowOffset &&
            this.hyperlinkTip == obj.hyperlinkTip &&
            this.fieldLevel == this.fieldLevel;
    };
    LayoutBox.prototype.copyFrom = function (obj) {
        _super.prototype.copyFrom.call(this, obj);
        this.rowOffset = obj.rowOffset;
        if (obj.hyperlinkTip)
            this.hyperlinkTip = obj.hyperlinkTip;
        if (obj.fieldLevel)
            this.fieldLevel = obj.fieldLevel;
    };
    LayoutBox.initializeWithMeasurer = function (wrappers, measurer, showHiddenSymbols) {
        var widthHeightInfo = [];
        for (var _i = 0, wrappers_1 = wrappers; _i < wrappers_1.length; _i++) {
            var w = wrappers_1[_i];
            w.box.pushInfoForMeasure(widthHeightInfo, showHiddenSymbols);
        }
        measurer.measure(widthHeightInfo);
        list_1.ListUtils.reverseForEach(wrappers, function (w) { return w.box.popInfoForMeasure(widthHeightInfo, showHiddenSymbols); });
        if (widthHeightInfo.length != 0)
            throw new Error("In initializeWithMeasurer widthHeightInfo.length != 0" + widthHeightInfo.length);
    };
    LayoutBox.prototype.getEndPosition = function () {
        return this.rowOffset + this.getLength();
    };
    LayoutBox.prototype.getTop = function (row) {
        return row.baseLine - this.getAscent() - row.getSpacingBefore();
    };
    LayoutBox.prototype.getAscent = function () {
        return this.characterProperties.fontInfo.getAscent(this.height);
    };
    LayoutBox.prototype.getDescent = function () {
        return this.characterProperties.fontInfo.getDescent(this.height);
    };
    LayoutBox.prototype.isVisibleForRowAlign = function () {
        return false;
    };
    LayoutBox.prototype.isVisible = function () {
        return false;
    };
    LayoutBox.prototype.getCharOffsetXInPixels = function (_measurer, charOffset) {
        return charOffset <= 0 ? 0 : this.width;
    };
    LayoutBox.prototype.getLength = function () {
        return 1;
    };
    LayoutBox.prototype.calculateCharOffsetByPointX = function (_measurer, pointX) {
        return pointX / this.width > 0.6 ? 1 : 0;
    };
    LayoutBox.prototype.splitByWidth = function (_measurer, maxWidth, leaveAtLeastOneChar) {
        if (this.width <= maxWidth || leaveAtLeastOneChar)
            return this;
        return null;
    };
    LayoutBox.prototype.getCharIndex = function (_char) {
        return -1;
    };
    LayoutBox.prototype.splitBoxByPosition = function (_measurer, _offsetAtStartBox) {
        return null;
    };
    LayoutBox.prototype.renderNoStrikeoutAndNoUnderlineIfBoxInEndRow = function () {
        return false;
    };
    LayoutBox.prototype.renderIsWordBox = function () {
        return false;
    };
    LayoutBox.prototype.renderGetCharacterProperties = function () {
        return new LayoutRenderCharacterProperties(this.characterProperties, this.colorInfo);
    };
    return LayoutBox;
}(rectangle_1.Rectangle));
exports.LayoutBox = LayoutBox;
