"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var model_iterator_1 = require("../model/model-iterator");
var rich_utils_1 = require("../model/rich-utils");
var run_type_1 = require("../model/runs/run-type");
var ModelWordPositionHelper = (function () {
    function ModelWordPositionHelper() {
    }
    ModelWordPositionHelper.getWordStartPosition = function (subDocument, position) {
        return ModelWordPositionHelper.getWordStartPositionByCharCondition(subDocument, position, function (char) { return rich_utils_1.RichUtils.isWhitespace.test(char); });
    };
    ModelWordPositionHelper.getWordStartPositionByCharCondition = function (subDocument, position, condition) {
        var iterator = new model_iterator_1.ModelIterator(subDocument, true);
        iterator.setPosition(position);
        while (iterator.moveToPrevChar()) {
            var char = iterator.getCurrentChar();
            var runType = iterator.run.getType();
            if (condition(char) || runType == run_type_1.RunType.ParagraphRun || runType == run_type_1.RunType.SectionRun)
                return iterator.getAbsolutePosition() + 1;
        }
        return iterator.getAbsolutePosition();
    };
    ModelWordPositionHelper.getPrevWordStartPosition = function (subDocument, position) {
        var iterator = new model_iterator_1.ModelIterator(subDocument, true);
        iterator.setPosition(position);
        var firstWhitespaceIsFound = false;
        var prevWordIsFound = false;
        while (iterator.moveToPrevChar()) {
            var char = iterator.getCurrentChar();
            var runType = iterator.run.getType();
            if ((rich_utils_1.RichUtils.isWhitespace.test(char) && prevWordIsFound) || runType == run_type_1.RunType.ParagraphRun || runType == run_type_1.RunType.SectionRun)
                return iterator.getAbsolutePosition() + 1;
            if (rich_utils_1.RichUtils.isWhitespace.test(char))
                firstWhitespaceIsFound = true;
            else if (firstWhitespaceIsFound)
                prevWordIsFound = true;
        }
        return iterator.getAbsolutePosition();
    };
    ModelWordPositionHelper.getNextWordEndPosition = function (subDocument, position) {
        var iterator = new model_iterator_1.ModelIterator(subDocument, true);
        iterator.setPosition(position);
        var firstWhitespaceIsFound = false;
        var nextWordIsFound = false;
        do {
            var char = iterator.getCurrentChar();
            var runType = iterator.run.getType();
            if ((rich_utils_1.RichUtils.isWhitespace.test(char) && nextWordIsFound) || runType == run_type_1.RunType.ParagraphRun || runType == run_type_1.RunType.SectionRun)
                return iterator.getAbsolutePosition() - 1;
            if (rich_utils_1.RichUtils.isWhitespace.test(char))
                firstWhitespaceIsFound = true;
            else if (firstWhitespaceIsFound)
                nextWordIsFound = true;
        } while (iterator.moveToNextChar());
        return iterator.getAbsolutePosition();
    };
    return ModelWordPositionHelper;
}());
exports.ModelWordPositionHelper = ModelWordPositionHelper;
