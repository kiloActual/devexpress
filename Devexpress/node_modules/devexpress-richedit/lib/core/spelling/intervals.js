"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var fixed_1 = require("@devexpress/utils/lib/intervals/fixed");
var SpellCheckerInterval = (function (_super) {
    tslib_1.__extends(SpellCheckerInterval, _super);
    function SpellCheckerInterval() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SpellCheckerInterval.prototype.setStart = function (start) {
        this.start = start;
        this.onChanged();
    };
    SpellCheckerInterval.prototype.setLength = function (length) {
        this.length = length;
        this.onChanged();
    };
    SpellCheckerInterval.prototype.onChanged = function () { };
    return SpellCheckerInterval;
}(fixed_1.FixedInterval));
exports.SpellCheckerInterval = SpellCheckerInterval;
var UncheckedInterval = (function (_super) {
    tslib_1.__extends(UncheckedInterval, _super);
    function UncheckedInterval(start, length, isSplitted) {
        if (isSplitted === void 0) { isSplitted = true; }
        var _this = _super.call(this, start, length) || this;
        _this.info = new UncheckedIntervalInfo(isSplitted);
        return _this;
    }
    UncheckedInterval.prototype.onChanged = function () {
        this.info.isChecking = false;
    };
    return UncheckedInterval;
}(SpellCheckerInterval));
exports.UncheckedInterval = UncheckedInterval;
var UncheckedIntervalInfo = (function () {
    function UncheckedIntervalInfo(isSplitted) {
        this.isSplitted = isSplitted;
        this.isChecking = false;
    }
    return UncheckedIntervalInfo;
}());
exports.UncheckedIntervalInfo = UncheckedIntervalInfo;
var MisspelledInterval = (function (_super) {
    tslib_1.__extends(MisspelledInterval, _super);
    function MisspelledInterval(start, length, errorInfo) {
        var _this = _super.call(this, start, length) || this;
        _this.errorInfo = errorInfo;
        return _this;
    }
    return MisspelledInterval;
}(SpellCheckerInterval));
exports.MisspelledInterval = MisspelledInterval;
var IgnoredInterval = (function (_super) {
    tslib_1.__extends(IgnoredInterval, _super);
    function IgnoredInterval(start, length, word) {
        var _this = _super.call(this, start, length) || this;
        _this.word = word;
        return _this;
    }
    return IgnoredInterval;
}(SpellCheckerInterval));
exports.IgnoredInterval = IgnoredInterval;
