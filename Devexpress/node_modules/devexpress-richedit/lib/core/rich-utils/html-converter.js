"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var unit_converter_1 = require("@devexpress/utils/lib/class/unit-converter");
var math_1 = require("@devexpress/utils/lib/utils/math");
var enums_1 = require("../model/character/enums");
var color_1 = require("../model/color/color");
var HtmlConverter = (function () {
    function HtmlConverter() {
    }
    HtmlConverter.getCssRules = function (charProps, textColor, isWordBox, noStrikeoutAndUnderline, important) {
        var rules = HtmlConverter.getSizeSignificantRules(charProps, important);
        rules.push(this.getForeColorRule(textColor));
        if (!noStrikeoutAndUnderline) {
            if (charProps.fontStrikeoutType != enums_1.StrikeoutType.None && (isWordBox || !charProps.strikeoutWordsOnly))
                rules.push("text-decoration: line-through");
            if (charProps.fontUnderlineType != enums_1.UnderlineType.None && (isWordBox || !charProps.underlineWordsOnly))
                rules.push("text-decoration: underline");
        }
        return rules;
    };
    HtmlConverter.getForeColorRule = function (textColor) {
        textColor = textColor !== color_1.ColorHelper.AUTOMATIC_COLOR ? textColor : color_1.ColorHelper.BLACK_COLOR;
        return "color: " + color_1.ColorHelper.getCssStringInternal(textColor);
    };
    HtmlConverter.getSizeSignificantCssString = function (characterProperties) {
        return HtmlConverter.getSizeSignificantRules(characterProperties).join(";");
    };
    HtmlConverter.getSizeSignificantRules = function (characterProperties, important) {
        if (important === void 0) { important = true; }
        var rules = [];
        if (characterProperties.allCaps)
            rules.push("text-transform: uppercase");
        rules.push("font-family: " + HtmlConverter.buildFontFamilyRule(characterProperties.fontInfo.cssString) +
            (important ? HtmlConverter.importantTag : ''));
        if (characterProperties.fontBold)
            rules.push("font-weight: bold");
        if (characterProperties.fontItalic)
            rules.push("font-style: italic");
        var fontSizePx = unit_converter_1.UnitConverter.pointsToPixelsF(characterProperties.fontSize);
        if (characterProperties.script == enums_1.CharacterFormattingScript.Normal)
            rules.push("font-size: " + math_1.MathUtils.round(fontSizePx, 3) + "px" + (important ? HtmlConverter.importantTag : ''));
        else {
            rules.push("font-size: " + math_1.MathUtils.round(fontSizePx * characterProperties.fontInfo.scriptMultiplier, 3) + "px" +
                (important ? HtmlConverter.importantTag : ''));
        }
        return rules;
    };
    HtmlConverter.buildFontFamilyRule = function (cssString) {
        var result = cssString.replace(/"/g, "&quot;");
        if (result.replace(/</g, '&lt;').replace(/>/g, '&gt;') != result)
            result = result.replace(/'/g, "&quot;");
        return result;
    };
    HtmlConverter.importantTag = ' !important';
    return HtmlConverter;
}());
exports.HtmlConverter = HtmlConverter;
