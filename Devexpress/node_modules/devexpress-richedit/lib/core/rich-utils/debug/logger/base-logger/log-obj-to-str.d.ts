import { Point } from '@devexpress/utils/lib/geometry/point';
import { Rectangle } from '@devexpress/utils/lib/geometry/rectangle';
import { Size } from '@devexpress/utils/lib/geometry/size';
import { ConstInterval } from '@devexpress/utils/lib/intervals/const';
import { BorderInfo } from '../../../../model/borders/border-info';
import { CacheImageInfo } from '../../../../model/caches/images';
import { ColorModelInfo } from '../../../../model/color/color-model-info';
import { HyperlinkInfo } from '../../../../model/fields/field';
import { HistoryItemIntervalState, HistoryItemState } from '../../../../model/history/states/history-item-state';
import { HistoryItemIntervalStateObject, HistoryItemListLevelStateObject, HistoryItemListLevelUseStateObject, HistoryItemSectionStateObject, HistoryItemTableCellStateObject, HistoryItemTableRowStateObject, HistoryItemTableStateObject, IHistoryItemStateObject } from '../../../../model/history/states/history-item-state-object';
import { ShadingInfo } from '../../../../model/shadings/shading-info';
import { HeaderFooterSubDocumentInfoBase, SubDocumentInfoBase } from '../../../../model/sub-document-infos';
import { Table } from '../../../../model/tables/main-structures/table';
import { TableCell } from '../../../../model/tables/main-structures/table-cell';
import { TableRow } from '../../../../model/tables/main-structures/table-row';
import { TableCellProperties } from '../../../../model/tables/properties/table-cell-properties';
import { TableProperties } from '../../../../model/tables/properties/table-properties';
import { TableRowProperties } from '../../../../model/tables/properties/table-row-properties';
import { TableHeightUnit, TableWidthUnit } from '../../../../model/tables/secondary-structures/table-units';
import { TableConditionalStyle } from '../../../../model/tables/styles/table-conditional-style';
import { TableStyle } from '../../../../model/tables/styles/table-style';
export declare class LogObjToStr {
    static point(p: Point): string;
    static fixedInterval(interval: ConstInterval): string;
    static tableWidthUnit(unit: TableWidthUnit): string;
    static tableHeightUnit(unit: TableHeightUnit): string;
    static tableMembers(table: Table, prefix?: string): string;
    static tableProperties(props: TableProperties, prefix?: string): string;
    static borderInfo(brd: BorderInfo): string;
    static colorModelInfo(color: ColorModelInfo): string;
    static shadingInfo(shadingInfo: ShadingInfo): string;
    static tableCellMembers(cell: TableCell, prefix?: string): string;
    static tableCellProperties(props: TableCellProperties, prefix?: string): string;
    static tableRowMembers(row: TableRow, prefix?: string): string;
    static tableRowProperties(props: TableRowProperties, prefix?: string): string;
    static tableConditionalStyle(style: TableConditionalStyle, prefix?: string): string;
    static tableStyle(style: TableStyle, prefix?: string): string;
    static rectangle(r: Rectangle, prefix?: string, sep?: string): string;
    static historyItemListLevelStateObject(obj: HistoryItemListLevelStateObject, prefix?: string, sep?: string): string;
    static historyItemTableStateObject(obj: HistoryItemTableStateObject, prefix?: string, sep?: string): string;
    static historyItemTableRowStateObject(obj: HistoryItemTableRowStateObject, prefix?: string, sep?: string): string;
    static historyItemTableCellStateObject(obj: HistoryItemTableCellStateObject, prefix?: string, sep?: string): string;
    static historyItemIntervalStateObject(obj: HistoryItemIntervalStateObject, prefix?: string, sep?: string): string;
    static size(info: Size, prefix?: string, sep?: string): string;
    static cacheImageInfo(info: CacheImageInfo, prefix?: string, sep?: string): string;
    static historyItemSectionStateObject(obj: HistoryItemSectionStateObject, prefix?: string, sep?: string): string;
    static historyItemState<T extends IHistoryItemStateObject>(handler: (p: T, prefix: string, sep: string) => string, obj: HistoryItemState<T>, prefix?: string, sep?: string): () => string;
    static hyperlinkInfo(info: HyperlinkInfo, prefix?: string, sep?: string): string;
    static subDocumentInfoBase(info: SubDocumentInfoBase, prefix?: string, sep?: string): string;
    static headerFooterSubDocumentInfoBase(info: HeaderFooterSubDocumentInfoBase, prefix?: string, sep?: string): string;
    static historyItemListLevelUseStateObject(obj: HistoryItemListLevelUseStateObject, prefix?: string, sep?: string): string;
    static historyItemIntervalState<T extends HistoryItemIntervalStateObject>(handler: (p: T, prefix: string, sep: string) => string, obj: HistoryItemIntervalState<T>, prefix?: string, sep?: string): () => string;
}
//# sourceMappingURL=log-obj-to-str.d.ts.map
