import { IParamsHolder } from './i-params-holder';
import { LogSource } from './log-source';
import { LogSourceParams } from './log-source-params';
export declare class Logger {
    private static instance;
    private constructor();
    static getInstance(): Logger;
    private _paramsHolder;
    private _isEnabled;
    isDebug: boolean;
    splitBy: string;
    SOLID_BLOCK: string;
    DOUBLE_SOLID_BLOCK: string;
    TRIPLE_SOLID_BLOCK: string;
    disableAll(): void;
    print(logSource: LogSource, functionInfo: string, valOrFunc: any): boolean;
    flip(func: any, aArgPos: number, bArgPos: number): any;
    w(numFuncParams: number, func: any, currParamsStack?: any[]): any;
    join<T>(sep: string, list: T[]): string;
    map<TInp, TTes>(func: (p: TInp, index: number) => TTes, list: TInp[]): TTes[];
    mask(objEnum: any, mask: number, excessNullValue?: number): string;
    paramsHolder: IParamsHolder;
    readonly logSourceParams: Record<number, LogSourceParams>;
    isEnabled: boolean;
}
//# sourceMappingURL=logger.d.ts.map
