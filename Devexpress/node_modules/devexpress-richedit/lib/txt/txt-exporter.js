"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fixed_1 = require("@devexpress/utils/lib/intervals/fixed");
var base64_1 = require("@devexpress/utils/lib/utils/base64");
var TxtExporter = (function () {
    function TxtExporter(modelManipulator, options) {
        this.modelManipulator = modelManipulator;
        this.options = options;
    }
    Object.defineProperty(TxtExporter.prototype, "model", {
        get: function () { return this.modelManipulator.model; },
        enumerable: true,
        configurable: true
    });
    TxtExporter.prototype.exportToBlob = function (callback) {
        this.getBlob(callback);
    };
    TxtExporter.prototype.exportToBase64 = function (callback) {
        this.getBlob(function (blob) { return base64_1.Base64Utils.fromBlobAsDataUrl(blob, function (base64) {
            var splitted = base64.split(',');
            callback(splitted.length === 2 ? splitted[1] : '');
        }); });
    };
    TxtExporter.prototype.getBlob = function (callback) {
        var _this = this;
        this.modelManipulator.picture.loader.ensureAllPicturesLoaded(this.options.ensurePictureLoadedTimeout, function (_loaded) {
            var text = '';
            _this.model.mainSubDocument.paragraphs.forEach(function (p, index) {
                if (index > 0)
                    text += '\r\n';
                text += _this.model.mainSubDocument.getSimpleText(new fixed_1.FixedInterval(p.startLogPosition.value, p.length));
            });
            callback(new Blob([text], { type: 'text/plain' }));
        });
    };
    return TxtExporter;
}());
exports.TxtExporter = TxtExporter;
