"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var XDirectionAdaptor = (function () {
    function XDirectionAdaptor() {
    }
    XDirectionAdaptor.prototype.isXDirection = function () {
        return true;
    };
    return XDirectionAdaptor;
}());
exports.XDirectionAdaptor = XDirectionAdaptor;
var PointDirectionAdaptorX = (function (_super) {
    __extends(PointDirectionAdaptorX, _super);
    function PointDirectionAdaptorX() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PointDirectionAdaptorX.prototype.init = function (obj) {
        this.obj = obj;
        return this;
    };
    Object.defineProperty(PointDirectionAdaptorX.prototype, "position", {
        get: function () {
            return this.obj.x;
        },
        set: function (x) {
            this.obj.x = x;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PointDirectionAdaptorX.prototype, "anotherPosition", {
        get: function () {
            return this.obj.y;
        },
        set: function (y) {
            this.obj.y = y;
        },
        enumerable: true,
        configurable: true
    });
    return PointDirectionAdaptorX;
}(XDirectionAdaptor));
exports.PointDirectionAdaptorX = PointDirectionAdaptorX;
var SizeDirectionAdaptorX = (function (_super) {
    __extends(SizeDirectionAdaptorX, _super);
    function SizeDirectionAdaptorX() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SizeDirectionAdaptorX.prototype.init = function (obj) {
        this.obj = obj;
        return this;
    };
    Object.defineProperty(SizeDirectionAdaptorX.prototype, "length", {
        get: function () {
            return this.obj.width;
        },
        set: function (width) {
            this.obj.width = width;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SizeDirectionAdaptorX.prototype, "anotherLength", {
        get: function () {
            return this.obj.height;
        },
        set: function (height) {
            this.obj.height = height;
        },
        enumerable: true,
        configurable: true
    });
    return SizeDirectionAdaptorX;
}(XDirectionAdaptor));
exports.SizeDirectionAdaptorX = SizeDirectionAdaptorX;
var RectangleDirectionAdaptorX = (function (_super) {
    __extends(RectangleDirectionAdaptorX, _super);
    function RectangleDirectionAdaptorX() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RectangleDirectionAdaptorX.prototype.init = function (obj) {
        this.obj = obj;
        return this;
    };
    Object.defineProperty(RectangleDirectionAdaptorX.prototype, "length", {
        get: function () {
            return this.obj.width;
        },
        set: function (width) {
            this.obj.width = width;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RectangleDirectionAdaptorX.prototype, "anotherLength", {
        get: function () {
            return this.obj.height;
        },
        set: function (height) {
            this.obj.height = height;
        },
        enumerable: true,
        configurable: true
    });
    return RectangleDirectionAdaptorX;
}(PointDirectionAdaptorX));
exports.RectangleDirectionAdaptorX = RectangleDirectionAdaptorX;
