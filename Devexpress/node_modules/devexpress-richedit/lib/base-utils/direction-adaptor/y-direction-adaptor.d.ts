import { IPoint, IRectangle, ISize } from '@devexpress/utils/lib/geometry/interfaces';
import { IPointDirectionAdaptor, IRectangleDirectionAdaptor, ISizeDirectionAdaptor } from './i-direction-adaptor';
export declare abstract class YDirectionAdaptor {
    isXDirection(): boolean;
}
export declare class PointDirectionAdaptorY<TObj extends IPoint = IPoint> extends YDirectionAdaptor implements IPointDirectionAdaptor {
    obj: TObj;
    init(obj: TObj): PointDirectionAdaptorY;
    position: number;
    anotherPosition: number;
}
export declare class SizeDirectionAdaptorY extends YDirectionAdaptor implements ISizeDirectionAdaptor {
    obj: ISize;
    init(obj: ISize): SizeDirectionAdaptorY;
    length: number;
    anotherLength: number;
}
export declare class RectangleDirectionAdaptorY extends PointDirectionAdaptorY<IRectangle> implements IRectangleDirectionAdaptor {
    init(obj: IRectangle): RectangleDirectionAdaptorY;
    length: number;
    anotherLength: number;
}
//# sourceMappingURL=y-direction-adaptor.d.ts.map
