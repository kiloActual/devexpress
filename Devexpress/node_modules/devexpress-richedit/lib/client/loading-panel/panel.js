"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var panel_1 = require("../../base/loading-panel/panel");
var dom_1 = require("@devexpress/utils/lib/utils/dom");
var ClientBuiltinLoadingPanel = (function () {
    function ClientBuiltinLoadingPanel(canvas) {
        this.visible = false;
        this.canvas = canvas;
    }
    ClientBuiltinLoadingPanel.prototype.dispose = function () {
        this.canvas = null;
        dom_1.DomUtils.hideNode(this.panelElem);
        this.panelElem = null;
    };
    ClientBuiltinLoadingPanel.prototype.show = function () {
        this.getLoadingPanel().style.display = "block";
        this.visible = true;
    };
    ClientBuiltinLoadingPanel.prototype.hide = function () {
        this.getLoadingPanel().style.display = "none";
        this.visible = false;
    };
    ClientBuiltinLoadingPanel.prototype.getLoadingPanel = function () {
        if (!this.panelElem) {
            this.panelElem = document.createElement('div');
            this.panelElem.className = 'dxreLoadingPanel';
            var innerElement = document.createElement('div');
            innerElement.className = 'lp';
            this.panelElem.appendChild(innerElement);
            this.canvas.appendChild(this.panelElem);
        }
        return this.panelElem;
    };
    return ClientBuiltinLoadingPanel;
}());
exports.ClientBuiltinLoadingPanel = ClientBuiltinLoadingPanel;
var ClientLoadingPanel = (function (_super) {
    tslib_1.__extends(ClientLoadingPanel, _super);
    function ClientLoadingPanel(canvas) {
        var _this = _super.call(this) || this;
        _this.loadingPanel = new ClientBuiltinLoadingPanel(canvas);
        return _this;
    }
    return ClientLoadingPanel;
}(panel_1.LoadingPanelBase));
exports.ClientLoadingPanel = ClientLoadingPanel;
