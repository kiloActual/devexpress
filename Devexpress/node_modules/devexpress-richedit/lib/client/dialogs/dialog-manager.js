"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var dom_1 = require("@devexpress/utils/lib/utils/dom");
var number_1 = require("@devexpress/utils/lib/utils/map/number");
var alert_dialog_1 = require("./alert-dialog");
var bookmark_dialog_1 = require("./bookmark-dialog");
var delete_table_cells_dialog_1 = require("./delete-table-cells-dialog");
var find_replace_dialog_1 = require("./find-replace-dialog");
var finish_and_merge_dialog_1 = require("./finish-and-merge-dialog");
var font_dialog_1 = require("./font-dialog");
var hyperlink_dialog_1 = require("./hyperlink-dialog");
var insert_merge_field_dialog_1 = require("./insert-merge-field-dialog");
var insert_table_cells_dialog_1 = require("./insert-table-cells-dialog");
var insert_table_dialog_1 = require("./insert-table-dialog");
var page_setup_dialog_1 = require("./page-setup-dialog");
var paragraph_dialog_1 = require("./paragraph-dialog");
var split_table_cells_dialog_1 = require("./split-table-cells-dialog");
var tabs_dialog_1 = require("./tabs-dialog");
var DialogManager = (function () {
    function DialogManager(container, richedit) {
        this.dialogElement = container.appendChild(document.createElement('div'));
        this.richedit = richedit;
        this.dialogsMap = {};
        this.dialogsMap["EditFont"] = font_dialog_1.FontDialog;
        this.dialogsMap["EditParagraph"] = paragraph_dialog_1.ParagraphDialog;
        this.dialogsMap["InsertTable"] = insert_table_dialog_1.InsertTableDialog;
        this.dialogsMap["ErrorMessage"] = alert_dialog_1.ErrorDialog;
        this.dialogsMap["InformationMessage"] = alert_dialog_1.InformationDialog;
        this.dialogsMap["WarningMessage"] = alert_dialog_1.WarningDialog;
        this.dialogsMap["Hyperlink"] = hyperlink_dialog_1.HyperlinkDialog;
        this.dialogsMap["Bookmarks"] = bookmark_dialog_1.BookmarkDialog;
        this.dialogsMap["InsertTableCells"] = insert_table_cells_dialog_1.InsertTableCellsDialog;
        this.dialogsMap["DeleteTableCells"] = delete_table_cells_dialog_1.DeleteTableCellsDialog;
        this.dialogsMap["SplitTableCells"] = split_table_cells_dialog_1.SplitTableCellsDialog;
        this.dialogsMap["FindReplace"] = find_replace_dialog_1.FindReplaceDialog;
        this.dialogsMap["PageSetup"] = page_setup_dialog_1.PageSetupDialog;
        this.dialogsMap["Tabs"] = tabs_dialog_1.TabsDialog;
        this.dialogsMap["InsertMergeField"] = insert_merge_field_dialog_1.InsertMergeFieldDialog;
        this.dialogsMap["FinishAndMerge"] = finish_and_merge_dialog_1.FinishAndMergeDialog;
    }
    DialogManager.prototype.dispose = function () {
        number_1.NumberMapUtils.forEach(this.dialogsMap, function (dialog) {
            if (dialog.dispose)
                dialog.dispose();
        });
        dom_1.DomUtils.hideNode(this.dialogElement);
    };
    DialogManager.prototype.getDialog = function (name) {
        var dialogType = this.dialogsMap[name];
        return dialogType ? this.getDialogByType(dialogType) : null;
    };
    DialogManager.prototype.getDialogByType = function (type) {
        return new type(this.dialogElement, this.richedit);
    };
    return DialogManager;
}());
exports.DialogManager = DialogManager;
