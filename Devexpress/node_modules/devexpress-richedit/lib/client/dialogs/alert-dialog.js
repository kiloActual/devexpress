"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var localization_1 = require("devextreme/localization");
var localization_2 = require("../localization");
var dialog_base_1 = require("./dialog-base");
var AlertDialog = (function (_super) {
    tslib_1.__extends(AlertDialog, _super);
    function AlertDialog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AlertDialog.prototype.getMaxWidth = function () {
        return 500;
    };
    AlertDialog.prototype.getFormOptions = function () {
        return {
            labelLocation: 'top',
            colCount: 1,
            items: [{
                    dataField: 'text',
                    editorType: 'dxTextArea',
                    label: { visible: false },
                    editorOptions: {
                        value: localization_2.Localization.getAlertText(this.parameters.messageTextId),
                        height: 80,
                        readOnly: true
                    }
                }]
        };
    };
    AlertDialog.prototype.getToolbarItems = function () {
        return [this.getOkToolbarItem()];
    };
    AlertDialog.prototype.updateParameters = function (_parameters, _data) { };
    return AlertDialog;
}(dialog_base_1.DialogBase));
exports.AlertDialog = AlertDialog;
var ErrorDialog = (function (_super) {
    tslib_1.__extends(ErrorDialog, _super);
    function ErrorDialog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ErrorDialog.prototype.getTitle = function () {
        return localization_1.formatMessage("ASPxRichEditStringId.ErrorTitle");
    };
    return ErrorDialog;
}(AlertDialog));
exports.ErrorDialog = ErrorDialog;
var InformationDialog = (function (_super) {
    tslib_1.__extends(InformationDialog, _super);
    function InformationDialog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InformationDialog.prototype.getTitle = function () {
        return localization_1.formatMessage("ASPxRichEditStringId.InformationTitle");
    };
    return InformationDialog;
}(AlertDialog));
exports.InformationDialog = InformationDialog;
var WarningDialog = (function (_super) {
    tslib_1.__extends(WarningDialog, _super);
    function WarningDialog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WarningDialog.prototype.getTitle = function () {
        return localization_1.formatMessage("ASPxRichEditStringId.WarningTitle");
    };
    return WarningDialog;
}(AlertDialog));
exports.WarningDialog = WarningDialog;
