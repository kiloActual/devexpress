"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ui_changes_listener_1 = require("../public/commands/ui-changes-listener");
var ClientBarHolder = (function () {
    function ClientBarHolder(ribbon, contextMenu, raiseUpdatePublicUi) {
        this.ribbon = ribbon;
        this.contextMenu = contextMenu;
        this.publicUiChangesListener = new ui_changes_listener_1.ClientPublicUiChangesListener(raiseUpdatePublicUi);
    }
    ClientBarHolder.prototype.initialize = function (core) {
        var _a;
        (_a = this.ribbon) === null || _a === void 0 ? void 0 : _a.initialize(core);
        this.contextMenu.initialize(core);
    };
    ClientBarHolder.prototype.updateItemsState = function (queryCommands) {
        var _a;
        (_a = this.ribbon) === null || _a === void 0 ? void 0 : _a.updateItemsState(queryCommands);
        this.contextMenu.updateItemsState(queryCommands);
        this.publicUiChangesListener.forceUpdate(queryCommands);
    };
    ClientBarHolder.prototype.setEnabled = function (_value) { };
    ClientBarHolder.prototype.removeRibbonBar = function () {
        var _a;
        (_a = this.ribbon) === null || _a === void 0 ? void 0 : _a.dispose();
        this.ribbon = null;
    };
    ClientBarHolder.prototype.dispose = function () {
        var _a;
        this.contextMenu.dispose();
        (_a = this.ribbon) === null || _a === void 0 ? void 0 : _a.dispose();
    };
    ClientBarHolder.prototype.forceUpdate = function (queryCommands) {
        var _a;
        (_a = this.ribbon) === null || _a === void 0 ? void 0 : _a.forceUpdate(queryCommands);
        this.contextMenu.forceUpdate(queryCommands);
        this.horizontalRuler.forceUpdate(queryCommands);
        this.publicUiChangesListener.forceUpdate(queryCommands);
    };
    ClientBarHolder.prototype.enableUpdate = function (value) {
        if (this.ribbon)
            this.ribbon.updateEnabled = value;
        this.contextMenu.updateEnabled = value;
        this.horizontalRuler.updateEnabled = value;
        this.publicUiChangesListener.updateEnabled = value;
    };
    return ClientBarHolder;
}());
exports.ClientBarHolder = ClientBarHolder;
