"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var timeout = 500;
function setPlaceholders(placeholders) {
    var placeholderCreator = window.NUSA_createCommandPlaceholder;
    var setPlaceholderValues = window.NUSA_setCommandPlaceholderValues;
    for (var _i = 0, placeholders_1 = placeholders; _i < placeholders_1.length; _i++) {
        var placeholder = placeholders_1[_i];
        placeholderCreator(placeholder.id, placeholder.description);
        var values = [];
        var spokenForms = [];
        for (var _a = 0, _b = placeholder.values; _a < _b.length; _a++) {
            var val = _b[_a];
            if (Array.isArray(val)) {
                spokenForms.push(val[0]);
                values.push(val[1]);
            }
            else {
                spokenForms.push(val.spokenForm);
                values.push(val.value);
            }
        }
        setPlaceholderValues(placeholder.id, values, spokenForms);
    }
}
function setCommands(commandSets) {
    var createCommandSet = window.NUSA_createCommandSet;
    var createCommand = window.NUSA_createCommand;
    for (var _i = 0, commandSets_1 = commandSets; _i < commandSets_1.length; _i++) {
        var cmdSet = commandSets_1[_i];
        var cmdSetId = createCommandSet(cmdSet.title, cmdSet.description);
        for (var _a = 0, _b = cmdSet.commands; _a < _b.length; _a++) {
            var command = _b[_a];
            createCommand(cmdSetId, command.commandId, command.phrase, command.title, command.description);
        }
    }
}
function WRE_registerCommands(commandSets, placeholders) {
    var tryCounter = 0;
    var register = function () {
        if (tryCounter++ > 10)
            return;
        var placeholderCreator = window.NUSA_createCommandPlaceholder;
        if (placeholderCreator) {
            setPlaceholders(placeholders);
            setCommands(commandSets);
            WRE_NUSA_reinitializeVuiForm();
        }
        else {
            setTimeout(function () {
                register();
            }, timeout);
        }
    };
    register();
}
exports.WRE_registerCommands = WRE_registerCommands;
function WRE_NUSA_registerCustomControlType(customControlTypeName, callback) {
    var tryCounter = 0;
    var register = function () {
        if (tryCounter++ > 10)
            return;
        var registrator = window.NUSA_registerCustomControlType;
        if (registrator)
            callback(registrator(customControlTypeName));
        else {
            setTimeout(function () {
                register();
            }, timeout);
        }
    };
    register();
}
exports.WRE_NUSA_registerCustomControlType = WRE_NUSA_registerCustomControlType;
var reinitVuiFormId = null;
function WRE_NUSA_reinitializeVuiForm() {
    if (reinitVuiFormId !== null)
        return;
    var tryCounter = 0;
    var reinitialize = function () {
        var reinitializator = window.NUSA_reinitializeVuiForm;
        if (tryCounter++ > 10) {
            reinitVuiFormId = null;
            return;
        }
        if (reinitializator) {
            reinitVuiFormId = null;
            try {
                reinitializator();
            }
            catch (_e) {
            }
        }
        else {
            reinitVuiFormId = setTimeout(function () {
                reinitialize();
            }, timeout);
        }
    };
    reinitialize();
}
exports.WRE_NUSA_reinitializeVuiForm = WRE_NUSA_reinitializeVuiForm;
function WRE_NUSA_registerCustomContainerType(customContainerTypeName, callback) {
    var tryCounter = 0;
    var register = function () {
        if (tryCounter++ > 10)
            return;
        var registrator = window.NUSA_registerCustomContainerType;
        if (registrator)
            callback(registrator(customContainerTypeName));
        else {
            setTimeout(function () {
                register();
            }, timeout);
        }
    };
    register();
}
exports.WRE_NUSA_registerCustomContainerType = WRE_NUSA_registerCustomContainerType;
exports.WRE_NUSA_controlTypeAttr = 'data-nusa-custom-control-type';
exports.WRE_NUSA_containerTypeAttr = 'data-nusa-custom-container-type';
exports.WRE_NUSA_enabledAttr = 'data-nusa-enabled';
exports.WRE_NUSA_conceptNameAttr = 'data-nusa-concept-name';
