"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var base_1 = require("./base");
var utils_1 = require("../../../../base-utils/utils");
var common_1 = require("@devexpress/utils/lib/utils/common");
var RibbonSelectBoxItem = (function (_super) {
    tslib_1.__extends(RibbonSelectBoxItem, _super);
    function RibbonSelectBoxItem(id, dataSource, options) {
        if (options === void 0) { options = {}; }
        var _a;
        var _this = _super.call(this, id, options.beginGroup) || this;
        _this.type = base_1.RibbonItemType.SelectBox;
        _this.dataSource = dataSource;
        _this.width = options.width;
        _this.displayExpr = options.displayExpr;
        _this.valueExpr = options.valueExpr;
        _this.value = options.value;
        _this._localizeDataSourceItems = options._localizeDataSourceItems === undefined ? false : options._localizeDataSourceItems;
        _this.textOptions = (_a = options.textOptions) !== null && _a !== void 0 ? _a : {};
        _this.showClearButton = options.showClearButton === undefined ? false : options.showClearButton;
        _this.placeholder = options.placeholder;
        _this.acceptCustomValue = common_1.isDefined(options.acceptCustomValue) ? options.acceptCustomValue : false;
        _this.onCustomItemCreating = options.onCustomItemCreating ? utils_1.convertToFunction(options.onCustomItemCreating) : undefined;
        return _this;
    }
    return RibbonSelectBoxItem;
}(base_1.RibbonItemBase));
exports.RibbonSelectBoxItem = RibbonSelectBoxItem;
