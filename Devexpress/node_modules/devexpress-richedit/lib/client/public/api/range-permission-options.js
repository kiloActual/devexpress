"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var RangePermissionOptionsApi = (function () {
    function RangePermissionOptionsApi(native) {
        this._native = native;
    }
    Object.defineProperty(RangePermissionOptionsApi.prototype, "highlightRanges", {
        get: function () {
            return this._native.core.modelManager.richOptions.documentProtection.highlightRanges;
        },
        set: function (value) {
            if (this.highlightRanges == value)
                return;
            this._native.core.modelManager.richOptions.documentProtection.highlightRanges = value;
            this._native.core.modelManager.modelManipulator.documentProtectionProperties.raiseRangePermissionPropertiesChanged();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangePermissionOptionsApi.prototype, "showBrackets", {
        get: function () {
            return this._native.core.modelManager.richOptions.documentProtection.showBrackets;
        },
        set: function (value) {
            if (this.showBrackets == value)
                return;
            this._native.core.modelManager.richOptions.documentProtection.showBrackets = value;
            this._native.core.modelManager.modelManipulator.documentProtectionProperties.raiseProtectionPropertiesChanged();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangePermissionOptionsApi.prototype, "highlightColor", {
        get: function () {
            return this._native.core.modelManager.richOptions.documentProtection.rangeHighlightColor;
        },
        set: function (value) {
            if (this.highlightColor == value)
                return;
            this._native.core.modelManager.richOptions.documentProtection.rangeHighlightColor = value;
            this._native.core.modelManager.modelManipulator.documentProtectionProperties.raiseRangePermissionPropertiesChanged();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangePermissionOptionsApi.prototype, "bracketsColor", {
        get: function () {
            return this._native.core.modelManager.richOptions.documentProtection.rangeHighlightBracketsColor;
        },
        set: function (value) {
            if (this.bracketsColor == value)
                return;
            this._native.core.modelManager.richOptions.documentProtection.rangeHighlightBracketsColor = value;
            this._native.core.modelManager.modelManipulator.documentProtectionProperties.raiseProtectionPropertiesChanged();
        },
        enumerable: true,
        configurable: true
    });
    return RangePermissionOptionsApi;
}());
exports.RangePermissionOptionsApi = RangePermissionOptionsApi;
