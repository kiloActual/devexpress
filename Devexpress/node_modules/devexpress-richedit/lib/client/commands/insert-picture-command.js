"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var command_base_1 = require("../../base/commands/command-base");
var command_states_1 = require("../../base/commands/command-states");
var insert_picture_manipulator_params_1 = require("../../core/model/manipulators/picture-manipulator/insert-picture-manipulator-params");
var image_loading_options_1 = require("../../core/model/manipulators/picture-manipulator/loader/image-loading-options");
var control_1 = require("../../core/model/options/control");
var InsertPictureCommand = (function (_super) {
    tslib_1.__extends(InsertPictureCommand, _super);
    function InsertPictureCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InsertPictureCommand.prototype.getState = function () {
        return new command_states_1.SimpleCommandState(this.isEnabled());
    };
    InsertPictureCommand.prototype.isEnabled = function () {
        return _super.prototype.isEnabled.call(this) && control_1.ControlOptions.isEnabled(this.control.modelManager.richOptions.control.inlinePictures) &&
            this.control.selection.intervals.length === 1;
    };
    InsertPictureCommand.prototype.executeCore = function () {
        var _this = this;
        var input = document.createElement('input');
        input.type = 'file';
        input.accept = '.jpg,.jpeg,.png,.bmp';
        input.addEventListener('change', function (e) { return _this.onFileChange(e); }, false);
        input.click();
        return true;
    };
    InsertPictureCommand.prototype.onFileChange = function (e) {
        var file = e.target.files[0];
        if (file) {
            var cacheInfo = this.control.modelManager.model.cache.imageCache.createUnloadedInfoByFile(file);
            this.modelManipulator.picture.insertInlinePictureViaHistory(this.selection.intervalsInfo.subDocPosition, this.inputPosition.charPropsBundle, insert_picture_manipulator_params_1.InlinePictureInfo.defaultInfo(cacheInfo), new image_loading_options_1.ImageLoadingOptions(true));
        }
    };
    return InsertPictureCommand;
}(command_base_1.CommandBase));
exports.InsertPictureCommand = InsertPictureCommand;
