"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var client_command_1 = require("../../base/commands/client-command");
var command_manager_1 = require("../../base/commands/command-manager");
var download_document_command_1 = require("./download-document-command");
var export_document_command_1 = require("./export-document-command");
var insert_picture_command_1 = require("./insert-picture-command");
var mail_merge_command_1 = require("./mail-merge-command");
var new_document_command_1 = require("./new-document-command");
var open_document_command_1 = require("./open-document-command");
var ClientCommandManager = (function (_super) {
    tslib_1.__extends(ClientCommandManager, _super);
    function ClientCommandManager(control) {
        var _this = _super.call(this, control) || this;
        _this.createCommand(control, client_command_1.RichEditClientCommand.OpenDocumentLocally, open_document_command_1.OpenDocumentCommand);
        _this.createCommand(control, client_command_1.RichEditClientCommand.InsertPictureLocally, insert_picture_command_1.InsertPictureCommand);
        _this.createCommand(control, client_command_1.RichEditClientCommand.CreateNewDocumentLocally, new_document_command_1.NewDocumentCommand);
        _this.createCommand(control, client_command_1.RichEditClientCommand.ExportDocument, export_document_command_1.ExportDocumentCommand);
        _this.createCommand(control, client_command_1.RichEditClientCommand.DownloadDocumentLocally, download_document_command_1.DownloadDocumentCommand);
        _this.createCommand(control, client_command_1.RichEditClientCommand.DownloadDocx, download_document_command_1.DownloadDocxCommand);
        _this.createCommand(control, client_command_1.RichEditClientCommand.DownloadRtf, download_document_command_1.DownloadRtfCommand);
        _this.createCommand(control, client_command_1.RichEditClientCommand.DownloadTxt, download_document_command_1.DownloadTxtCommand);
        _this.createCommand(control, client_command_1.RichEditClientCommand.MailMergeOnClient, mail_merge_command_1.MailMergeCommand);
        return _this;
    }
    return ClientCommandManager;
}(command_manager_1.CommandManager));
exports.ClientCommandManager = ClientCommandManager;
