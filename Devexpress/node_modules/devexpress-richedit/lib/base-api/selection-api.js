"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var parameter_checker_1 = require("../api-utils/api-utils/parameter-checker");
var client_command_1 = require("../base/commands/client-command");
var model_states_1 = require("../base/scroll/model-states");
var selection_1 = require("../base/selection/selection");
var fixed_1 = require("@devexpress/utils/lib/intervals/fixed");
var list_1 = require("@devexpress/utils/lib/utils/list");
var api_utils_1 = require("../model-api/api-utils/api-utils");
var model_parameter_checker_1 = require("../model-api/api-utils/model-parameter-checker");
var interval_1 = require("../model-api/interval");
var sub_document_1 = require("./sub-document");
var RichEditSelectionApi = (function () {
    function RichEditSelectionApi(core) {
        this._core = core;
    }
    Object.defineProperty(RichEditSelectionApi.prototype, "activeSubDocument", {
        get: function () {
            return new sub_document_1.SubDocumentBaseApi(this._core, this._core.selection.activeSubDocument);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RichEditSelectionApi.prototype, "anchor", {
        get: function () {
            return this._core.selection.getState().anchorPostion;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RichEditSelectionApi.prototype, "active", {
        get: function () {
            return this._core.selection.getState().activePostion;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RichEditSelectionApi.prototype, "start", {
        get: function () {
            return this._core.selection.getState().interval.start;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RichEditSelectionApi.prototype, "end", {
        get: function () {
            return this._core.selection.getState().interval.end;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RichEditSelectionApi.prototype, "intervals", {
        get: function () {
            var result = [];
            for (var i = 0, int = void 0; int = this._core.selection.intervals[i]; i++) {
                var interval = new interval_1.IntervalApi(int.start, int.length);
                result.push(interval);
            }
            return result;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RichEditSelectionApi.prototype, "showCursorAtEndOfLine", {
        get: function () { return this._core.selection.endOfLine; },
        set: function (value) {
            if (value != this._core.selection.endOfLine)
                this._core.selection.changeState(function (state) { return state.setEndOfLine(value); });
        },
        enumerable: true,
        configurable: true
    });
    RichEditSelectionApi.prototype.setSelection = function (position) {
        var sd = this._core.selection.activeSubDocument;
        var subDocEndPos = sd.getDocumentEndPosition();
        var coreIntervals = parameter_checker_1.ApiParametersChecker.check(position, 1, false, [
            parameter_checker_1.ApiParametersChecker.numberDescriptor("position", function (n) { return [api_utils_1.getRestrictedInterval(new fixed_1.FixedInterval(n, 0), 0, subDocEndPos)]; }),
            model_parameter_checker_1.ModelParametersChecker.intervalDescriptor("interval", function (interval) { return [api_utils_1.getRestrictedInterval(interval, 0, subDocEndPos)]; }),
            model_parameter_checker_1.ModelParametersChecker.intervalsDescriptor("intervals", function (apiIntervals) {
                return list_1.ListUtils.map(apiIntervals, function (interval) { return api_utils_1.getRestrictedInterval(interval, 0, subDocEndPos); });
            })
        ]);
        var isPublicApiCallPrevValue = this._core.commandManager.isPublicApiCall;
        this._core.commandManager.isPublicApiCall = true;
        this._core.selection.changeState(function (newState) {
            if (fixed_1.FixedInterval.isCollapsed(coreIntervals)) {
                var pos = coreIntervals[0].start;
                var par = sd.getParagraphByPosition(pos);
                if (par.startLogPosition.value == pos)
                    newState.setEndOfLine(false);
            }
            newState.setIntervals(coreIntervals);
        }, new selection_1.SetSelectionStateOptions().noFieldUiChecks());
        this._core.selection.scrollManager.setScroll(new model_states_1.ScrollState().byModelPosition(this._core.selection).setModelPosition(this._core.selection.anchorPosition).useStdRelativePosition().useStdOffset());
        this._core.commandManager.isPublicApiCall = isPublicApiCallPrevValue;
    };
    RichEditSelectionApi.prototype.selectAll = function () {
        this._core.commandManager.getCommand(client_command_1.RichEditClientCommand.SelectAll).execute(true);
    };
    RichEditSelectionApi.prototype.goToSubDocumentEnd = function (extendSelection) {
        if (extendSelection)
            this._core.commandManager.getCommand(client_command_1.RichEditClientCommand.ExtendDocumentEnd).execute(true);
        else
            this._core.commandManager.getCommand(client_command_1.RichEditClientCommand.DocumentEnd).execute(true);
    };
    return RichEditSelectionApi;
}());
exports.RichEditSelectionApi = RichEditSelectionApi;
