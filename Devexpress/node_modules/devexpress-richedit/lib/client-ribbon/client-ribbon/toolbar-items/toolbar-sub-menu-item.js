"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ToolbarSubMenuItem = (function () {
    function ToolbarSubMenuItem(name, menuItem) {
        this.name = name;
        this.menuItem = menuItem;
    }
    ToolbarSubMenuItem.prototype.setValue = function (value) {
        if (typeof value !== 'boolean')
            return;
        if (this.element)
            this.setValueCore(this.element, value);
        else
            this.selected = value;
    };
    ToolbarSubMenuItem.prototype.setElement = function (element) {
        this.element = element;
        if (this.selected !== undefined) {
            this.setValue(this.selected);
            this.selected = undefined;
        }
    };
    ToolbarSubMenuItem.prototype.setEnabled = function (enabled) {
        this.setDataOption('disabled', !enabled);
    };
    ToolbarSubMenuItem.prototype.setVisible = function (visible) {
        this.setDataOption('visible', visible);
    };
    ToolbarSubMenuItem.prototype.setValueCore = function (itemElement, value) {
        if (value)
            itemElement.classList.add(ToolbarSubMenuItem.SelectedItemClassName);
        else
            itemElement.classList.remove(ToolbarSubMenuItem.SelectedItemClassName);
    };
    ToolbarSubMenuItem.prototype.setDataOption = function (optionName, optionValue) {
        var _this = this;
        var dataOptionName = this.getDataOptionName();
        if (!dataOptionName)
            return;
        setTimeout(function () { return _this.menuItem.getWidget().option(dataOptionName + "." + optionName, optionValue); }, 0);
    };
    ToolbarSubMenuItem.prototype.getDataOptionName = function () {
        if (this.dataOptionName === undefined)
            this.dataOptionName = this.getDataOptionNameCore(this.menuItem.getOptions().items, 'items[0]');
        return this.dataOptionName;
    };
    ToolbarSubMenuItem.prototype.getDataOptionNameCore = function (items, path) {
        var _this = this;
        if (!items)
            return null;
        var item = items.filter(function (i) { return i.name == _this.name; })[0];
        if (item)
            return path + ".items[" + items.indexOf(item) + "]";
        for (var i = 0; i < items.length; i++) {
            var result = this.getDataOptionNameCore(items[i].items, path + ".items[" + i + "]");
            if (result)
                return result;
        }
        return null;
    };
    ToolbarSubMenuItem.SelectedItemClassName = 'dx-menu-item-selected';
    return ToolbarSubMenuItem;
}());
exports.ToolbarSubMenuItem = ToolbarSubMenuItem;
