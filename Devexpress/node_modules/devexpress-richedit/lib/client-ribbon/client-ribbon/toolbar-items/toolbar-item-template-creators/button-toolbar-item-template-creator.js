"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var dxt_utils_1 = require("../../../../dxt-utils/dxt-utils/dxt-utils");
var base_types_1 = require("./base-types");
var ButtonToolbarItemTemplateCreator = (function (_super) {
    tslib_1.__extends(ButtonToolbarItemTemplateCreator, _super);
    function ButtonToolbarItemTemplateCreator(options) {
        var _this = _super.call(this) || this;
        _this.options = options;
        return _this;
    }
    ButtonToolbarItemTemplateCreator.prototype.createTemplate = function () {
        var result = _super.prototype.createTemplate.call(this);
        result.widget = 'dxButton';
        result.showText = !this.options.itemOptions.icon || this.options.itemOptions.alwaysShowText ? 'always' : 'inMenu';
        result.options = this.getButtonOptions();
        return result;
    };
    ButtonToolbarItemTemplateCreator.prototype.getButtonOptions = function () {
        return {
            text: this.options.itemOptions.text,
            icon: this.options.itemOptions.icon ? dxt_utils_1.DxtUtils.correctIconName(this.options.itemOptions.icon) : undefined,
            hint: this.options.itemOptions.text,
            stylingMode: 'text',
            focusStateEnabled: false,
            onInitialized: this.options.onInitialized,
            onClick: this.options.onClick
        };
    };
    return ButtonToolbarItemTemplateCreator;
}(base_types_1.ToolbarItemTemplateCreator));
exports.ButtonToolbarItemTemplateCreator = ButtonToolbarItemTemplateCreator;
