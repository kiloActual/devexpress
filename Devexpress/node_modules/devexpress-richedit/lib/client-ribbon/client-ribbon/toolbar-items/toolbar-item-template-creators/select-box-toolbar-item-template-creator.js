"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var select_box_1 = require("devextreme/ui/select_box");
var base_types_1 = require("./base-types");
var SelectBoxToolbarItemTemplateCreator = (function (_super) {
    tslib_1.__extends(SelectBoxToolbarItemTemplateCreator, _super);
    function SelectBoxToolbarItemTemplateCreator(options) {
        var _this = _super.call(this) || this;
        _this.options = options;
        return _this;
    }
    SelectBoxToolbarItemTemplateCreator.prototype.createTemplate = function () {
        var result = _super.prototype.createTemplate.call(this);
        result.widget = 'dxSelectBox';
        var widgetOptions = this.getWidgetOptions();
        if (this.shouldCreateTextContentTemplate(this.options.itemOptions.textOptions))
            result.template = this.createTextContentTemplate(this.options.itemOptions.textOptions, widgetOptions, select_box_1.default);
        else
            result.options = widgetOptions;
        return result;
    };
    SelectBoxToolbarItemTemplateCreator.prototype.getOnCustomItemCreating = function (itemOptions) {
        return itemOptions.acceptCustomValue && itemOptions.onCustomItemCreating ? itemOptions.onCustomItemCreating :
            function (e) { if (!e.customItem) {
                e.customItem = e.text;
            } };
    };
    SelectBoxToolbarItemTemplateCreator.prototype.getWidgetOptions = function () {
        var itemOptions = this.options.itemOptions;
        return {
            placeholder: itemOptions.placeholder,
            stylingMode: 'filled',
            searchEnabled: true,
            acceptCustomValue: itemOptions.acceptCustomValue,
            dataSource: itemOptions.dataSource,
            width: itemOptions.width,
            displayExpr: itemOptions.displayExpr,
            valueExpr: itemOptions.valueExpr,
            value: itemOptions.value,
            showClearButton: itemOptions.showClearButton,
            onValueChanged: this.options.onValueChanged,
            onInitialized: this.options.onInitialized,
            onFocusOut: _super.prototype.getOnFocusOut.call(this),
            onKeyDown: _super.prototype.getOnKeyDown.call(this),
            onCustomItemCreating: this.getOnCustomItemCreating(itemOptions),
            elementAttr: { class: this.getCssClass() }
        };
    };
    return SelectBoxToolbarItemTemplateCreator;
}(base_types_1.ToolbarDropDownItemTemplateCreator));
exports.SelectBoxToolbarItemTemplateCreator = SelectBoxToolbarItemTemplateCreator;
