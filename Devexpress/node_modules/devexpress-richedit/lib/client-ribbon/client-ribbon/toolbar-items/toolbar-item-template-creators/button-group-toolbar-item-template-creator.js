"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var dxt_utils_1 = require("../../../../dxt-utils/dxt-utils/dxt-utils");
var base_types_1 = require("./base-types");
var ButtonGroupToolbarItemTemplateCreator = (function (_super) {
    tslib_1.__extends(ButtonGroupToolbarItemTemplateCreator, _super);
    function ButtonGroupToolbarItemTemplateCreator(options) {
        var _this = _super.call(this) || this;
        _this.options = options;
        return _this;
    }
    ButtonGroupToolbarItemTemplateCreator.prototype.createTemplate = function () {
        var result = _super.prototype.createTemplate.call(this);
        result.widget = 'dxButtonGroup';
        result.showText = !this.options.itemOptions.items[0] || !this.options.itemOptions.items[0].icon || this.options.itemOptions.alwaysShowText
            ? 'always'
            : 'inMenu';
        result.options = this.getButtonGroupOptions();
        return result;
    };
    ButtonGroupToolbarItemTemplateCreator.prototype.getButtonGroupOptions = function () {
        return {
            focusStateEnabled: false,
            onInitialized: this.options.onInitialized,
            items: this.options.itemOptions.items.map(function (i) {
                var correctedItem = i;
                correctedItem.icon = correctedItem.icon ? dxt_utils_1.DxtUtils.correctIconName(correctedItem.icon) : correctedItem.icon;
                return correctedItem;
            })
        };
    };
    return ButtonGroupToolbarItemTemplateCreator;
}(base_types_1.ToolbarItemTemplateCreator));
exports.ButtonGroupToolbarItemTemplateCreator = ButtonGroupToolbarItemTemplateCreator;
