"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var base_types_1 = require("./base-types");
var NumberBoxToolbarItemTemplateCreator = (function (_super) {
    tslib_1.__extends(NumberBoxToolbarItemTemplateCreator, _super);
    function NumberBoxToolbarItemTemplateCreator(options) {
        var _this = _super.call(this) || this;
        _this.options = options;
        return _this;
    }
    NumberBoxToolbarItemTemplateCreator.prototype.createTemplate = function () {
        var result = _super.prototype.createTemplate.call(this);
        result['widget'] = 'dxNumberBox';
        result.options = this.getWidgetOptions();
        return result;
    };
    NumberBoxToolbarItemTemplateCreator.prototype.getWidgetOptions = function () {
        var optionsFormat = this.options.itemOptions.format;
        var format = optionsFormat == undefined || optionsFormat == null ? this.options.itemOptions.text + " #0.#" : optionsFormat;
        return {
            placeholder: '',
            focusStateEnabled: false,
            hint: this.options.itemOptions.text,
            stylingMode: 'filled',
            format: format,
            value: this.options.itemOptions.value,
            width: this.options.itemOptions.width,
            showSpinButtons: true,
            min: this.options.itemOptions.min,
            max: this.options.itemOptions.max,
            step: this.options.itemOptions.step,
            onValueChanged: this.options.onValueChanged,
            onInitialized: this.options.onInitialized,
            elementAttr: { class: this.getCssClass() }
        };
    };
    return NumberBoxToolbarItemTemplateCreator;
}(base_types_1.ToolbarItemTemplateCreator));
exports.NumberBoxToolbarItemTemplateCreator = NumberBoxToolbarItemTemplateCreator;
