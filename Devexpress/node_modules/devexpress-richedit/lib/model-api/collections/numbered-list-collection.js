"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var parameter_checker_1 = require("../../api-utils/api-utils/parameter-checker");
var numbering_list_history_items_1 = require("../../core/model/history/items/numbering-list-history-items");
var numbering_helper_1 = require("../../core/model/numbering-lists/numbering-helper");
var numbering_list_1 = require("../../core/model/numbering-lists/numbering-list");
var fixed_1 = require("@devexpress/utils/lib/intervals/fixed");
var api_utils_1 = require("../api-utils/api-utils");
var model_parameter_checker_1 = require("../api-utils/model-parameter-checker");
var enums_1 = require("../lists/enums");
var lists_1 = require("../lists/lists");
var collection_1 = require("./collection");
var ListCollection = (function (_super) {
    tslib_1.__extends(ListCollection, _super);
    function ListCollection() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ListCollection.prototype.create = function (type) {
        api_utils_1.ApiUtils.assertEnum(type, enums_1.ListTypeApi, "NumberingType", 'type');
        var templateIndex = numbering_helper_1.NumberingHelper.getNumberingListTemplateIndex(this._processor.modelManager.model, enums_1.ListTypeApiConverter.toCoreEnum(type));
        var template = this._processor.modelManager.model.abstractNumberingListTemplates[templateIndex];
        var abstractNumberingList = new numbering_list_1.AbstractNumberingList(this._processor.modelManager.model);
        abstractNumberingList.copyFrom(template);
        this._processor.beginUpdate();
        this._processor.modelManager.history.beginTransaction();
        this._processor.modelManager.history.addAndRedo(new numbering_list_history_items_1.AddAbstractNumberingListHistoryItem(this._processor.modelManager.modelManipulator, abstractNumberingList));
        var abstractNumberingListIndex = this._processor.modelManager.model.abstractNumberingLists.length - 1;
        var numberingList = new numbering_list_1.NumberingList(this._processor.modelManager.model, abstractNumberingListIndex);
        this._processor.modelManager.history.addAndRedo(new numbering_list_history_items_1.AddNumberingListHistoryItem(this._processor.modelManager.modelManipulator, numberingList));
        this._processor.modelManager.history.endTransaction();
        this._processor.endUpdate();
        return this._getItem(numberingList);
    };
    ListCollection.prototype.deleteNumeration = function (subDocument, interval) {
        var coreInterval = parameter_checker_1.ApiParametersChecker.check(interval, 2, false, [
            parameter_checker_1.ApiParametersChecker.numberDescriptor("position", function (n) { return new fixed_1.FixedInterval(n, 0); }),
            model_parameter_checker_1.ModelParametersChecker.intervalDescriptor("interval", function (interval) { return new fixed_1.FixedInterval(interval.start, interval.length); })
        ]);
        var SubDocument = this._processor.modelManager.model.subDocuments[subDocument.id];
        var paragraphIndices = SubDocument.getParagraphIndicesByIntervals([coreInterval]);
        this._processor.beginUpdate();
        this._processor.modelManager.history.beginTransaction();
        numbering_helper_1.NumberingHelper.deleteNumberingList(this._processor.modelManager, this._processor.modelManager.model.subDocuments[subDocument.id], paragraphIndices);
        this._processor.modelManager.history.endTransaction();
        this._processor.endUpdate();
    };
    ListCollection.prototype._getItem = function (coreItem) {
        return new lists_1.ListApi(this._processor.modelManager, coreItem);
    };
    ListCollection.prototype._getCoreItems = function () {
        return this._processor.modelManager.model.numberingLists;
    };
    return ListCollection;
}(collection_1.Collection));
exports.ListCollection = ListCollection;
