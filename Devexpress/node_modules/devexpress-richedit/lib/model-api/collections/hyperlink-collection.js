"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var parameter_checker_1 = require("../../api-utils/api-utils/parameter-checker");
var field_1 = require("../../core/model/fields/field");
var field_context_menu_helper_1 = require("../../core/model/fields/field-context-menu-helper");
var apply_field_hyperlink_style_history_item_1 = require("../../core/model/history/items/apply-field-hyperlink-style-history-item");
var change_field_hyperlink_info_history_item_1 = require("../../core/model/history/items/change-field-hyperlink-info-history-item");
var field_insert_history_item_1 = require("../../core/model/history/items/field-insert-history-item");
var sub_document_1 = require("../../core/model/sub-document");
var input_position_base_1 = require("../../core/selection/input-position-base");
var selection_intervals_info_1 = require("../../core/selection/selection-intervals-info");
var fixed_1 = require("@devexpress/utils/lib/intervals/fixed");
var list_1 = require("@devexpress/utils/lib/utils/list");
var math_1 = require("@devexpress/utils/lib/utils/math");
var model_parameter_checker_1 = require("../api-utils/model-parameter-checker");
var field_2 = require("../field");
var interval_1 = require("../interval");
var sub_document_2 = require("../sub-document");
var collection_1 = require("./collection");
var field_collection_1 = require("./field-collection");
var HyperlinkCollection = (function (_super) {
    tslib_1.__extends(HyperlinkCollection, _super);
    function HyperlinkCollection(processor, subDocument) {
        var _this = _super.call(this, processor) || this;
        _this._subDocument = subDocument;
        return _this;
    }
    HyperlinkCollection.prototype.create = function (position, hyperlinkInfo) {
        var interval = parameter_checker_1.ApiParametersChecker.check(position, 1, false, [
            parameter_checker_1.ApiParametersChecker.numberDescriptor("position", function (n) { return new fixed_1.FixedInterval(n, 0); }),
            model_parameter_checker_1.ModelParametersChecker.intervalDescriptor("interval", function (interval) { return new fixed_1.FixedInterval(interval.start, interval.length); })
        ]);
        var docEndPos = this._subDocument.getDocumentEndPosition() - 1;
        var startP = math_1.MathUtils.restrictValue(interval.start, 0, docEndPos);
        var endP = math_1.MathUtils.restrictValue(interval.end, 0, docEndPos);
        interval.start = startP;
        interval.length = Math.max(0, endP - startP);
        hyperlinkInfo = parameter_checker_1.ApiParametersChecker.check(hyperlinkInfo, 2, false, [
            parameter_checker_1.ApiParametersChecker.objectDescriptor("hyperlinkInfo", "DevExpress.RichEdit.HyperinkInfo", function (s) { return s; })
        ]);
        hyperlinkInfo.tooltip = parameter_checker_1.ApiParametersChecker.check(hyperlinkInfo.tooltip, 2, true, [
            parameter_checker_1.ApiParametersChecker.stringDescriptor("hyperlinkInfo.tooltip", function (s) { return s ? s : ""; }, true)
        ]);
        hyperlinkInfo.text = parameter_checker_1.ApiParametersChecker.check(hyperlinkInfo.text, 2, true, [
            parameter_checker_1.ApiParametersChecker.stringDescriptor("hyperlinkInfo.text", function (s) { return s ? s : ""; }, true)
        ]);
        hyperlinkInfo.bookmark = parameter_checker_1.ApiParametersChecker.check(hyperlinkInfo.bookmark, 2, true, [
            parameter_checker_1.ApiParametersChecker.stringDescriptor("hyperlinkInfo.bookmark", function (s) { return s ? s : ""; }, true)
        ]);
        hyperlinkInfo.url = parameter_checker_1.ApiParametersChecker.check(hyperlinkInfo.url, 2, true, [
            parameter_checker_1.ApiParametersChecker.stringDescriptor("hyperlinkInfo.url", function (s) { return s ? s : ""; }, true)
        ]);
        var info = new field_1.HyperlinkInfo(hyperlinkInfo.url, hyperlinkInfo.bookmark, hyperlinkInfo.tooltip, false);
        var canChangeHyperlinkDisplayText = field_context_menu_helper_1.FieldContextMenuHelper.canChangeHyperlinkDisplayText(new sub_document_1.SubDocumentInterval(this._subDocument, interval));
        var subDocument = new sub_document_2.SubDocumentApi(this._processor, this._subDocument);
        var inputPos = new input_position_base_1.InputPositionBase().setIntervals(new selection_intervals_info_1.SelectionIntervalsInfo(this._subDocument, [interval]));
        var modelManipulator = this._processor.modelManager.modelManipulator;
        this._processor.beginUpdate();
        this._processor.modelManager.history.beginTransaction();
        this._processor.modelManager.history.addAndRedo(new field_insert_history_item_1.FieldInsertHistoryItem(this._processor.modelManager.modelManipulator, this._subDocument, interval.start, 0, interval.length, false, inputPos.charPropsBundle));
        var fieldIndex = field_1.Field.normedBinaryIndexOf(this._subDocument.fields, interval.start + 1);
        var field = this._subDocument.fields[fieldIndex];
        this._processor.modelManager.history.addAndRedo(new change_field_hyperlink_info_history_item_1.ChangeFieldHyperlinkInfoHistoryItem(modelManipulator, this._subDocument, field.index, info));
        subDocument.insertText(field.getCodeInterval().start, field_1.HyperlinkInfo.getNewCodeText(info));
        if (canChangeHyperlinkDisplayText && hyperlinkInfo.text || field.getResultInterval().length == 0) {
            subDocument.deleteText(interval_1.convertToIntervalApi(field.getResultInterval()));
            subDocument.insertText(field.getResultInterval().start, !hyperlinkInfo.text || hyperlinkInfo.text == "" ? info.getUriPlusAnchor() : hyperlinkInfo.text);
        }
        this._processor.modelManager.history.addAndRedo(new apply_field_hyperlink_style_history_item_1.ApplyFieldHyperlinkStyleHistoryItem(this._processor.modelManager.modelManipulator, new sub_document_1.SubDocumentInterval(this._subDocument, field.getResultInterval())));
        this._processor.modelManager.history.endTransaction();
        this._processor.endUpdate();
        return this._getItem(this._subDocument.fields[field_1.Field.binaryIndexOf(this._subDocument.fields, interval.start + 1)]);
    };
    HyperlinkCollection.prototype.find = function (position) {
        var _this = this;
        var interval = parameter_checker_1.ApiParametersChecker.check(position, 1, false, [
            parameter_checker_1.ApiParametersChecker.numberDescriptor("position", function (n) { return new fixed_1.FixedInterval(n, 0); }),
            model_parameter_checker_1.ModelParametersChecker.intervalDescriptor("interval", function (interval) { return new fixed_1.FixedInterval(interval.start, interval.length); })
        ]);
        return list_1.ListUtils.reducedMap(field_collection_1.findFields(this._subDocument.fields, interval), function (f) {
            return f.isHyperlinkField() ? _this._getItem(f) : null;
        });
    };
    HyperlinkCollection.prototype._getItem = function (coreItem) {
        return new field_2.HyperlinkApi(this._processor, this._subDocument, coreItem);
    };
    HyperlinkCollection.prototype._getCoreItems = function () {
        return list_1.ListUtils.reducedMap(this._subDocument.fields, function (f) { return f.isHyperlinkField() ? f : null; });
    };
    return HyperlinkCollection;
}(collection_1.Collection));
exports.HyperlinkCollection = HyperlinkCollection;
