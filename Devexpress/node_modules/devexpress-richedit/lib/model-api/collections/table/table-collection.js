"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var parameter_checker_1 = require("../../../api-utils/api-utils/parameter-checker");
var layout_position_creator_1 = require("../../../core/layout-engine/layout-position-creator");
var document_layout_details_level_1 = require("../../../core/layout/document-layout-details-level");
var layout_position_1 = require("../../../core/layout/layout-position");
var layout_column_1 = require("../../../core/layout/main-structures/layout-column");
var table_1 = require("../../../core/model/tables/main-structures/table");
var table_utils_1 = require("../../../core/model/tables/table-utils");
var input_position_base_1 = require("../../../core/selection/input-position-base");
var selection_intervals_info_1 = require("../../../core/selection/selection-intervals-info");
var algorithms_1 = require("@devexpress/utils/lib/intervals/algorithms");
var fixed_1 = require("@devexpress/utils/lib/intervals/fixed");
var search_1 = require("@devexpress/utils/lib/utils/search");
var model_parameter_checker_1 = require("../../api-utils/model-parameter-checker");
var table_2 = require("../../table/table");
var collection_1 = require("../collection");
var TableCollection = (function (_super) {
    tslib_1.__extends(TableCollection, _super);
    function TableCollection(processor, subDocument) {
        var _this = _super.call(this, processor) || this;
        _this._subDocument = subDocument;
        return _this;
    }
    TableCollection.prototype.create = function (position, columnCount, rowCount) {
        position = parameter_checker_1.ApiParametersChecker.check(position, 1, false, [
            parameter_checker_1.ApiParametersChecker.numberDescriptor("position", function (n) { return n; }, 0, this._subDocument.getDocumentEndPosition())
        ]);
        columnCount = parameter_checker_1.ApiParametersChecker.check(columnCount, 2, false, [
            parameter_checker_1.ApiParametersChecker.numberDescriptor("columnCount", function (n) { return n; }, 1, 63)
        ]);
        rowCount = parameter_checker_1.ApiParametersChecker.check(rowCount, 3, false, [
            parameter_checker_1.ApiParametersChecker.numberDescriptor("rowCount", function (n) { return n; }, 1)
        ]);
        var lp = layout_position_1.LayoutPosition.ensure(this._processor.layoutFormatterManager, this._processor.selection, this._subDocument, position, document_layout_details_level_1.DocumentLayoutDetailsLevel.Row, new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false), new layout_position_creator_1.LayoutPositionCreatorConflictFlags().setDefault(false));
        var currentTable = table_1.Table.getTableByPosition(this._subDocument.tables, position, true);
        var availableWidth = currentTable ? lp.row.tableCellInfo.avaliableContentWidth :
            layout_column_1.LayoutColumn.findSectionColumnWithMinimumWidth(lp.pageArea.columns);
        var inputPos = new input_position_base_1.InputPositionBase().setIntervals(selection_intervals_info_1.SelectionIntervalsInfo.fromPosition(this._subDocument, position));
        this._processor.beginUpdate();
        var table = this._processor.modelManager.modelManipulator.table.insertTable(this._subDocument, rowCount, columnCount, position, availableWidth, inputPos, true);
        table_utils_1.TableConditionalFormattingCalculator.updateTable(this._processor.modelManager, table, this._subDocument);
        this._processor.endUpdate();
        return new table_2.TableApi(this._processor, this._subDocument, table);
    };
    TableCollection.prototype.find = function (position) {
        var interval = parameter_checker_1.ApiParametersChecker.check(position, 1, false, [
            parameter_checker_1.ApiParametersChecker.numberDescriptor("position", function (n) { return new fixed_1.FixedInterval(n, 0); }),
            model_parameter_checker_1.ModelParametersChecker.intervalDescriptor("interval", function (interval) { return new fixed_1.FixedInterval(interval.start, interval.length); })
        ]);
        var tables = this._subDocument.tables;
        if (tables.length == 0)
            return [];
        var tableIndex = tables[Math.max(0, search_1.SearchUtils.normedInterpolationIndexOf(tables, function (t) { return t.getStartPosition(); }, interval.start))]
            .getTopLevelParent().index;
        var resultTables = [];
        for (var table = void 0; table = tables[tableIndex]; tableIndex++) {
            var tableInterval = table.interval;
            var intersection = algorithms_1.IntervalAlgorithms.getIntersection(tableInterval, interval);
            if (intersection && (!!intersection.length || tableInterval.contains(intersection.start)))
                resultTables.push(new table_2.TableApi(this._processor, this._subDocument, table));
            else if (!table.nestedLevel && table.getStartPosition() >= interval.end)
                break;
        }
        return resultTables;
    };
    TableCollection.prototype._getItem = function (coreItem) {
        return new table_2.TableApi(this._processor, this._subDocument, coreItem);
    };
    TableCollection.prototype._getCoreItems = function () {
        return this._subDocument.tables;
    };
    return TableCollection;
}(collection_1.Collection));
exports.TableCollection = TableCollection;
