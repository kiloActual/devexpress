"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var parameter_checker_1 = require("../../api-utils/api-utils/parameter-checker");
var fixed_1 = require("@devexpress/utils/lib/intervals/fixed");
var list_1 = require("@devexpress/utils/lib/utils/list");
var model_parameter_checker_1 = require("../api-utils/model-parameter-checker");
var paragraph_1 = require("../paragraph");
var sub_document_1 = require("../sub-document");
var collection_1 = require("./collection");
var ParagraphCollection = (function (_super) {
    tslib_1.__extends(ParagraphCollection, _super);
    function ParagraphCollection(processor, subDocument) {
        var _this = _super.call(this, processor) || this;
        _this._subDocument = subDocument;
        return _this;
    }
    ParagraphCollection.prototype.create = function (position) {
        return new sub_document_1.SubDocumentApi(this._processor, this._subDocument).insertParagraph(position);
    };
    ParagraphCollection.prototype.find = function (position) {
        var _this = this;
        var interval = parameter_checker_1.ApiParametersChecker.check(position, 1, false, [
            parameter_checker_1.ApiParametersChecker.numberDescriptor("position", function (n) { return new fixed_1.FixedInterval(n, 0); }),
            model_parameter_checker_1.ModelParametersChecker.intervalDescriptor("interval", function (interval) { return new fixed_1.FixedInterval(interval.start, interval.length); })
        ]);
        var result = [];
        var paragraphs = this._subDocument.getParagraphsByInterval(interval);
        list_1.ListUtils.forEach(paragraphs, function (par) {
            result.push(_this._getItem(par));
        });
        return result;
    };
    ParagraphCollection.prototype._getItem = function (coreItem) {
        return new paragraph_1.ParagraphApi(this._processor, coreItem);
    };
    ParagraphCollection.prototype._getCoreItems = function () {
        return this._subDocument.paragraphs;
    };
    return ParagraphCollection;
}(collection_1.Collection));
exports.ParagraphCollection = ParagraphCollection;
