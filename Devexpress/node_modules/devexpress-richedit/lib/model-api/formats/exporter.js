"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var document_format_1 = require("../../core/document-format");
var options_1 = require("../../core/formats/options");
var docx_export_options_1 = require("../../docx/export/docx-export-options");
var exporter_1 = require("../../docx/export/exporter");
var exporter_2 = require("../../rtf/export/exporter");
var rtf_document_exporter_options_1 = require("../../rtf/export/rtf-document-exporter-options");
var txt_exporter_1 = require("../../txt/txt-exporter");
function exportModelToBase64(modelManipulator, format, callback) {
    getExporter(modelManipulator, format).exportToBase64(callback);
}
exports.exportModelToBase64 = exportModelToBase64;
function exportModelToBlob(modelManipulator, format, callback) {
    getExporter(modelManipulator, format).exportToBlob(callback);
}
exports.exportModelToBlob = exportModelToBlob;
function getExporter(modelManipulator, format) {
    switch (format) {
        case document_format_1.DocumentFormat.OpenXml: return new exporter_1.DocxExporter(modelManipulator, new docx_export_options_1.DocxExportOptions());
        case document_format_1.DocumentFormat.Rtf: return new exporter_2.RtfExporter(modelManipulator, new rtf_document_exporter_options_1.RtfDocumentExporterOptions());
        case document_format_1.DocumentFormat.PlainText: return new txt_exporter_1.TxtExporter(modelManipulator, new options_1.DocumentExporterOptions());
        default:
            console.log('Unsupported format');
            return null;
    }
}
