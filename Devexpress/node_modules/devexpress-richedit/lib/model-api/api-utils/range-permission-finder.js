"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var algorithms_1 = require("@devexpress/utils/lib/intervals/algorithms");
var list_1 = require("@devexpress/utils/lib/utils/list");
function findRangePermissionsByIntervals(sourceCollection, intervals) {
    var permissions = [];
    algorithms_1.IntervalAlgorithms.handleAffectedObjects(sourceCollection, algorithms_1.IntervalAlgorithms.getMergedIntervals(intervals, true), function (permission, _index, interval, intersection) {
        if (intersection.length || permission.length == 0 || intersection.start == permission.start ||
            (interval.length == 0 && interval.start < permission.end))
            permissions.push(permission);
    }, function (_pos, _collection) { return 0; });
    return permissions;
}
exports.findRangePermissionsByIntervals = findRangePermissionsByIntervals;
function findRangePermissions(sourceCollection, check) {
    var result = [];
    list_1.ListUtils.forEach(sourceCollection, function (permission) {
        if (check(permission))
            result.push(permission);
    });
    return result;
}
exports.findRangePermissions = findRangePermissions;
function findRangePermission(sourceCollection, coreInterval, userName, group) {
    var intervals = findRangePermissionsByIntervals(sourceCollection, [coreInterval]);
    return list_1.ListUtils.elementBy(intervals, function (permission) { return permission.userName == userName && permission.group == group; });
}
exports.findRangePermission = findRangePermission;
