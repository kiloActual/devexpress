"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var unit_converter_1 = require("@devexpress/utils/lib/class/unit-converter");
var UnitConverterApi = (function () {
    function UnitConverterApi() {
    }
    UnitConverterApi.prototype.pixelsToTwips = function (value) {
        return unit_converter_1.UnitConverter.pixelsToTwips(value);
    };
    UnitConverterApi.prototype.inchesToTwips = function (value) {
        return unit_converter_1.UnitConverter.inchesToTwips(value);
    };
    UnitConverterApi.prototype.pointsToTwips = function (value) {
        return unit_converter_1.UnitConverter.pointsToTwips(value);
    };
    UnitConverterApi.prototype.centimetersToTwips = function (value) {
        return unit_converter_1.UnitConverter.centimetersToTwips(value);
    };
    UnitConverterApi.prototype.twipsToCentimeters = function (value) {
        return unit_converter_1.UnitConverter.twipsToCentimeters(value);
    };
    UnitConverterApi.prototype.pixelsToCentimeters = function (value) {
        return unit_converter_1.UnitConverter.pixelToCentimeters(value);
    };
    UnitConverterApi.prototype.twipsToInches = function (value) {
        return unit_converter_1.UnitConverter.twipsToInches(value);
    };
    UnitConverterApi.prototype.pixelsToInches = function (value) {
        return unit_converter_1.UnitConverter.pixelsToInches(value);
    };
    UnitConverterApi.prototype.pixelsToPoints = function (value) {
        return unit_converter_1.UnitConverter.pixelsToPoints(value);
    };
    UnitConverterApi.prototype.twipsToPoints = function (value) {
        return unit_converter_1.UnitConverter.twipsToPointsF(value);
    };
    UnitConverterApi.prototype.twipsToPixels = function (value) {
        return unit_converter_1.UnitConverter.twipsToPixelsF(value);
    };
    return UnitConverterApi;
}());
exports.UnitConverterApi = UnitConverterApi;
