"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var file_name_helper_1 = require("../../core/formats/file-name-helper");
var creator_1 = require("../../core/model/creator/creator");
var options_1 = require("../../core/model/creator/options");
var base64_1 = require("@devexpress/utils/lib/utils/base64");
var file_1 = require("@devexpress/utils/lib/utils/file");
var document_1 = require("../../model-api/document");
var unit_converter_1 = require("../../model-api/unit-converter");
var pdf_1 = require("../../pdf/api/pdf");
var DocumentProcessorBaseApi = (function () {
    function DocumentProcessorBaseApi() {
        this.unitConverter = new unit_converter_1.UnitConverterApi();
    }
    Object.defineProperty(DocumentProcessorBaseApi.prototype, "onCalculateDocumentVariable", {
        set: function (val) {
            var _this = this;
            this._processor.onCalculateDocumentVariable = val ? function (e) { return val(_this, e); } : null;
        },
        enumerable: true,
        configurable: true
    });
    DocumentProcessorBaseApi.prototype.importDocument = function (source, documentFormat, callback) {
        this._processor.openDocument(source, documentFormat, callback);
        this.document = new document_1.RichEditDocumentApi(this._processor);
    };
    DocumentProcessorBaseApi.prototype.exportDocumentToBase64 = function (callback, documentFormat) {
        this._processor.exportDocumentToBase64(callback, documentFormat ? documentFormat : null);
    };
    DocumentProcessorBaseApi.prototype.exportDocumentToBlob = function (callback, documentFormat) {
        this._processor.exportDocumentToBlob(callback, documentFormat ? documentFormat : null);
    };
    DocumentProcessorBaseApi.prototype.downloadDocument = function (fileName, documentFormat) {
        var coreDocFormat = documentFormat;
        this._processor.exportDocumentToBlob(function (blob) {
            return file_1.FileUtils.startDownloadFileLocal(blob, fileName + file_name_helper_1.FileNameHelper.convertToString(coreDocFormat));
        }, coreDocFormat);
    };
    DocumentProcessorBaseApi.prototype.exportToPdf = function (callback, options) {
        pdf_1.pdfExport(this._processor, function (blob, stream) {
            base64_1.Base64Utils.fromBlobAsArrayBuffer(blob, function (base64) { return callback(base64, blob, stream); });
        }, options);
    };
    DocumentProcessorBaseApi.prototype.downloadPdf = function (fileName, options) {
        pdf_1.downloadPdf(this._processor, fileName, options);
    };
    DocumentProcessorBaseApi.prototype.dispose = function () {
        this._processor.dispose();
    };
    DocumentProcessorBaseApi.prototype._importInnerDocument = function (model) {
        this._processor.openInnerDocument(model);
        this.document = new document_1.RichEditDocumentApi(this._processor);
    };
    DocumentProcessorBaseApi.prototype._initByEmptyModel = function () {
        var model = new creator_1.ModelCreator(new options_1.ModelCreatorOptions()).createModel(this._processor.modelManager.richOptions).fillModel();
        this._processor.openInnerDocument(model);
        this.document = new document_1.RichEditDocumentApi(this._processor);
    };
    return DocumentProcessorBaseApi;
}());
exports.DocumentProcessorBaseApi = DocumentProcessorBaseApi;
