"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var measure_info_1 = require("../../../core/measurer/measure-info");
var character_properties_merger_1 = require("../../../core/model/properties-merger/character-properties-merger");
var rich_utils_1 = require("../../../core/model/rich-utils");
var run_type_1 = require("../../../core/model/runs/run-type");
var unit_converter_1 = require("@devexpress/utils/lib/class/unit-converter");
var string_1 = require("@devexpress/utils/lib/utils/string");
var RunInfo = (function () {
    function RunInfo(runType, runLength, charPropsBundle) {
        this.runType = runType;
        this.runLength = runLength;
        this.charPropsBundle = charPropsBundle;
    }
    return RunInfo;
}());
exports.RunInfo = RunInfo;
var ImportedTextRunInfo = (function (_super) {
    tslib_1.__extends(ImportedTextRunInfo, _super);
    function ImportedTextRunInfo(model, measurer, text, charPropsBundle) {
        var _this = _super.call(this, run_type_1.RunType.TextRun, text.length, charPropsBundle) || this;
        _this.text = _this.replaceTabs(text, model, measurer, charPropsBundle.props);
        _this.runLength = _this.text.length;
        return _this;
    }
    ImportedTextRunInfo.prototype.replaceTabs = function (text, model, measurer, maskedCharacterProperties) {
        var _this = this;
        return text.replace(ImportedTextRunInfo.tabRegex, function (str, _offset) {
            var len = str.length;
            return len < 3 ?
                string_1.StringUtils.repeat(rich_utils_1.RichUtils.specialCharacters.Space, len) :
                string_1.StringUtils.repeat(rich_utils_1.RichUtils.specialCharacters.TabMark, _this.numTabs(len, _this.mergeCharProps(maskedCharacterProperties, model), measurer, model.defaultTabWidth));
        });
    };
    ImportedTextRunInfo.prototype.mergeCharProps = function (masked, model) {
        var merger = new character_properties_merger_1.CharacterPropertiesMerger();
        merger.mergeCharacterProperties(masked);
        merger.mergeCharacterProperties(model.defaultCharacterProperties);
        return merger.getMergedProperties();
    };
    ImportedTextRunInfo.prototype.numTabs = function (numSpaces, charProps, measurer, defaultTabInfo) {
        var spaces = string_1.StringUtils.repeat("&nbsp;", numSpaces);
        var info = new measure_info_1.MeasureInfoNonText(spaces, charProps);
        measurer.measure([info]);
        return Math.max(1, Math.round(info.resultSize.width / unit_converter_1.UnitConverter.twipsToPixelsF(defaultTabInfo)));
    };
    ImportedTextRunInfo.tabRegex = new RegExp(rich_utils_1.RichUtils.specialCharacters.NonBreakingSpace + "{1,}", "gi");
    return ImportedTextRunInfo;
}(RunInfo));
exports.ImportedTextRunInfo = ImportedTextRunInfo;
var ImportedParagraphListInfo = (function () {
    function ImportedParagraphListInfo(listIndex, listLevel, listFormat, listType, displayFormatString, maskedCharacterProperties) {
        this.listIndex = listIndex;
        this.listLevel = listLevel;
        this.listFormat = listFormat;
        this.listType = listType;
        this.displayFormatString = displayFormatString;
        this.maskedCharacterProperties = maskedCharacterProperties;
    }
    return ImportedParagraphListInfo;
}());
exports.ImportedParagraphListInfo = ImportedParagraphListInfo;
var ImportedParagraphRunInfo = (function (_super) {
    tslib_1.__extends(ImportedParagraphRunInfo, _super);
    function ImportedParagraphRunInfo(listInfo, charPropsBundle, maskedParagraphProperties) {
        var _this = _super.call(this, run_type_1.RunType.ParagraphRun, rich_utils_1.RichUtils.specialCharacters.ParagraphMark.length, charPropsBundle) || this;
        _this.listInfo = listInfo;
        _this.maskedParagraphProperties = maskedParagraphProperties;
        return _this;
    }
    return ImportedParagraphRunInfo;
}(RunInfo));
exports.ImportedParagraphRunInfo = ImportedParagraphRunInfo;
var ImportedInlinePictureRunInfo = (function (_super) {
    tslib_1.__extends(ImportedInlinePictureRunInfo, _super);
    function ImportedInlinePictureRunInfo(charPropsBundle, picInfo, actualSize) {
        var _this = _super.call(this, run_type_1.RunType.InlinePictureRun, 1, charPropsBundle) || this;
        _this.picInfo = picInfo;
        _this.actualSize = actualSize;
        return _this;
    }
    return ImportedInlinePictureRunInfo;
}(RunInfo));
exports.ImportedInlinePictureRunInfo = ImportedInlinePictureRunInfo;
var ImportedFieldCodeStartRunInfo = (function (_super) {
    tslib_1.__extends(ImportedFieldCodeStartRunInfo, _super);
    function ImportedFieldCodeStartRunInfo(charPropsBundle, hyperlinkInfo, id) {
        var _this = _super.call(this, run_type_1.RunType.FieldCodeStartRun, rich_utils_1.RichUtils.specialCharacters.FieldCodeStartRun.length, charPropsBundle) || this;
        _this.hyperlinkInfo = hyperlinkInfo;
        _this.id = id;
        return _this;
    }
    return ImportedFieldCodeStartRunInfo;
}(RunInfo));
exports.ImportedFieldCodeStartRunInfo = ImportedFieldCodeStartRunInfo;
var ImportedFieldCodeEndRunInfo = (function (_super) {
    tslib_1.__extends(ImportedFieldCodeEndRunInfo, _super);
    function ImportedFieldCodeEndRunInfo(charPropsBundle, id) {
        var _this = _super.call(this, run_type_1.RunType.FieldCodeEndRun, rich_utils_1.RichUtils.specialCharacters.FieldCodeEndRun.length, charPropsBundle) || this;
        _this.id = id;
        return _this;
    }
    return ImportedFieldCodeEndRunInfo;
}(RunInfo));
exports.ImportedFieldCodeEndRunInfo = ImportedFieldCodeEndRunInfo;
var ImportedFieldResultEndRunInfo = (function (_super) {
    tslib_1.__extends(ImportedFieldResultEndRunInfo, _super);
    function ImportedFieldResultEndRunInfo(charPropsBundle, id) {
        var _this = _super.call(this, run_type_1.RunType.FieldResultEndRun, rich_utils_1.RichUtils.specialCharacters.FieldResultEndRun.length, charPropsBundle) || this;
        _this.id = id;
        return _this;
    }
    return ImportedFieldResultEndRunInfo;
}(RunInfo));
exports.ImportedFieldResultEndRunInfo = ImportedFieldResultEndRunInfo;
