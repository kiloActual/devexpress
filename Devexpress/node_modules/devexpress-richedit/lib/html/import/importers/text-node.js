"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var fixed_1 = require("@devexpress/utils/lib/intervals/fixed");
var dom_1 = require("@devexpress/utils/lib/utils/dom");
var list_1 = require("@devexpress/utils/lib/utils/list");
var runs_1 = require("../containers/runs");
var base_1 = require("./base");
var HtmlTextNodeImporter = (function (_super) {
    tslib_1.__extends(HtmlTextNodeImporter, _super);
    function HtmlTextNodeImporter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HtmlTextNodeImporter.prototype.elementTag = function () {
        return "TextNode";
    };
    HtmlTextNodeImporter.prototype.importBefore = function () {
        var text = this.element.nodeValue || dom_1.DomUtils.getInnerText(this.element);
        if (text && text.length) {
            if (/^ +$/.test(text) && this.element.parentNode && this.element.parentNode.tagName == "TD") {
                var parentLevel = this.importer.levelInfo[this.importer.levelInfo.length - 2];
                if (parentLevel.childElements[0] == this.element || list_1.ListUtils.last(parentLevel.childElements) == this.element) {
                    return;
                }
            }
            this.addRun(new runs_1.ImportedTextRunInfo(this.importer.modelManager.model, this.importer.measurer, text, this.importer.htmlImporterMaskedCharacterProperties.getBundleFrom(this.element, new fixed_1.FixedInterval(this.importer.currPosition, text.length))));
        }
    };
    HtmlTextNodeImporter.prototype.isImportChilds = function () {
        return false;
    };
    HtmlTextNodeImporter.prototype.importAfter = function () {
    };
    return HtmlTextNodeImporter;
}(base_1.HtmlTagImporterBase));
exports.HtmlTextNodeImporter = HtmlTextNodeImporter;
