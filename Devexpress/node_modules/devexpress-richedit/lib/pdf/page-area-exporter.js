"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var color_1 = require("../core/model/color/color");
var unit_converter_1 = require("@devexpress/utils/lib/class/unit-converter");
var point_1 = require("@devexpress/utils/lib/geometry/point");
var row_exporter_1 = require("./row-exporter");
var table_column_info_exporter_1 = require("./table-column-info-exporter");
var PdfLayoutPageAreaExporter = (function () {
    function PdfLayoutPageAreaExporter(doc, textFontMapCache, measurer) {
        this.doc = doc;
        this.rowExporter = new row_exporter_1.PdfLayoutRowExporter(doc, textFontMapCache, measurer);
        this.tableColumnInfoExporter = new table_column_info_exporter_1.PdfLayoutTableColumnInfoExporter(doc);
    }
    PdfLayoutPageAreaExporter.prototype.export = function (pageArea, pageBottom, shouldApplyCliping) {
        var _this = this;
        this.doc.save();
        var pageAreaBounds = pageArea.clone().applyConverter(unit_converter_1.UnitConverter.pixelsToPointsF);
        if (shouldApplyCliping)
            this.doc.rect(pageAreaBounds.x, pageAreaBounds.y, pageAreaBounds.width, pageAreaBounds.height).clip();
        pageArea.columns.forEach(function (column) {
            return _this.exportColumn(column, new point_1.Point(pageArea.x, pageArea.y), pageBottom);
        });
        if (shouldApplyCliping)
            this.doc.restore();
    };
    PdfLayoutPageAreaExporter.prototype.exportColumn = function (column, pageAreaOffset, pageBottom) {
        var _this = this;
        var columnOffset = point_1.Point.plus(pageAreaOffset, column);
        column.tablesInfo.forEach(function (tableColumnInfo) { return _this.tableColumnInfoExporter.export(tableColumnInfo, columnOffset); });
        this.exportParagraphFrames(columnOffset, column.paragraphFrames);
        for (var _i = 0, _a = column.rows; _i < _a.length; _i++) {
            var row = _a[_i];
            if (this.shouldExportRow(row, columnOffset, pageBottom))
                this.rowExporter.export(row, columnOffset);
        }
    };
    PdfLayoutPageAreaExporter.prototype.shouldExportRow = function (row, columnOffset, pageBottom) {
        return row.height > 0 && row.y + row.height + columnOffset.y < pageBottom;
    };
    PdfLayoutPageAreaExporter.prototype.exportParagraphFrames = function (columnOffset, paragraphFrames) {
        for (var _i = 0, paragraphFrames_1 = paragraphFrames; _i < paragraphFrames_1.length; _i++) {
            var frame = paragraphFrames_1[_i];
            if (frame.paragraphColor != color_1.ColorHelper.AUTOMATIC_COLOR) {
                var framePos = point_1.Point.plus(columnOffset, frame).applyConverter(unit_converter_1.UnitConverter.pixelsToPointsF);
                this.doc.rect(framePos.x, framePos.y, unit_converter_1.UnitConverter.pixelsToPointsF(frame.width), unit_converter_1.UnitConverter.pixelsToPointsF(frame.height))
                    .fill(color_1.ColorHelper.getCssStringInternal(frame.paragraphColor));
                this.doc.fillColor(color_1.ColorHelper.getCssStringInternal(color_1.ColorHelper.AUTOMATIC_COLOR));
            }
        }
    };
    return PdfLayoutPageAreaExporter;
}());
exports.PdfLayoutPageAreaExporter = PdfLayoutPageAreaExporter;
