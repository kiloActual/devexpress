"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var table_base_structures_1 = require("../../../../core/model/tables/secondary-structures/table-base-structures");
var errors_1 = require("@devexpress/utils/lib/errors");
var rtf_export_sr_1 = require("../../../translation-table/rtf-export-sr");
var rtf_shading_info_export_helper_1 = require("../../helpers/rtf-shading-info-export-helper");
var rtf_properties_exporter_1 = require("../rtf-properties-exporter");
var RtfTableCellPropertiesExporter = (function (_super) {
    tslib_1.__extends(RtfTableCellPropertiesExporter, _super);
    function RtfTableCellPropertiesExporter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(RtfTableCellPropertiesExporter.prototype, "tableCellBackgroundColor", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableCellBackgroundColor; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableCellPropertiesExporter.prototype, "tableCellForegroundColor", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableCellForegroundColor; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableCellPropertiesExporter.prototype, "tableCellShading", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableCellShading; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableCellPropertiesExporter.prototype, "tableCellShadingPatternTable", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableCellShadingPatternTable; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableCellPropertiesExporter.prototype, "tableCellNoWrap", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableCellNoWrap; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableCellPropertiesExporter.prototype, "tableCellTextTopAlignment", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableCellTextTopAlignment; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableCellPropertiesExporter.prototype, "tableCellTextCenterAlignment", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableCellTextCenterAlignment; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableCellPropertiesExporter.prototype, "tableCellTextBottomAlignment", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableCellTextBottomAlignment; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableCellPropertiesExporter.prototype, "cellTopBorder", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableCellTopBorder; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableCellPropertiesExporter.prototype, "cellLeftBorder", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableCellLeftBorder; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableCellPropertiesExporter.prototype, "cellBottomBorder", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableCellBottomBorder; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableCellPropertiesExporter.prototype, "cellRightBorder", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableCellRightBorder; },
        enumerable: true,
        configurable: true
    });
    RtfTableCellPropertiesExporter.prototype.writeCellShading = function (shadingInfo) {
        var shadingPatternKeyword = rtf_export_sr_1.RtfExportSR.RunShadingPatternTable[shadingInfo.shadingPattern];
        if (shadingPatternKeyword)
            this.rtfBuilder.writeCommand(shadingPatternKeyword);
        rtf_shading_info_export_helper_1.RtfShadingInfoExportHelper.exportShadingForeColorIndex(this.rtfBuilder, this.rtfExportHelper, this.documentModel.colorProvider, shadingInfo, this.tableCellForegroundColor);
        rtf_shading_info_export_helper_1.RtfShadingInfoExportHelper.exportShadingBackColorIndex(this.rtfBuilder, this.rtfExportHelper, this.documentModel.colorProvider, shadingInfo, this.tableCellBackgroundColor);
        rtf_shading_info_export_helper_1.RtfShadingInfoExportHelper.exportShadingPattern(this.rtfBuilder, this.documentModel.colorProvider, shadingInfo, this.tableCellShading);
    };
    RtfTableCellPropertiesExporter.prototype.writeCellFitText = function (fitText) {
        var defaultGeneralSettings = this.documentModel.defaultTableCellProperties;
        if (fitText != defaultGeneralSettings.fitText)
            this.writeBoolCommand(rtf_export_sr_1.RtfExportSR.TableCellFitText, fitText);
    };
    RtfTableCellPropertiesExporter.prototype.writeCellNoWrap = function (noWrap) {
        var defaultGeneralSettings = this.documentModel.defaultTableCellProperties;
        if (noWrap != defaultGeneralSettings.noWrap)
            this.writeBoolCommand(this.tableCellNoWrap, noWrap);
    };
    RtfTableCellPropertiesExporter.prototype.writeCellHideCellMark = function (hideCellMark) {
        var defaultGeneralSettings = this.documentModel.defaultTableCellProperties;
        if (hideCellMark != defaultGeneralSettings.hideCellMark)
            this.writeBoolCommand(rtf_export_sr_1.RtfExportSR.TableCellHideMark, hideCellMark);
    };
    RtfTableCellPropertiesExporter.prototype.writeCellVerticalMerging = function (value, defaultValue) {
        if (value == defaultValue)
            return;
        if (value == table_base_structures_1.TableCellMergingState.Restart)
            this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.TableCellStartVerticalMerging);
        else if (value == table_base_structures_1.TableCellMergingState.Continue)
            this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.TableCellContinueVerticalMerging);
    };
    RtfTableCellPropertiesExporter.prototype.writeCellVerticalAlignment = function (verticalAlignment) {
        switch (verticalAlignment) {
            case table_base_structures_1.TableCellVerticalAlignment.Top:
                this.rtfBuilder.writeCommand(this.tableCellTextTopAlignment);
                break;
            case table_base_structures_1.TableCellVerticalAlignment.Center:
                this.rtfBuilder.writeCommand(this.tableCellTextCenterAlignment);
                break;
            case table_base_structures_1.TableCellVerticalAlignment.Bottom:
                this.rtfBuilder.writeCommand(this.tableCellTextBottomAlignment);
                break;
            default:
                throw new Error(errors_1.Errors.InternalException);
                break;
        }
    };
    RtfTableCellPropertiesExporter.prototype.writeCellTextDirection = function (value) {
        switch (value) {
            case table_base_structures_1.TextDirection.LeftToRightTopToBottom:
                this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.TableCellLeftToRightTopToBottomTextDirection);
                break;
            case table_base_structures_1.TextDirection.TopToBottomRightToLeft:
                this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.TableCellTopToBottomRightToLeftTextDirection);
                break;
            case table_base_structures_1.TextDirection.BottomToTopLeftToRight:
                this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.TableCellBottomToTopLeftToRightTextDirection);
                break;
            case table_base_structures_1.TextDirection.LeftToRightTopToBottomRotated:
                this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.TableCellLeftToRightTopToBottomVerticalTextDirection);
                break;
            case table_base_structures_1.TextDirection.TopToBottomRightToLeftRotated:
                this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.TableCellTopToBottomRightToLeftVerticalTextDirection);
                break;
            default:
                break;
        }
    };
    RtfTableCellPropertiesExporter.prototype.writeCellBasicBorders = function (topBorder, leftBorder, rightBorder, bottomBorder) {
        this.rtfBuilder.writeCommand(this.cellTopBorder);
        this.writeBorderProperties(topBorder);
        this.rtfBuilder.writeCommand(this.cellLeftBorder);
        this.writeBorderProperties(leftBorder);
        this.rtfBuilder.writeCommand(this.cellBottomBorder);
        this.writeBorderProperties(bottomBorder);
        this.rtfBuilder.writeCommand(this.cellRightBorder);
        this.writeBorderProperties(rightBorder);
    };
    RtfTableCellPropertiesExporter.prototype.writeCellPreferredWidth = function (preferredWidth) {
        this.writeWidthUnit(preferredWidth, rtf_export_sr_1.RtfExportSR.TableCellPreferredWidthType, rtf_export_sr_1.RtfExportSR.TableCellPreferredWidth);
    };
    RtfTableCellPropertiesExporter.prototype.writeCellMargings = function (cellMargins) {
        var topMargin = cellMargins.top;
        var leftMargin = cellMargins.left;
        var rightMargin = cellMargins.right;
        var bottomMargin = cellMargins.bottom;
        if (this.shouldExportCellMargin(bottomMargin))
            this.writeWidthUnitInTwips(bottomMargin, rtf_export_sr_1.RtfExportSR.TableCellBottomMarginType, rtf_export_sr_1.RtfExportSR.TableCellBottomMargin);
        if (this.shouldExportCellMargin(topMargin))
            this.writeWidthUnitInTwips(topMargin, rtf_export_sr_1.RtfExportSR.TableCellLeftMarginType, rtf_export_sr_1.RtfExportSR.TableCellLeftMargin);
        if (this.shouldExportCellMargin(rightMargin))
            this.writeWidthUnitInTwips(rightMargin, rtf_export_sr_1.RtfExportSR.TableCellRightMarginType, rtf_export_sr_1.RtfExportSR.TableCellRightMargin);
        if (this.shouldExportCellMargin(leftMargin))
            this.writeWidthUnitInTwips(leftMargin, rtf_export_sr_1.RtfExportSR.TableCellTopMarginType, rtf_export_sr_1.RtfExportSR.TableCellTopMargin);
    };
    RtfTableCellPropertiesExporter.prototype.writeCellRight = function (cellRight) {
        this.rtfBuilder.writeIntegerCommand(rtf_export_sr_1.RtfExportSR.TableCellRight, cellRight);
    };
    return RtfTableCellPropertiesExporter;
}(rtf_properties_exporter_1.RtfPropertiesExporter));
exports.RtfTableCellPropertiesExporter = RtfTableCellPropertiesExporter;
var RtfTableStyleTableCellPropertiesExporter = (function (_super) {
    tslib_1.__extends(RtfTableStyleTableCellPropertiesExporter, _super);
    function RtfTableStyleTableCellPropertiesExporter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(RtfTableStyleTableCellPropertiesExporter.prototype, "tableCellBackgroundColor", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableStyleCellBackgroundColor; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableStyleTableCellPropertiesExporter.prototype, "tableCellForegroundColor", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableStyleCellForegroundColor; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableStyleTableCellPropertiesExporter.prototype, "tableCellShading", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableStyleCellShading; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableStyleTableCellPropertiesExporter.prototype, "tableCellShadingPatternTable", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableStyleShadingPatternTable; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableStyleTableCellPropertiesExporter.prototype, "tableCellNoWrap", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableStyleCellNoWrap; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableStyleTableCellPropertiesExporter.prototype, "tableCellTextTopAlignment", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableStyleCellVerticalAlignmentTop; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableStyleTableCellPropertiesExporter.prototype, "tableCellTextCenterAlignment", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableStyleCellVerticalAlignmentCenter; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableStyleTableCellPropertiesExporter.prototype, "tableCellTextBottomAlignment", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableStyleCellVerticalAlignmentBottom; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableStyleTableCellPropertiesExporter.prototype, "tableCellUpperLeftToLowerRightBorder", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableStyleUpperLeftToLowerRightBorder; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableStyleTableCellPropertiesExporter.prototype, "tableCellUpperRightToLowerLeftBorder", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableStyleUpperRightToLowerLeftBorder; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableStyleTableCellPropertiesExporter.prototype, "cellTopBorder", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableStyleTopCellBorder; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableStyleTableCellPropertiesExporter.prototype, "cellLeftBorder", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableStyleLeftCellBorder; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableStyleTableCellPropertiesExporter.prototype, "cellBottomBorder", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableStyleBottomCellBorder; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableStyleTableCellPropertiesExporter.prototype, "cellRightBorder", {
        get: function () { return rtf_export_sr_1.RtfExportSR.TableStyleRightCellBorder; },
        enumerable: true,
        configurable: true
    });
    RtfTableStyleTableCellPropertiesExporter.prototype.writeCellBasicBorders = function (topBorder, leftBorder, rightBorder, bottomBorder) {
        var defaultBorder = this.documentModel.defaultTableCellProperties.borders.topBorder;
        if (!defaultBorder.equals(topBorder)) {
            this.rtfBuilder.writeCommand(this.cellTopBorder);
            this.writeBorderProperties(topBorder);
        }
        if (!defaultBorder.equals(leftBorder)) {
            this.rtfBuilder.writeCommand(this.cellLeftBorder);
            this.writeBorderProperties(leftBorder);
        }
        if (!defaultBorder.equals(bottomBorder)) {
            this.rtfBuilder.writeCommand(this.cellBottomBorder);
            this.writeBorderProperties(bottomBorder);
        }
        if (!defaultBorder.equals(rightBorder)) {
            this.rtfBuilder.writeCommand(this.cellRightBorder);
            this.writeBorderProperties(rightBorder);
        }
    };
    return RtfTableStyleTableCellPropertiesExporter;
}(RtfTableCellPropertiesExporter));
exports.RtfTableStyleTableCellPropertiesExporter = RtfTableStyleTableCellPropertiesExporter;
