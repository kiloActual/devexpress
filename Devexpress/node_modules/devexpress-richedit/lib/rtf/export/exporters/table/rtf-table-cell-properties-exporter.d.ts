import { BorderInfo } from '../../../../core/model/borders/border-info';
import { ShadingInfo } from '../../../../core/model/shadings/shading-info';
import { TableCellMargins, TableCellMergingState, TableCellVerticalAlignment, TextDirection } from '../../../../core/model/tables/secondary-structures/table-base-structures';
import { TableWidthUnit } from '../../../../core/model/tables/secondary-structures/table-units';
import { RtfPropertiesExporter } from '../rtf-properties-exporter';
export declare class RtfTableCellPropertiesExporter extends RtfPropertiesExporter {
    writeCellShading(shadingInfo: ShadingInfo): void;
    writeCellFitText(fitText: boolean): void;
    writeCellNoWrap(noWrap: boolean): void;
    writeCellHideCellMark(hideCellMark: boolean): void;
    writeCellVerticalMerging(value: TableCellMergingState, defaultValue: TableCellMergingState): void;
    writeCellVerticalAlignment(verticalAlignment: TableCellVerticalAlignment): void;
    writeCellTextDirection(value: TextDirection): void;
    writeCellBasicBorders(topBorder: BorderInfo, leftBorder: BorderInfo, rightBorder: BorderInfo, bottomBorder: BorderInfo): void;
    writeCellPreferredWidth(preferredWidth: TableWidthUnit): void;
    writeCellMargings(cellMargins: TableCellMargins): void;
    writeCellRight(cellRight: number): void;
    protected readonly tableCellBackgroundColor: string;
    protected readonly tableCellForegroundColor: string;
    protected readonly tableCellShading: string;
    protected readonly tableCellShadingPatternTable: Record<number, string>;
    protected readonly tableCellNoWrap: string;
    protected readonly tableCellTextTopAlignment: string;
    protected readonly tableCellTextCenterAlignment: string;
    protected readonly tableCellTextBottomAlignment: string;
    protected readonly cellTopBorder: string;
    protected readonly cellLeftBorder: string;
    protected readonly cellBottomBorder: string;
    protected readonly cellRightBorder: string;
}
export declare class RtfTableStyleTableCellPropertiesExporter extends RtfTableCellPropertiesExporter {
    writeCellBasicBorders(topBorder: BorderInfo, leftBorder: BorderInfo, rightBorder: BorderInfo, bottomBorder: BorderInfo): void;
    protected readonly tableCellBackgroundColor: string;
    protected readonly tableCellForegroundColor: string;
    protected readonly tableCellShading: string;
    protected readonly tableCellShadingPatternTable: Record<number, string>;
    protected readonly tableCellNoWrap: string;
    protected readonly tableCellTextTopAlignment: string;
    protected readonly tableCellTextCenterAlignment: string;
    protected readonly tableCellTextBottomAlignment: string;
    protected readonly tableCellUpperLeftToLowerRightBorder: string;
    protected readonly tableCellUpperRightToLowerLeftBorder: string;
    protected readonly cellTopBorder: string;
    protected readonly cellLeftBorder: string;
    protected readonly cellBottomBorder: string;
    protected readonly cellRightBorder: string;
}
//# sourceMappingURL=rtf-table-cell-properties-exporter.d.ts.map
