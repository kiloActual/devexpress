import { BorderInfo } from '../../../../../core/model/borders/border-info';
import { DocumentModel } from '../../../../../core/model/document-model';
import { SubDocument } from '../../../../../core/model/sub-document';
import { Table } from '../../../../../core/model/tables/main-structures/table';
import { TableCell } from '../../../../../core/model/tables/main-structures/table-cell';
import { TableRow } from '../../../../../core/model/tables/main-structures/table-row';
import { ConditionalTableStyleFormatting } from '../../../../../core/model/tables/secondary-structures/table-base-structures';
import { TableWidthUnit } from '../../../../../core/model/tables/secondary-structures/table-units';
import { RtfBuilder } from '../../../rtf-builder';
import { RtfContentExporter } from '../../rtf-content-exporter';
import { RtfTableCellPropertiesExporter } from '../rtf-table-cell-properties-exporter';
import { RtfTablePropertiesExporter } from '../rtf-table-properties-exporter';
import { RtfTableRowPropertiesExporter } from '../rtf-table-row-properties-exporter';
export declare abstract class RtfTableExporterStateBase {
    private readonly rtfExporter;
    _nestingLevel: any;
    tableStyleIndex: number;
    rowLeftOffset: number;
    readonly table: Table;
    readonly tableRowPropertiesExporter: RtfTableRowPropertiesExporter;
    readonly tableCellPropertiesExporter: RtfTableCellPropertiesExporter;
    readonly tablePropertiesExporter: RtfTablePropertiesExporter;
    protected constructor(rtfExporter: RtfContentExporter, table: Table, nestingLevel: number);
    protected exportBase(): void;
    private getTableStyleIndex;
    protected exportRowCells(row: TableRow, rowIndex: number): void;
    protected exportInTableParagraph(parIndex: number, tableNestingLevel: number, isEndParagraph: boolean, condTypes: ConditionalTableStyleFormatting): void;
    protected finishParagraph(isEndParagraph: boolean): void;
    exportCellParagraphs(cell: TableCell, parentRowIndex: number): void;
    exportNestedTable(parentCell: TableCell, parIndex: number): number;
    abstract export(): void;
    protected abstract exportRow(row: TableRow, rowIndex: number): void;
    protected abstract writeParagraphEndMark(): void;
    exportRowProperties(row: TableRow, rowIndex: number): void;
    getCellWidth(virtualColumnIndex: number): number;
    calculateRowLeft(row: TableRow, indent: TableWidthUnit): number;
    protected calculateRowLeftOffset(row: TableRow): number;
    getActualWidth(unit: TableWidthUnit): number;
    private exportOwnRowProperties;
    startNewRow(rowIndex: number): void;
    writeTableStyleIndex(): void;
    calcHalfSpaceBetweenCells(): number;
    exportCellProperties(cell: TableCell, cellRight: number): void;
    getActualLeftBorderInfo(cell: TableCell): BorderInfo;
    getActualRightBorderInfo(cell: TableCell): BorderInfo;
    getActualTopBorderInfo(cell: TableCell): BorderInfo;
    getActualBottomBorderInfo(cell: TableCell): BorderInfo;
    getActualBorderInfoCore(cellBorderInfo: BorderInfo): BorderInfo;
    protected readonly rtfBuilder: RtfBuilder;
    protected readonly documentModel: DocumentModel;
    protected readonly subDocument: SubDocument;
    readonly nestingLevel: number;
}
//# sourceMappingURL=rtf-table-exporter-state-base.d.ts.map
