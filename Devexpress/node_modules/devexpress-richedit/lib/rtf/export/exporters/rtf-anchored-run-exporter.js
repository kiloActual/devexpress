"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var color_1 = require("../../../core/model/color/color");
var dx_color_1 = require("../../../core/model/color/dx-color");
var enums_1 = require("../../../core/model/floating-objects/enums");
var unit_converter_1 = require("@devexpress/utils/lib/class/unit-converter");
var common_1 = require("@devexpress/utils/lib/utils/common");
var rtf_drawing_keywords_1 = require("../../translation-table/rtf-drawing-keywords");
var rtf_export_sr_1 = require("../../translation-table/rtf-export-sr");
var shape_utils_1 = require("../../utils/shape-utils");
var RtfAnchoredRunExporter = (function () {
    function RtfAnchoredRunExporter(rtfBuilder, anchorInfo, shape, size) {
        this.rtfBuilder = rtfBuilder;
        this.anchorInfo = anchorInfo;
        this.shape = shape;
        this.size = size;
    }
    RtfAnchoredRunExporter.prototype.getShapeHorizontalPositionType = function (horizontalPositionType) {
        switch (horizontalPositionType) {
            case enums_1.AnchorObjectHorizontalPositionType.Page:
                return rtf_export_sr_1.RtfExportSR.ShapeLegacyHorizontalPositionTypePage;
            case enums_1.AnchorObjectHorizontalPositionType.Margin:
                return rtf_export_sr_1.RtfExportSR.ShapeLegacyHorizontalPositionTypeMargin;
            case enums_1.AnchorObjectHorizontalPositionType.Column:
                return rtf_export_sr_1.RtfExportSR.ShapeLegacyHorizontalPositionTypeColumn;
            default:
                return rtf_export_sr_1.RtfExportSR.ShapeLegacyHorizontalPositionTypeMargin;
        }
    };
    RtfAnchoredRunExporter.prototype.getShapeVerticalPositionType = function (verticalPositionType) {
        switch (verticalPositionType) {
            case enums_1.AnchorObjectVerticalPositionType.Page:
                return rtf_export_sr_1.RtfExportSR.ShapeLegacyVerticalPositionTypePage;
            case enums_1.AnchorObjectVerticalPositionType.Margin:
                return rtf_export_sr_1.RtfExportSR.ShapeLegacyVerticalPositionTypeMargin;
            case enums_1.AnchorObjectVerticalPositionType.Paragraph:
                return rtf_export_sr_1.RtfExportSR.ShapeLegacyVerticalPositionTypeParagraph;
            default:
                return rtf_export_sr_1.RtfExportSR.ShapeLegacyVerticalPositionTypeParagraph;
        }
    };
    RtfAnchoredRunExporter.prototype.exportFloatingObjectHorizontalPositionType = function (horizontalPositionType) {
        this.rtfBuilder.writeCommand(this.getShapeHorizontalPositionType(horizontalPositionType));
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.ShapeIgnoreLegacyHorizontalPositionType);
    };
    RtfAnchoredRunExporter.prototype.exportFloatingObjectVerticalPositionType = function (verticalPositionType) {
        this.rtfBuilder.writeCommand(this.getShapeVerticalPositionType(verticalPositionType));
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.ShapeIgnoreLegacyVerticalPositionType);
    };
    RtfAnchoredRunExporter.prototype.exportShapeInstanceProperties = function () {
        var offsetX = this.anchorInfo.offset.x;
        var offsetY = this.anchorInfo.offset.y;
        var rtfRoation = unit_converter_1.UnitConverter.twipsToFD(this.size.rotation);
        var width = this.getWidth();
        var height = this.getHeight();
        if (shape_utils_1.ShapeUtils.shouldSwapSize(rtfRoation)) {
            var temp = width;
            width = height;
            height = temp;
            offsetX += width;
            offsetY -= width;
        }
        this.rtfBuilder.writeIntegerCommand(rtf_export_sr_1.RtfExportSR.ShapeLeft, offsetX);
        this.rtfBuilder.writeIntegerCommand(rtf_export_sr_1.RtfExportSR.ShapeTop, offsetY);
        this.rtfBuilder.writeIntegerCommand(rtf_export_sr_1.RtfExportSR.ShapeRight, offsetX + width);
        this.rtfBuilder.writeIntegerCommand(rtf_export_sr_1.RtfExportSR.ShapeBottom, offsetY + height);
        this.rtfBuilder.writeShapeIntegerProperty("lineWidth", unit_converter_1.UnitConverter.twipsToEmu(this.shape.outlineWidth));
        this.exportFloatingObjectTextWrapType(this.anchorInfo.wrapType, this.anchorInfo.isBehindDoc);
        this.exportFloatingObjectHorizontalPositionType(this.anchorInfo.horizontalPositionType);
        this.exportFloatingObjectVerticalPositionType(this.anchorInfo.verticalPositionType);
        if (this.anchorInfo.zOrder != 0)
            this.rtfBuilder.writeIntegerCommand(rtf_export_sr_1.RtfExportSR.ShapeZOrder, this.anchorInfo.zOrder);
        if (this.anchorInfo.wrapSide)
            this.rtfBuilder.writeIntegerCommand(rtf_export_sr_1.RtfExportSR.ShapeWrapTextSide, rtf_drawing_keywords_1.RtfDrawingKeywords.DrawingObjectTextWrapSideTable[this.anchorInfo.wrapSide]);
        if (this.anchorInfo.locked == true)
            this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.ShapeLocked);
    };
    RtfAnchoredRunExporter.prototype.exportFloatingObjectTextWrapType = function (textWrapType, isBehindDoc) {
        if (textWrapType == enums_1.AnchorObjectTextWrapType.None) {
            this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.ShapeWrapTextType, "3");
            this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.ShapeWrapTextTypeZOrder, common_1.boolToString(isBehindDoc));
        }
        else
            this.rtfBuilder.writeIntegerCommand(rtf_export_sr_1.RtfExportSR.ShapeWrapTextType, rtf_drawing_keywords_1.RtfDrawingKeywords.DrawingObjectTextWrapTypeTable[textWrapType]);
    };
    RtfAnchoredRunExporter.prototype.exportFloatingObjectShape = function () {
        if (this.size.rotation)
            this.rtfBuilder.writeShapeIntegerProperty("rotation", unit_converter_1.UnitConverter.twipsToFD(this.size.rotation));
        this.rtfBuilder.writeShapeBoolProperty("fLine", !dx_color_1.DXColor.isTransparentOrEmptyorNoColor(this.shape.outlineColor));
        if (this.shape.outlineColor != color_1.ColorHelper.NO_COLOR && this.shape.outlineWidth > 0) {
            this.rtfBuilder.writeShapeIntegerProperty("lineWidth", unit_converter_1.UnitConverter.twipsToEmu(this.shape.outlineWidth));
            if (this.shape.outlineColor && !dx_color_1.DXColor.isTransparentOrEmpty(this.shape.outlineColor))
                this.rtfBuilder.writeShapeColorProperty("lineColor", this.shape.outlineColor);
        }
        var fillColor = this.shape.fillColor;
        if (fillColor && !dx_color_1.DXColor.isTransparentOrEmpty(fillColor) && fillColor != color_1.ColorHelper.NO_COLOR) {
            this.rtfBuilder.writeShapeBoolProperty("fFilled", true);
            this.rtfBuilder.writeShapeColorProperty("fillColor", fillColor);
        }
        else
            this.rtfBuilder.writeShapeBoolProperty("fFilled", false);
    };
    RtfAnchoredRunExporter.prototype.exportFloatingObjectRelativeSize = function () {
        var percentOffset = this.anchorInfo.percentOffset;
        if (percentOffset.x != 0)
            this.rtfBuilder.writeShapeIntegerProperty("pctHorizPos", percentOffset.x / 100);
        if (percentOffset.y != 0)
            this.rtfBuilder.writeShapeIntegerProperty("pctVertPos", percentOffset.y / 100);
    };
    RtfAnchoredRunExporter.prototype.export = function () {
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.Shape);
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.ShapeInstance);
        this.exportShapeInstanceProperties();
        this.exportFloatingObjectShape();
        if (this.anchorInfo.horizontalPositionAlignment)
            this.rtfBuilder.writeShapeIntegerProperty("posh", rtf_drawing_keywords_1.RtfDrawingKeywords.DrawingObjectHorizontalPositionAlignmentTable[this.anchorInfo.horizontalPositionAlignment]);
        this.rtfBuilder.writeShapeIntegerProperty("posrelh", rtf_drawing_keywords_1.RtfDrawingKeywords.DrawingObjectHorizontalPositionTypeTable[this.anchorInfo.horizontalPositionType]);
        if (this.anchorInfo.verticalPositionAlignment)
            this.rtfBuilder.writeShapeIntegerProperty("posv", rtf_drawing_keywords_1.RtfDrawingKeywords.DrawingObjectVerticalPositionAlignmentTable[this.anchorInfo.verticalPositionAlignment]);
        this.rtfBuilder.writeShapeIntegerProperty("posrelv", rtf_drawing_keywords_1.RtfDrawingKeywords.DrawingObjectVerticalPositionTypeTable[this.anchorInfo.verticalPositionType]);
        this.rtfBuilder.writeShapeBoolProperty("fLayoutInCell", this.anchorInfo.layoutTableCell);
        this.rtfBuilder.writeShapeBoolProperty("fAllowOverlap", this.anchorInfo.allowOverlap);
        this.rtfBuilder.writeShapeBoolProperty("fLockAspectRatio", this.size.lockAspectRatio);
        this.rtfBuilder.writeShapeBoolProperty("fHidden", this.anchorInfo.hidden);
        this.rtfBuilder.writeShapeBoolProperty("fBehindDocument", this.anchorInfo.isBehindDoc);
        var leftDistance = unit_converter_1.UnitConverter.twipsToEmu(this.anchorInfo.leftDistance);
        if (leftDistance != shape_utils_1.ShapeUtils.distanceFromText)
            this.rtfBuilder.writeShapeIntegerProperty("dxWrapDistLeft", leftDistance);
        var rightDistance = unit_converter_1.UnitConverter.twipsToEmu(this.anchorInfo.rightDistance);
        if (rightDistance != shape_utils_1.ShapeUtils.distanceFromText)
            this.rtfBuilder.writeShapeIntegerProperty("dxWrapDistRight", rightDistance);
        this.rtfBuilder.writeShapeIntegerProperty("dyWrapDistTop", unit_converter_1.UnitConverter.twipsToEmu(this.anchorInfo.topDistance));
        this.rtfBuilder.writeShapeIntegerProperty("dyWrapDistBottom", unit_converter_1.UnitConverter.twipsToEmu(this.anchorInfo.bottomDistance));
        this.exportFloatingObjectRelativeSize();
        this.exportContent();
        this.rtfBuilder.closeGroup();
        this.rtfBuilder.closeGroup();
    };
    return RtfAnchoredRunExporter;
}());
exports.RtfAnchoredRunExporter = RtfAnchoredRunExporter;
