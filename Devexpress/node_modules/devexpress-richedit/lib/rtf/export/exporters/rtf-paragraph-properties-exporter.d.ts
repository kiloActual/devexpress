import { TabLeaderType } from '../../../core/layout/main-structures/layout-boxes/layout-tab-space-box';
import { BorderInfo } from '../../../core/model/borders/border-info';
import { Paragraph, TabAlign } from '../../../core/model/paragraph/paragraph';
import { ParagraphAlignment, ParagraphFirstLineIndent, ParagraphLineSpacingType, ParagraphProperties } from '../../../core/model/paragraph/paragraph-properties';
import { ParagraphStyle, TabInfo, TabProperties } from '../../../core/model/paragraph/paragraph-style';
import { ShadingInfo } from '../../../core/model/shadings/shading-info';
import { RtfPropertiesExporter } from './rtf-properties-exporter';
export declare class RtfParagraphPropertiesExporter extends RtfPropertiesExporter {
    defaultParagraphFirstLineIndent: number;
    defaultParagraphLeftIndent: number;
    defaultParagraphRightIndent: number;
    defaultSuppressHyphenation: boolean;
    defaultPageBreakBefore: boolean;
    defaultBeforeAutoSpacing: boolean;
    defaultAfterAutoSpacing: boolean;
    defaultKeepWithNext: boolean;
    defaultKeepLinesTogether: boolean;
    defaultWidowOrphanControl: boolean;
    doubleIntervalRtfLineSpacingValue: number;
    sesquialteralIntervalRtfLineSpacingValue: number;
    singleIntervalRtfLineSpacingValue: number;
    atLeastLineSpacingMultiple: number;
    exactlyLineSpacingMultiple: number;
    multipleLineSpacing: number;
    defaultParagraphSpacingBefore: number;
    defaultParagraphSpacingAfter: number;
    exportParagraphProperties(paragraph: Paragraph, tableNestingLevel: number): void;
    exportParagraphPropertiesCore(properties: ParagraphProperties, checkDefaultAlignment?: boolean): void;
    isDefaultAlignment(properties: ParagraphProperties): boolean;
    getActualAlignment(properties: ParagraphProperties): ParagraphAlignment.Left | ParagraphAlignment.Left | ParagraphAlignment;
    exportParagraphNumberingProperties(paragraph: Paragraph): void;
    shouldExportParagraphNumbering(numberingListId: number, listLevelIndex?: number): boolean;
    writeParagraphStyle(paragraphStyle: ParagraphStyle): void;
    writeParagraphBorder(topBorder: BorderInfo, command: string): void;
    writeParagraphAlignment(alignment: ParagraphAlignment): void;
    writeParagraphTableProperties(_paragraph: Paragraph, nestingLevel: number): void;
    writeParagraphGroupPropertiesId(_paragraph: Paragraph): void;
    writeParagraphIndents(mergedParagraphProperties: ParagraphProperties): void;
    private calcRtfFirstLineIndent;
    protected calcRtfLeftIndent(_firstLineIndentType: ParagraphFirstLineIndent, _firstLineIndent: number, leftIndent: number): number;
    writeParagraphSuppressHyphenation(paragraphSuppressHyphenation: boolean): void;
    writeParagraphSuppressLineNumbers(paragraphSuppressLineNumbers: boolean): void;
    writeParagraphContextualSpacing(value: boolean): void;
    writeParagraphPageBreakBefore(value: boolean): void;
    writeParagraphBeforeAutoSpacing(value: boolean): void;
    writeParagraphAfterAutoSpacing(value: boolean): void;
    writeParagraphKeepWithNext(value: boolean): void;
    writeParagraphKeepLinesTogether(value: boolean): void;
    writeParagraphWidowOrphanControl(value: boolean): void;
    writeParagraphOutlineLevel(outlineLevel: number): void;
    writeParagraphLineSpacing(paragraphLineSpacingType: ParagraphLineSpacingType, paragraphLineSpacing: number): void;
    writeRtfLineSpacing(rtfLineSpacingValue: number, rtfLineSpacingMultiple: number): void;
    writeParagraphSpacingBefore(spacingBefore: number): void;
    writeParagraphSpacingAfter(spacingAfter: number): void;
    writeTabs(tabFormattingInfo: TabProperties): void;
    writeTabInfo(tabInfo: TabInfo): void;
    writeTabKind(alignmentType: TabAlign): void;
    writeTabLeader(leaderType: TabLeaderType): void;
    writeTabPosition(position: number): void;
    writeParagraphShading(shadingInfo: ShadingInfo): void;
}
//# sourceMappingURL=rtf-paragraph-properties-exporter.d.ts.map
