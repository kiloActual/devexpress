"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var map_creator_1 = require("../../../base-utils/map-creator");
var cross_existing_iterator_1 = require("../../../core/formats/utils/cross-existing-iterator");
var recursive_objects_iterators_1 = require("../../../core/layout-formatter/box/generator/recursive-objects-iterators");
var enums_1 = require("../../../core/model/borders/enums");
var color_1 = require("../../../core/model/color/color");
var dx_color_1 = require("../../../core/model/color/dx-color");
var field_1 = require("../../../core/model/fields/field");
var json_document_enums_1 = require("../../../core/model/json/enums/json-document-enums");
var model_iterator_1 = require("../../../core/model/model-iterator");
var list_level_properties_1 = require("../../../core/model/numbering-lists/list-level-properties");
var control_1 = require("../../../core/model/options/control");
var document_protection_1 = require("../../../core/model/options/document-protection");
var run_type_1 = require("../../../core/model/runs/run-type");
var enums_2 = require("../../../core/model/section/enums");
var table_base_structures_1 = require("../../../core/model/tables/secondary-structures/table-base-structures");
var errors_1 = require("@devexpress/utils/lib/errors");
var list_1 = require("@devexpress/utils/lib/utils/list");
var number_1 = require("@devexpress/utils/lib/utils/map/number");
var string_1 = require("@devexpress/utils/lib/utils/string");
var general_section_info_1 = require("../../import/model/section/general-section-info");
var rtf_export_sr_1 = require("../../translation-table/rtf-export-sr");
var character_properties_export_helper_1 = require("../../utils/character-properties-export-helper");
var characters_1 = require("../characters");
var piece_table_numbering_list_counters_manager_1 = require("../piece-table-numbering-list-counters-manager");
var rtf_builder_1 = require("../rtf-builder");
var rtf_document_exporter_options_1 = require("../rtf-document-exporter-options");
var rtf_inline_picture_export_strategy_1 = require("./picture/rtf-inline-picture-export-strategy");
var rtf_anchored_picture_run_exporter_1 = require("./rtf-anchored-picture-run-exporter");
var rtf_anchored_text_box_run_exporter_1 = require("./rtf-anchored-text-box-run-exporter");
var rtf_character_properties_exporter_1 = require("./rtf-character-properties-exporter");
var rtf_numbering_list_exporter_1 = require("./rtf-numbering-list-exporter");
var rtf_paragraph_properties_exporter_1 = require("./rtf-paragraph-properties-exporter");
var rtf_section_properties_exporter_1 = require("./rtf-section-properties-exporter");
var rtf_style_exporter_1 = require("./rtf-style-exporter");
var rtf_table_exporter_1 = require("./table/rtf-table-exporter");
var RtfContentExporter = (function () {
    function RtfContentExporter(documentModel, options, rtfExportHelper) {
        this.shouldFourceUpdateIterators = false;
        this.documentModel = documentModel;
        this.subDocument = this.documentModel.mainSubDocument;
        this.pieceTableNumberingListCounters = new piece_table_numbering_list_counters_manager_1.PieceTableNumberingListCountersManager();
        this.rtfExportHelper = rtfExportHelper;
        this.options = options;
        this.rtfBuilder = this.createRtfBuilder();
        this.paragraphPropertiesExporter = new rtf_paragraph_properties_exporter_1.RtfParagraphPropertiesExporter(documentModel, rtfExportHelper, this.rtfBuilder);
        this.characterPropertiesExporter = new rtf_character_properties_exporter_1.RtfCharacterPropertiesExporter(documentModel, rtfExportHelper, this.rtfBuilder, options);
        this.sectionPropertiesExporter = new rtf_section_properties_exporter_1.RtfSectionPropertiesExporter(documentModel, rtfExportHelper, this.rtfBuilder);
        this.runHandlerMap = new map_creator_1.MapCreator()
            .add(run_type_1.RunType.TextRun, this.exportTextRun)
            .add(run_type_1.RunType.FieldCodeStartRun, this.fieldCodeStartRunHandler)
            .add(run_type_1.RunType.FieldCodeEndRun, this.fieldCodeEndRunHandler)
            .add(run_type_1.RunType.FieldResultEndRun, this.fieldResultEndRunHandler)
            .add(run_type_1.RunType.InlinePictureRun, this.inlinePictureRunHandler)
            .add(run_type_1.RunType.InlineTextBoxRun, this.inlineTextBoxRunHandler)
            .add(run_type_1.RunType.AnchoredPictureRun, this.anchoredPictureRunHandler)
            .add(run_type_1.RunType.AnchoredTextBoxRun, this.anchoredTextBoxRunHandler)
            .get();
    }
    Object.defineProperty(RtfContentExporter.prototype, "shouldExportHiddenText", {
        get: function () { return true; },
        enumerable: true,
        configurable: true
    });
    ;
    RtfContentExporter.prototype.createRtfBuilder = function () {
        return new rtf_builder_1.RtfBuilder();
    };
    RtfContentExporter.prototype.export = function () {
        this.exportDefaultCharacterProperties();
        this.exportDefaultParagraphProperties();
        this.exportStyleTable();
        if (this.options.listExportFormat == rtf_document_exporter_options_1.RtfNumberingListExportFormat.RtfFormat)
            this.exportNumberingListTable();
        this.populateUserTable();
        this.rtfBuilder.clear();
        this.exportDocumentInformation();
        this.exportDocumentSettings();
        if (this.options.wrapContentInGroup)
            this.rtfBuilder.openGroup();
        this.exportSubDocument(this.documentModel.mainSubDocument, this.exportDocument);
        if (this.options.wrapContentInGroup)
            this.rtfBuilder.closeGroup();
    };
    RtfContentExporter.prototype.shouldSplitRuns = function () {
        return this.subDocument.bookmarks.length > 0;
    };
    RtfContentExporter.prototype.splitRuns = function () {
        var _this = this;
        this.subDocument.bookmarks.forEach(function (bookmark) {
            _this.splitRun(bookmark.start);
            _this.splitRun(bookmark.end);
        });
    };
    RtfContentExporter.prototype.splitRun = function (position) {
        if (position == this.subDocument.getDocumentEndPosition())
            return;
        var chunkInfo = this.subDocument.getRunAndIndexesByPosition(position);
        if (chunkInfo.charOffset > 0)
            chunkInfo.chunk.splitRun(chunkInfo.runIndex, chunkInfo.charOffset);
    };
    RtfContentExporter.prototype.initializeSubDocument = function (startSectionParagraphIndex) {
        this.bookmarksIterator = new cross_existing_iterator_1.CrossExistingIterator(this.subDocument.bookmarks);
        this.bookmarksIterator.init();
        this.permissionsIterator = new cross_existing_iterator_1.CrossExistingIterator(this.subDocument.rangePermissions);
        this.permissionsIterator.init();
        this.tableIterator = new recursive_objects_iterators_1.TableIterator(this.subDocument.tables);
        this.tableIterator.init(0);
        this.shouldFourceUpdateIterators = true;
        this.startSectionParagraphIndex = startSectionParagraphIndex;
    };
    RtfContentExporter.prototype.updateIterators = function (position) {
        if (this.shouldFourceUpdateIterators)
            this.forceUpdateIterators(position);
    };
    RtfContentExporter.prototype.forceUpdateIterators = function (position) {
        this.bookmarksIterator.update(position);
        this.permissionsIterator.update(position);
        this.tableIterator.update(position);
        this.shouldFourceUpdateIterators = false;
    };
    RtfContentExporter.prototype.exportSubDocument = function (subDocument, pieceTableExporter) {
        var originalSubDocument = this.subDocument;
        var originalPieceTableNumberingListCounters = this.pieceTableNumberingListCounters;
        var originalPieceTableStartSectionParagraphIndex = this.startSectionParagraphIndex;
        this.subDocument = subDocument;
        this.pieceTableNumberingListCounters = new piece_table_numbering_list_counters_manager_1.PieceTableNumberingListCountersManager();
        this.initializeSubDocument(0);
        if (this.shouldSplitRuns())
            this.splitRuns();
        pieceTableExporter.call(this);
        if (originalSubDocument == null)
            this.subDocument = this.documentModel.mainSubDocument;
        else {
            this.subDocument = originalSubDocument;
            this.initializeSubDocument(originalPieceTableStartSectionParagraphIndex);
        }
        if (originalPieceTableNumberingListCounters == null)
            this.pieceTableNumberingListCounters = new piece_table_numbering_list_counters_manager_1.PieceTableNumberingListCountersManager();
        else
            this.pieceTableNumberingListCounters = originalPieceTableNumberingListCounters;
    };
    RtfContentExporter.prototype.exportDefaultCharacterProperties = function () {
        if (!string_1.StringUtils.isNullOrEmpty(this.rtfExportHelper.defaultCharacterProperties))
            return;
        this.rtfBuilder.clear();
        var characterProperties = this.documentModel.defaultCharacterProperties;
        if (characterProperties) {
            var characterPropertiesExporter = new rtf_character_properties_exporter_1.RtfCharacterPropertiesExporter(this.documentModel, this.rtfExportHelper, this.rtfBuilder, this.options);
            var foreColor = characterProperties.textColor.toRgb(this.documentModel.colorProvider);
            if (!dx_color_1.DXColor.isTransparentOrEmpty(foreColor) && foreColor != color_1.ColorHelper.BLACK_COLOR)
                this.rtfExportHelper.getColorIndex(characterProperties.textColor);
            characterPropertiesExporter.exportCharacterProperties(characterProperties, true, false, false);
            this.rtfExportHelper.defaultCharacterProperties = this.rtfBuilder.rtfContent.getText();
        }
    };
    RtfContentExporter.prototype.exportDefaultParagraphProperties = function () {
        if (!string_1.StringUtils.isNullOrEmpty(this.rtfExportHelper.defaultParagraphProperties))
            return;
        this.rtfBuilder.clear();
        var paragraphProperties = this.documentModel.defaultParagraphProperties;
        if (paragraphProperties) {
            var paragraphPropertiesExporter = new rtf_paragraph_properties_exporter_1.RtfParagraphPropertiesExporter(this.documentModel, this.rtfExportHelper, this.rtfBuilder);
            paragraphPropertiesExporter.exportParagraphPropertiesCore(paragraphProperties, true);
            this.rtfExportHelper.defaultParagraphProperties = this.rtfBuilder.rtfContent.getText();
        }
    };
    RtfContentExporter.prototype.exportStyleTable = function () {
        var styleExporter = new rtf_style_exporter_1.RtfStyleExporter(this.documentModel, this.createRtfBuilder(), this.rtfExportHelper, this.options);
        styleExporter.exportStyleSheet(this.documentModel.paragraphStyles, this.documentModel.characterStyles, this.documentModel.tableStyles);
    };
    RtfContentExporter.prototype.exportNumberingListTable = function () {
        var listExporter = new rtf_numbering_list_exporter_1.RtfNumberingListExporter(this);
        var numberingLists = this.documentModel.numberingLists;
        var startIndex = 0;
        startIndex = Math.min(startIndex, this.calculateFirstExportedNumberingListsIndexForStyles(this.documentModel.paragraphStyles));
        var count = numberingLists.length - startIndex;
        listExporter.export(numberingLists, startIndex, count);
    };
    RtfContentExporter.prototype.calculateFirstExportedNumberingListsIndexForStyles = function (paragraphStyleCollection) {
        var result = Number.MAX_SAFE_INTEGER;
        list_1.ListUtils.forEach(paragraphStyleCollection, function (style) {
            var styleListIndex = style.getNumberingListIndex();
            if (styleListIndex >= 0)
                result = Math.min(result, styleListIndex);
        });
        return result;
    };
    RtfContentExporter.prototype.populateUserTable = function () {
        var _this = this;
        this.rtfExportHelper.userCollection = [];
        number_1.NumberMapUtils.forEach(this.documentModel.subDocuments, function (subDoc) {
            _this.populateUserList(subDoc, _this.rtfExportHelper.userCollection);
        });
    };
    RtfContentExporter.prototype.populateUserList = function (pieceTable, users) {
        var rangePermissions = pieceTable.rangePermissions;
        var count = rangePermissions.length;
        for (var i = 0; i < count; i++) {
            var userName = rangePermissions[i].userName;
            if (!string_1.StringUtils.isNullOrEmpty(userName) && users.indexOf(userName) < 0)
                users.push(userName);
        }
    };
    RtfContentExporter.prototype.exportDocumentInformation = function () {
        if (!this.shouldExportDocumentInformation())
            return;
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.DocumentInformation);
        this.exportDocumentProperties();
        this.exportDocumentProtectionPasswordHash();
        this.rtfBuilder.closeGroup();
    };
    RtfContentExporter.prototype.exportDocumentProtectionPasswordHash = function () {
        if (!this.shouldExportDocumentProtectionPasswordHash())
            return;
        if (this.shouldExportDocumentProtectionPasswordHashInWord2007Format())
            this.exportDocumentProtectionPasswordHashWord2007();
        else
            this.exportDocumentProtectionPasswordHashWord2003();
    };
    RtfContentExporter.prototype.exportDocumentProtectionPasswordHashWord2007 = function () {
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.PasswordHash);
        var bytes = this.getDocumentProtectionPasswordHashWord2007Bytes();
        this.rtfBuilder.writeByteArrayAsHex(bytes);
        this.rtfBuilder.closeGroup();
    };
    RtfContentExporter.prototype.getDocumentProtectionPasswordHashWord2007Bytes = function () {
        var properties = this.documentModel.documentProtectionProperties;
        var passwordHash = properties.passwordHash;
        var passwordPrefix = properties.passwordPrefix ? properties.passwordPrefix : [];
        var uint32Array = [];
        uint32Array.push(1);
        uint32Array.push(40 + passwordHash.length + passwordPrefix.length);
        uint32Array.push(properties.cryptProviderType == document_protection_1.CryptProviderType.RsaFull ? 1 : 24);
        uint32Array.push(0x8000 + properties.hashAlgorithmType);
        uint32Array.push(properties.hashIterationCount);
        uint32Array.push(passwordHash.length);
        uint32Array.push(passwordPrefix.length);
        uint32Array.push(0);
        uint32Array.push(0);
        uint32Array.push(0);
        var tempResult = new Uint8Array(new Uint32Array(uint32Array).buffer);
        var result = new Uint8Array(tempResult.byteLength + passwordHash.length + passwordPrefix.length);
        result.set(tempResult);
        result.set(passwordHash, tempResult.byteLength);
        result.set(passwordPrefix, tempResult.byteLength + passwordHash.length);
        return result;
    };
    RtfContentExporter.prototype.exportDocumentProtectionPasswordHashWord2003 = function () {
        var properties = this.documentModel.documentProtectionProperties;
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.Password);
        var hash = properties.word2003PasswordHash;
        var value = "";
        if (hash == null) {
            value = "00000000";
        }
        else {
            var view = new DataView(hash, 0);
            var hashValue = view.getInt32(0);
            value = this.documentModel.simpleFormattersManager.formatString("{0:x8}", hashValue);
        }
        this.rtfBuilder.writeTextDirect(value);
        this.rtfBuilder.closeGroup();
    };
    RtfContentExporter.prototype.shouldExportDocumentProtectionPasswordHashInWord2007Format = function () {
        var properties = this.documentModel.documentProtectionProperties;
        return properties.passwordHash != null && properties.hashAlgorithmType != document_protection_1.HashAlgorithmType.None;
    };
    RtfContentExporter.prototype.shouldExportDocumentInformation = function () {
        return this.shouldExportDocumentProtectionPasswordHash() || this.shouldExportDocumentProperties();
    };
    RtfContentExporter.prototype.shouldExportDocumentProperties = function () {
        return this.options.exportedDocumentProperties != rtf_document_exporter_options_1.DocumentPropertyNames.None
            && this.options.exportedDocumentProperties != rtf_document_exporter_options_1.DocumentPropertyNames.CustomProperties;
    };
    RtfContentExporter.prototype.shouldExportDocumentProtectionPasswordHash = function () {
        var properties = this.documentModel.documentProtectionProperties;
        if (!properties || !properties.enforceProtection || (properties.passwordHash == null && properties.word2003PasswordHash == null))
            return false;
        else
            return true;
    };
    RtfContentExporter.prototype.exportDocumentSettings = function () {
        this.exportFormattingFlags();
        this.exportCompatibilitySettings();
        this.rtfBuilder.writeIntegerCommand(rtf_export_sr_1.RtfExportSR.DefaultTabWidth, this.documentModel.defaultTabWidth);
        if (this.documentModel.differentOddAndEvenPages)
            this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.PageFacing);
        if (this.documentModel.displayBackgroundShape)
            this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.DisplayBackgroundShape, "1");
        if (!dx_color_1.DXColor.isTransparentOrEmpty(this.documentModel.pageBackColor))
            this.exportPageBackground();
        this.exportDocumentProtectionProperties();
    };
    RtfContentExporter.prototype.exportFormattingFlags = function () {
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.NoUICompatible);
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.ShapeDoNotLay);
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.HtmlAutoSpacing);
    };
    RtfContentExporter.prototype.exportDocumentProtectionProperties = function () {
        var properties = this.documentModel.documentProtectionProperties;
        if (!properties || !properties.enforceProtection)
            return;
        if (properties.protectionType == json_document_enums_1.DocumentProtectionType.ReadOnly) {
            this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.AnnotationProtection);
            this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.ReadOnlyProtection);
            this.rtfBuilder.writeIntegerCommand(rtf_export_sr_1.RtfExportSR.EnforceProtection, 1);
            this.rtfBuilder.writeIntegerCommand(rtf_export_sr_1.RtfExportSR.ProtectionLevel, 3);
        }
        if (properties.protectionType == json_document_enums_1.DocumentProtectionType.AllowComments) {
            this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.AnnotationProtection);
            this.rtfBuilder.writeIntegerCommand(rtf_export_sr_1.RtfExportSR.EnforceProtection, 1);
            this.rtfBuilder.writeIntegerCommand(rtf_export_sr_1.RtfExportSR.ProtectionLevel, 1);
        }
    };
    RtfContentExporter.prototype.exportPageBackground = function () {
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.PageBackground);
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.Shape);
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.ShapeInstance);
        this.rtfBuilder.writeShapeColorProperty("fillColor", this.documentModel.pageBackColor);
        this.rtfBuilder.closeGroup();
        this.rtfBuilder.closeGroup();
        this.rtfBuilder.closeGroup();
    };
    RtfContentExporter.prototype.exportCompatibilitySettings = function () {
        var settings = this.documentModel.compatibilitySettings;
        if (!settings.dontJustifyLinesEndingInSoftLineBreak)
            this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.CompatibilityDontJustifyLinesEndingInSoftLineBreak);
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.CompatibilitySplitPageBreakAndParagraphMark);
    };
    RtfContentExporter.prototype.exportDocumentProperties = function () {
        this.writeDateTimeDocumentProperty(new Date(), rtf_export_sr_1.RtfExportSR.Created, rtf_document_exporter_options_1.DocumentPropertyNames.Created);
        this.writeDateTimeDocumentProperty(new Date(), rtf_export_sr_1.RtfExportSR.Modified, rtf_document_exporter_options_1.DocumentPropertyNames.Modified);
    };
    RtfContentExporter.prototype.writeStringDocumentProperty = function (value, command, flag) {
        if (value == null || (this.options.exportedDocumentProperties & flag) == 0)
            return;
        if (this.rtfBuilder.textHasNonASCIISymbol(value)) {
            this.rtfBuilder.openGroup();
            this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.UnicodeAndANSIGroup);
            this.writeANSIStringProperty(value, command);
            this.writeUnicodeStringProperty(value, command);
            this.rtfBuilder.closeGroup();
        }
        else
            this.writeStringProperty(value, command);
    };
    RtfContentExporter.prototype.writeANSIStringProperty = function (value, command) {
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(command);
        this.rtfBuilder.writeAnsiText(value);
        this.rtfBuilder.closeGroup();
    };
    RtfContentExporter.prototype.writeUnicodeStringProperty = function (value, command) {
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.UnicodeGroup);
        this.writeStringProperty(value, command);
        this.rtfBuilder.closeGroup();
    };
    RtfContentExporter.prototype.writeStringProperty = function (value, command) {
        if (value == null)
            return;
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(command);
        this.rtfBuilder.writeText(value);
        this.rtfBuilder.closeGroup();
    };
    RtfContentExporter.prototype.writeDateTimeDocumentProperty = function (value, command, flag) {
        if (value == null || (this.options.exportedDocumentProperties & flag) == 0)
            return;
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(command);
        this.rtfBuilder.writeIntegerCommand(rtf_export_sr_1.RtfExportSR.Year, value.getFullYear());
        this.rtfBuilder.writeIntegerCommand(rtf_export_sr_1.RtfExportSR.Month, value.getMonth());
        this.rtfBuilder.writeIntegerCommand(rtf_export_sr_1.RtfExportSR.Day, value.getDay());
        this.rtfBuilder.writeIntegerCommand(rtf_export_sr_1.RtfExportSR.Hour, value.getHours());
        this.rtfBuilder.writeIntegerCommand(rtf_export_sr_1.RtfExportSR.Minute, value.getMinutes());
        this.rtfBuilder.closeGroup();
    };
    RtfContentExporter.prototype.exportDocument = function () {
        for (var _i = 0, _a = this.documentModel.sections; _i < _a.length; _i++) {
            var section = _a[_i];
            this.exportSectionFiltered(section);
        }
    };
    RtfContentExporter.prototype.exportSectionFiltered = function (section) {
        if (this.shouldExportSection(section))
            this.exportSection(section);
    };
    RtfContentExporter.prototype.shouldExportSection = function (_section) {
        return this.shouldExportHiddenText;
    };
    RtfContentExporter.prototype.exportSection = function (section) {
        this.startNewSection(section);
        this.currentSection = section;
        this.startSectionParagraphIndex = this.subDocument.getParagraphIndexByPosition(this.currentSection.interval.start);
        this.exportSectionHeadersFootersCore(section);
        this.updateIterators(section.interval.start);
        this.exportParagraphs(this.subDocument.getParagraphsByInterval(section.interval));
    };
    RtfContentExporter.prototype.startNewSection = function (section) {
        if (!control_1.ControlOptions.isEnabled(this.documentModel.options.sections))
            return;
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.ResetSectionProperties);
        this.sectionPropertiesExporter.exportSectionProperties(section);
    };
    RtfContentExporter.prototype.exportParagraphs = function (paragraphs) {
        for (var i = 0; i < paragraphs.length; i++) {
            i = this.exportParagraphFiltered(paragraphs[i], i);
        }
        if (this.bookmarksIterator.update(this.subDocument.getDocumentEndPosition()))
            this.exportBookmark(this.bookmarksIterator);
        if (this.permissionsIterator.update(this.subDocument.getDocumentEndPosition()))
            this.exportRangePermission(this.permissionsIterator);
    };
    RtfContentExporter.prototype.exportParagraphFiltered = function (paragraph, paragraphIndex) {
        return this.exportParagraph(paragraph, paragraphIndex);
    };
    RtfContentExporter.prototype.exportParagraph = function (paragraph, paragraphIndex) {
        this.tableIterator.update(paragraph.interval.start);
        var tablesInfo = this.tableIterator.generateInfo(paragraph.interval.start);
        if (tablesInfo == null) {
            this.exportSingleParagraph(paragraph);
            return paragraphIndex;
        }
        else
            return rtf_table_exporter_1.RtfTableExporter.exportTable(this, tablesInfo[0].table.getTopLevelParent()) - this.startSectionParagraphIndex;
    };
    RtfContentExporter.prototype.exportSingleParagraph = function (paragraph) {
        this.exportParagraphCore(paragraph, 0, 0, -1);
        this.finishParagraph(paragraph);
    };
    RtfContentExporter.prototype.finishParagraph = function (paragraph) {
        var endParagraphPosition = paragraph.getEndPosition();
        var islastParagraphInDocument = endParagraphPosition == this.subDocument.getDocumentEndPosition();
        if (islastParagraphInDocument && this.supressExportLastParagraph(paragraph))
            return;
        if (!islastParagraphInDocument && endParagraphPosition == this.currentSection.getEndPosition())
            this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.SectionEndMark);
        else
            this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.EndOfParagraph);
    };
    RtfContentExporter.prototype.supressExportLastParagraph = function (_paragraph) {
        if (!this.subDocument.isMain())
            return false;
        return this.options.exportFinalParagraphMark == rtf_document_exporter_options_1.ExportFinalParagraphMark.Never;
    };
    RtfContentExporter.prototype.exportParagraphCore = function (paragraph, tableNestingLevel, _condTypes, _tableStyleIndex) {
        this.startNewParagraph(paragraph, tableNestingLevel);
        this.exportParagraphRuns(paragraph);
        this.exportParagraphCharacterProperties(paragraph);
    };
    RtfContentExporter.prototype.startNewParagraph = function (paragraph, tableNestingLevel) {
        if (paragraph.isInList())
            this.writeAlternativeText(paragraph);
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.ResetParagraphProperties);
        this.startNewInnerParagraph(paragraph, tableNestingLevel);
    };
    RtfContentExporter.prototype.startNewInnerParagraph = function (paragraph, tableNestingLevel) {
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.ResetCharacterFormatting);
        this.paragraphPropertiesExporter.exportParagraphProperties(paragraph, tableNestingLevel);
    };
    RtfContentExporter.prototype.writeAlternativeText = function (paragraph) {
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.AlternativeText);
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.ResetParagraphProperties);
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.ResetCharacterFormatting);
        var counters = this.subDocument.documentModel.getRangeListCounters(paragraph);
        this.rtfBuilder.writeText(paragraph.getNumberingListTextCore(counters));
        var separator = rtf_numbering_list_exporter_1.RtfNumberingListExporter.getListLevelSeparator(paragraph.getListLevel().getListLevelProperties().separator);
        this.rtfBuilder.writeText(separator.toString());
        this.rtfBuilder.closeGroup();
    };
    RtfContentExporter.prototype.exportParagraphCharacterProperties = function (paragraph) {
        var run = this.subDocument.getRunByPosition(paragraph.getEndPosition() - 1);
        this.characterPropertiesExporter.exportParagraphCharacterProperties(run.getCharacterMergedProperties());
    };
    RtfContentExporter.prototype.exportParagraphRuns = function (paragraph) {
        var modelIterator = new model_iterator_1.ModelIterator(this.subDocument, false);
        modelIterator.setPosition(paragraph.interval.start);
        do {
            this.exportRun(modelIterator.run, modelIterator.getRunText(), modelIterator.getAbsolutePosition());
        } while (modelIterator.moveToNextRun() && modelIterator.getAbsolutePosition() < paragraph.interval.end);
    };
    RtfContentExporter.prototype.exportRun = function (run, runText, absolutePosition) {
        if (this.bookmarksIterator.update(absolutePosition))
            this.exportBookmark(this.bookmarksIterator);
        if (this.permissionsIterator.update(absolutePosition))
            this.exportRangePermission(this.permissionsIterator);
        var handler = this.runHandlerMap[run.getType()];
        if (handler)
            handler.call(this, run, runText, absolutePosition);
        this.updateIterators(absolutePosition);
    };
    RtfContentExporter.prototype.exportTextRun = function (run, runText, _absolutePosition) {
        this.rtfBuilder.openGroup();
        this.characterPropertiesExporter.exportCharacterProperties(run.getCharacterMergedProperties());
        this.characterPropertiesExporter.exportCharacterStyle(run.characterStyle, run.paragraph.paragraphStyle);
        this.rtfBuilder.writeText(runText);
        this.rtfBuilder.closeGroup();
    };
    RtfContentExporter.prototype.exportBookmark = function (bookmarksIterator) {
        for (var _i = 0, _a = bookmarksIterator.addedObjects; _i < _a.length; _i++) {
            var state = _a[_i];
            this.rtfBuilder.openGroup();
            this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.BookmarkStart);
            this.rtfBuilder.writeText(state.object.name);
            this.rtfBuilder.closeGroup();
        }
        for (var _b = 0, _c = bookmarksIterator.deletedObjects; _b < _c.length; _b++) {
            var state = _c[_b];
            this.rtfBuilder.openGroup();
            this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.BookmarkEnd);
            this.rtfBuilder.writeText(state.object.name);
            this.rtfBuilder.closeGroup();
        }
    };
    RtfContentExporter.prototype.exportRangePermission = function (permissionsIterator) {
        for (var _i = 0, _a = permissionsIterator.addedObjects; _i < _a.length; _i++) {
            var state = _a[_i];
            var data = this.generateRangePermissionData(state.object);
            if (string_1.StringUtils.isNullOrEmpty(data))
                return;
            this.rtfBuilder.openGroup();
            this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.RangePermissionStart);
            this.rtfBuilder.writeTextDirect(data);
            this.rtfBuilder.closeGroup();
        }
        for (var _b = 0, _c = permissionsIterator.deletedObjects; _b < _c.length; _b++) {
            var state = _c[_b];
            var data = this.generateRangePermissionData(state.object);
            if (string_1.StringUtils.isNullOrEmpty(data))
                return;
            this.rtfBuilder.openGroup();
            this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.RangePermissionEnd);
            this.rtfBuilder.writeTextDirect(data);
            this.rtfBuilder.closeGroup();
        }
    };
    RtfContentExporter.prototype.generateRangePermissionData = function (rangePermission) {
        var helper = this.rtfExportHelper;
        if (!helper)
            return '';
        var userIndex = helper.getUserIndex(rangePermission);
        if (userIndex == 0)
            return '';
        var rangeIndex = this.subDocument.rangePermissions.indexOf(rangePermission);
        if (rangeIndex < 0)
            return '';
        return this.intToShortString(userIndex) + "0100" + this.intToShortString(rangeIndex) + "0000";
    };
    RtfContentExporter.prototype.intToShortString = function (value) {
        value &= 0x0000FFFF;
        var low = value & 0x000000FF;
        var high = value >> 8;
        return string_1.StringUtils.padLeft(low.toString(), 2, '0') + string_1.StringUtils.padLeft(high.toString(), 2, '0');
    };
    RtfContentExporter.prototype.fieldCodeStartRunHandler = function (_run, _runText, absolutePosition) {
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.Field);
        var field = this.subDocument.fields[field_1.Field.binaryIndexOf(this.subDocument.fields, absolutePosition + 1)];
        if (field.locked)
            this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.FieldLocked);
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.FieldCodeView);
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.FieldInstructions);
    };
    RtfContentExporter.prototype.fieldCodeEndRunHandler = function (_run, _runText, _absolutePosition) {
        this.rtfBuilder.closeGroup();
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.FieldResult);
    };
    RtfContentExporter.prototype.fieldResultEndRunHandler = function (_run, _runText, _absolutePosition) {
        this.rtfBuilder.closeGroup();
        this.rtfBuilder.closeGroup();
    };
    RtfContentExporter.prototype.inlinePictureRunHandler = function (run, _runText, _absolutePosition) {
        var characterProperties = run.getCharacterMergedProperties();
        var shouldExportCharacterProperties = character_properties_export_helper_1.CharacterPropertiesExportHelper.ShouldExportInlinePictureRunCharacterProperties(characterProperties, this.documentModel.colorProvider);
        if (shouldExportCharacterProperties) {
            this.rtfBuilder.openGroup();
            this.characterPropertiesExporter.exportCharacterProperties(characterProperties);
        }
        var exportStrategy = new rtf_inline_picture_export_strategy_1.RtfInlinePictureExportStrategy();
        var inlinePictureRun = run;
        exportStrategy.export(this.rtfBuilder, inlinePictureRun.info, this.documentModel.cache.imageCache, inlinePictureRun.info.containerProperties);
        if (shouldExportCharacterProperties)
            this.rtfBuilder.closeGroup();
    };
    RtfContentExporter.prototype.inlineTextBoxRunHandler = function (_run, _runText, _absolutePosition) {
        throw new Error(errors_1.Errors.NotImplemented);
    };
    RtfContentExporter.prototype.anchoredPictureRunHandler = function (run, _runText, _absolutePosition) {
        new rtf_anchored_picture_run_exporter_1.RtfAnchoredPictureRunExporter(this.rtfBuilder, run, this.documentModel.cache.imageCache).export();
    };
    RtfContentExporter.prototype.anchoredTextBoxRunHandler = function (run, _runText, _absolutePosition) {
        var _this = this;
        var textBoxRun = run;
        new rtf_anchored_text_box_run_exporter_1.RtfAnchoredTextBoxRunExporter(this.rtfBuilder, textBoxRun, function () {
            _this.exportSubDocument(_this.documentModel.subDocuments[textBoxRun.subDocId], _this.exportPieceTable);
        }).export();
    };
    RtfContentExporter.prototype.exportSectionHeadersFootersCore = function (section) {
        if (!control_1.ControlOptions.isEnabled(this.documentModel.options.headersFooters))
            return;
        var innerFirstPageHeader = section.headers.getObject(enums_2.HeaderFooterType.First);
        if (innerFirstPageHeader)
            this.exportFirstPageHeader(innerFirstPageHeader, section.headers.isLinkedToPrevious(enums_2.HeaderFooterType.First));
        var innerOddPageHeader = section.headers.getObject(enums_2.HeaderFooterType.Odd);
        if (innerOddPageHeader)
            this.exportOddPageHeader(innerOddPageHeader, section.headers.isLinkedToPrevious(enums_2.HeaderFooterType.Odd));
        var innerEvenPageHeader = section.headers.getObject(enums_2.HeaderFooterType.Even);
        if (innerEvenPageHeader)
            this.exportEvenPageHeader(innerEvenPageHeader, section.headers.isLinkedToPrevious(enums_2.HeaderFooterType.Even));
        var innerFirstPageFooter = section.footers.getObject(enums_2.HeaderFooterType.First);
        if (innerFirstPageFooter)
            this.exportFirstPageFooter(innerFirstPageFooter, section.footers.isLinkedToPrevious(enums_2.HeaderFooterType.First));
        var innerOddPageFooter = section.footers.getObject(enums_2.HeaderFooterType.Odd);
        if (innerOddPageFooter)
            this.exportOddPageFooter(innerOddPageFooter, section.footers.isLinkedToPrevious(enums_2.HeaderFooterType.Odd));
        var innerEvenPageFooter = section.footers.getObject(enums_2.HeaderFooterType.Even);
        if (innerEvenPageFooter)
            this.exportEvenPageFooter(innerEvenPageFooter, section.footers.isLinkedToPrevious(enums_2.HeaderFooterType.Even));
    };
    RtfContentExporter.prototype.exportFirstPageHeader = function (sectionHeader, linkedToPrevious) {
        if (linkedToPrevious)
            return;
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.SectionFirstPageHeader);
        this.exportFirstPageHeaderCore(sectionHeader, linkedToPrevious);
        this.rtfBuilder.closeGroup();
    };
    RtfContentExporter.prototype.exportOddPageHeader = function (sectionHeader, linkedToPrevious) {
        if (linkedToPrevious)
            return;
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.SectionOddPageHeader);
        this.exportOddPageHeaderCore(sectionHeader, linkedToPrevious);
        this.rtfBuilder.closeGroup();
    };
    RtfContentExporter.prototype.exportEvenPageHeader = function (sectionHeader, linkedToPrevious) {
        if (linkedToPrevious)
            return;
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.SectionEvenPageHeader);
        this.exportEvenPageHeaderCore(sectionHeader, linkedToPrevious);
        this.rtfBuilder.closeGroup();
    };
    RtfContentExporter.prototype.exportFirstPageFooter = function (sectionFooter, linkedToPrevious) {
        if (linkedToPrevious)
            return;
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.SectionFirstPageFooter);
        this.exportFirstPageFooterCore(sectionFooter, linkedToPrevious);
        this.rtfBuilder.closeGroup();
    };
    RtfContentExporter.prototype.exportOddPageFooter = function (sectionFooter, linkedToPrevious) {
        if (linkedToPrevious)
            return;
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.SectionOddPageFooter);
        this.exportOddPageFooterCore(sectionFooter, linkedToPrevious);
        this.rtfBuilder.closeGroup();
    };
    RtfContentExporter.prototype.exportEvenPageFooter = function (sectionFooter, linkedToPrevious) {
        if (linkedToPrevious)
            return;
        this.rtfBuilder.openGroup();
        this.rtfBuilder.writeCommand(rtf_export_sr_1.RtfExportSR.SectionEvenPageFooter);
        this.exportEvenPageFooterCore(sectionFooter, linkedToPrevious);
        this.rtfBuilder.closeGroup();
    };
    RtfContentExporter.prototype.exportFirstPageHeaderCore = function (sectionHeader, _linkedToPrevious) {
        var subDocument = this.documentModel.subDocuments[sectionHeader.subDocumentId];
        this.exportSubDocument(subDocument, this.exportPieceTable);
    };
    RtfContentExporter.prototype.exportOddPageHeaderCore = function (sectionHeader, _linkedToPrevious) {
        var subDocument = this.documentModel.subDocuments[sectionHeader.subDocumentId];
        this.exportSubDocument(subDocument, this.exportPieceTable);
    };
    RtfContentExporter.prototype.exportEvenPageHeaderCore = function (sectionHeader, _linkedToPrevious) {
        var subDocument = this.documentModel.subDocuments[sectionHeader.subDocumentId];
        this.exportSubDocument(subDocument, this.exportPieceTable);
    };
    RtfContentExporter.prototype.exportFirstPageFooterCore = function (sectionFooter, _linkedToPrevious) {
        var subDocument = this.documentModel.subDocuments[sectionFooter.subDocumentId];
        this.exportSubDocument(subDocument, this.exportPieceTable);
    };
    RtfContentExporter.prototype.exportOddPageFooterCore = function (sectionFooter, _linkedToPrevious) {
        var subDocument = this.documentModel.subDocuments[sectionFooter.subDocumentId];
        this.exportSubDocument(subDocument, this.exportPieceTable);
    };
    RtfContentExporter.prototype.exportEvenPageFooterCore = function (sectionFooter, _linkedToPrevious) {
        var subDocument = this.documentModel.subDocuments[sectionFooter.subDocumentId];
        this.exportSubDocument(subDocument, this.exportPieceTable);
    };
    RtfContentExporter.prototype.exportPieceTable = function () {
        this.exportParagraphs(this.subDocument.paragraphs);
    };
    RtfContentExporter.verticalAlignmentTypes = createVerticalAlignmentTypesTable();
    RtfContentExporter.sectionStartTypes = createSectionStartTypesTable();
    RtfContentExporter.chapterSeparatorTypes = createChapterSeparatorTypesTable();
    RtfContentExporter.pageNumberingTypes = createPageNumberingTypesTable();
    RtfContentExporter.sectionFootNoteNumberingTypes = createSectionFootNoteNumberingTypesTable();
    RtfContentExporter.sectionEndNoteNumberingTypes = createSectionEndNoteNumberingTypesTable();
    RtfContentExporter.footNoteNumberingTypes = createFootNoteNumberingTypesTable();
    RtfContentExporter.endNoteNumberingTypes = createEndNoteNumberingTypesTable();
    RtfContentExporter.borderLineStyles = createBorderLineStylesTable();
    RtfContentExporter.conditionalStylesTypes = createConditionalStylesTable();
    RtfContentExporter.predefinedUserGroups = createPredefinedUserGroups();
    return RtfContentExporter;
}());
exports.RtfContentExporter = RtfContentExporter;
function createVerticalAlignmentTypesTable() {
    return new map_creator_1.MapCreator()
        .add(general_section_info_1.VerticalAlignment.Both, rtf_export_sr_1.RtfExportSR.VerticalAlignmentJustify)
        .add(general_section_info_1.VerticalAlignment.Bottom, rtf_export_sr_1.RtfExportSR.VerticalAlignmentBottom)
        .add(general_section_info_1.VerticalAlignment.Center, rtf_export_sr_1.RtfExportSR.VerticalAlignmentCenter)
        .add(general_section_info_1.VerticalAlignment.Top, rtf_export_sr_1.RtfExportSR.VerticalAlignmentTop)
        .get();
}
function createSectionStartTypesTable() {
    return new map_creator_1.MapCreator()
        .add(enums_2.SectionStartType.Continuous, rtf_export_sr_1.RtfExportSR.SectionBreakTypeContinuous)
        .add(enums_2.SectionStartType.NextPage, rtf_export_sr_1.RtfExportSR.SectionBreakTypeNextPage)
        .add(enums_2.SectionStartType.OddPage, rtf_export_sr_1.RtfExportSR.SectionBreakTypeOddPage)
        .add(enums_2.SectionStartType.EvenPage, rtf_export_sr_1.RtfExportSR.SectionBreakTypeEvenPage)
        .add(enums_2.SectionStartType.Column, rtf_export_sr_1.RtfExportSR.SectionBreakTypeColumn)
        .get();
}
function createChapterSeparatorTypesTable() {
    return new map_creator_1.MapCreator()
        .add(characters_1.Characters.Hyphen, rtf_export_sr_1.RtfExportSR.SectionChapterSeparatorHyphen)
        .add('.', rtf_export_sr_1.RtfExportSR.SectionChapterSeparatorPeriod)
        .add(':', rtf_export_sr_1.RtfExportSR.SectionChapterSeparatorColon)
        .add(characters_1.Characters.EmDash, rtf_export_sr_1.RtfExportSR.SectionChapterSeparatorEmDash)
        .add(characters_1.Characters.EnDash, rtf_export_sr_1.RtfExportSR.SectionChapterSeparatorEnDash)
        .get();
}
function createPageNumberingTypesTable() {
    return new map_creator_1.MapCreator()
        .add(list_level_properties_1.NumberingFormat.Decimal, rtf_export_sr_1.RtfExportSR.SectionPageNumberingDecimal)
        .add(list_level_properties_1.NumberingFormat.UpperRoman, rtf_export_sr_1.RtfExportSR.SectionPageNumberingUpperRoman)
        .add(list_level_properties_1.NumberingFormat.LowerRoman, rtf_export_sr_1.RtfExportSR.SectionPageNumberingLowerRoman)
        .add(list_level_properties_1.NumberingFormat.UpperLetter, rtf_export_sr_1.RtfExportSR.SectionPageNumberingUpperLetter)
        .add(list_level_properties_1.NumberingFormat.LowerLetter, rtf_export_sr_1.RtfExportSR.SectionPageNumberingLowerLetter)
        .add(list_level_properties_1.NumberingFormat.ArabicAbjad, rtf_export_sr_1.RtfExportSR.SectionPageNumberingArabicAbjad)
        .add(list_level_properties_1.NumberingFormat.ArabicAlpha, rtf_export_sr_1.RtfExportSR.SectionPageNumberingArabicAlpha)
        .add(list_level_properties_1.NumberingFormat.Chosung, rtf_export_sr_1.RtfExportSR.SectionPageNumberingChosung)
        .add(list_level_properties_1.NumberingFormat.DecimalEnclosedCircle, rtf_export_sr_1.RtfExportSR.SectionPageNumberingDecimalEnclosedCircle)
        .add(list_level_properties_1.NumberingFormat.DecimalFullWidth, rtf_export_sr_1.RtfExportSR.SectionPageNumberingDecimalFullWidth)
        .add(list_level_properties_1.NumberingFormat.Ganada, rtf_export_sr_1.RtfExportSR.SectionPageNumberingGanada)
        .add(list_level_properties_1.NumberingFormat.HindiVowels, rtf_export_sr_1.RtfExportSR.SectionPageNumberingHindiVowels)
        .add(list_level_properties_1.NumberingFormat.HindiConsonants, rtf_export_sr_1.RtfExportSR.SectionPageNumberingHindiConsonants)
        .add(list_level_properties_1.NumberingFormat.HindiNumbers, rtf_export_sr_1.RtfExportSR.SectionPageNumberingHindiNumbers)
        .add(list_level_properties_1.NumberingFormat.HindiDescriptive, rtf_export_sr_1.RtfExportSR.SectionPageNumberingHindiDescriptive)
        .add(list_level_properties_1.NumberingFormat.ThaiLetters, rtf_export_sr_1.RtfExportSR.SectionPageNumberingThaiLetters)
        .add(list_level_properties_1.NumberingFormat.ThaiNumbers, rtf_export_sr_1.RtfExportSR.SectionPageNumberingThaiNumbers)
        .add(list_level_properties_1.NumberingFormat.ThaiDescriptive, rtf_export_sr_1.RtfExportSR.SectionPageNumberingThaiDescriptive)
        .add(list_level_properties_1.NumberingFormat.VietnameseDescriptive, rtf_export_sr_1.RtfExportSR.SectionPageNumberingVietnameseDescriptive)
        .get();
}
function createSectionFootNoteNumberingTypesTable() {
    return new map_creator_1.MapCreator()
        .add(list_level_properties_1.NumberingFormat.Decimal, rtf_export_sr_1.RtfExportSR.SectionFootNoteNumberingFormatDecimal)
        .add(list_level_properties_1.NumberingFormat.UpperRoman, rtf_export_sr_1.RtfExportSR.SectionFootNoteNumberingFormatUpperRoman)
        .add(list_level_properties_1.NumberingFormat.LowerRoman, rtf_export_sr_1.RtfExportSR.SectionFootNoteNumberingFormatLowerRoman)
        .add(list_level_properties_1.NumberingFormat.UpperLetter, rtf_export_sr_1.RtfExportSR.SectionFootNoteNumberingFormatUpperLetter)
        .add(list_level_properties_1.NumberingFormat.LowerLetter, rtf_export_sr_1.RtfExportSR.SectionFootNoteNumberingFormatLowerLetter)
        .add(list_level_properties_1.NumberingFormat.Chicago, rtf_export_sr_1.RtfExportSR.SectionFootNoteNumberingFormatChicago)
        .add(list_level_properties_1.NumberingFormat.Chosung, rtf_export_sr_1.RtfExportSR.SectionFootNoteNumberingFormatChosung)
        .add(list_level_properties_1.NumberingFormat.DecimalEnclosedCircle, rtf_export_sr_1.RtfExportSR.SectionFootNoteNumberingFormatDecimalEnclosedCircle)
        .add(list_level_properties_1.NumberingFormat.DecimalFullWidth, rtf_export_sr_1.RtfExportSR.SectionFootNoteNumberingFormatDecimalFullWidth)
        .add(list_level_properties_1.NumberingFormat.Ganada, rtf_export_sr_1.RtfExportSR.SectionFootNoteNumberingFormatGanada)
        .get();
}
function createSectionEndNoteNumberingTypesTable() {
    return new map_creator_1.MapCreator()
        .add(list_level_properties_1.NumberingFormat.Decimal, rtf_export_sr_1.RtfExportSR.SectionEndNoteNumberingFormatDecimal)
        .add(list_level_properties_1.NumberingFormat.UpperRoman, rtf_export_sr_1.RtfExportSR.SectionEndNoteNumberingFormatUpperRoman)
        .add(list_level_properties_1.NumberingFormat.LowerRoman, rtf_export_sr_1.RtfExportSR.SectionEndNoteNumberingFormatLowerRoman)
        .add(list_level_properties_1.NumberingFormat.UpperLetter, rtf_export_sr_1.RtfExportSR.SectionEndNoteNumberingFormatUpperLetter)
        .add(list_level_properties_1.NumberingFormat.LowerLetter, rtf_export_sr_1.RtfExportSR.SectionEndNoteNumberingFormatLowerLetter)
        .add(list_level_properties_1.NumberingFormat.Chicago, rtf_export_sr_1.RtfExportSR.SectionEndNoteNumberingFormatChicago)
        .add(list_level_properties_1.NumberingFormat.Chosung, rtf_export_sr_1.RtfExportSR.SectionEndNoteNumberingFormatChosung)
        .add(list_level_properties_1.NumberingFormat.DecimalEnclosedCircle, rtf_export_sr_1.RtfExportSR.SectionEndNoteNumberingFormatDecimalEnclosedCircle)
        .add(list_level_properties_1.NumberingFormat.DecimalFullWidth, rtf_export_sr_1.RtfExportSR.SectionEndNoteNumberingFormatDecimalFullWidth)
        .add(list_level_properties_1.NumberingFormat.Ganada, rtf_export_sr_1.RtfExportSR.SectionEndNoteNumberingFormatGanada)
        .get();
}
function createFootNoteNumberingTypesTable() {
    return new map_creator_1.MapCreator()
        .add(list_level_properties_1.NumberingFormat.Decimal, rtf_export_sr_1.RtfExportSR.FootNoteNumberingFormatDecimal)
        .add(list_level_properties_1.NumberingFormat.UpperRoman, rtf_export_sr_1.RtfExportSR.FootNoteNumberingFormatUpperRoman)
        .add(list_level_properties_1.NumberingFormat.LowerRoman, rtf_export_sr_1.RtfExportSR.FootNoteNumberingFormatLowerRoman)
        .add(list_level_properties_1.NumberingFormat.UpperLetter, rtf_export_sr_1.RtfExportSR.FootNoteNumberingFormatUpperLetter)
        .add(list_level_properties_1.NumberingFormat.LowerLetter, rtf_export_sr_1.RtfExportSR.FootNoteNumberingFormatLowerLetter)
        .add(list_level_properties_1.NumberingFormat.Chicago, rtf_export_sr_1.RtfExportSR.FootNoteNumberingFormatChicago)
        .add(list_level_properties_1.NumberingFormat.Chosung, rtf_export_sr_1.RtfExportSR.FootNoteNumberingFormatChosung)
        .add(list_level_properties_1.NumberingFormat.DecimalEnclosedCircle, rtf_export_sr_1.RtfExportSR.FootNoteNumberingFormatDecimalEnclosedCircle)
        .add(list_level_properties_1.NumberingFormat.DecimalFullWidth, rtf_export_sr_1.RtfExportSR.FootNoteNumberingFormatDecimalFullWidth)
        .add(list_level_properties_1.NumberingFormat.Ganada, rtf_export_sr_1.RtfExportSR.FootNoteNumberingFormatGanada)
        .get();
}
function createEndNoteNumberingTypesTable() {
    return new map_creator_1.MapCreator()
        .add(list_level_properties_1.NumberingFormat.Decimal, rtf_export_sr_1.RtfExportSR.EndNoteNumberingFormatDecimal)
        .add(list_level_properties_1.NumberingFormat.UpperRoman, rtf_export_sr_1.RtfExportSR.EndNoteNumberingFormatUpperRoman)
        .add(list_level_properties_1.NumberingFormat.LowerRoman, rtf_export_sr_1.RtfExportSR.EndNoteNumberingFormatLowerRoman)
        .add(list_level_properties_1.NumberingFormat.UpperLetter, rtf_export_sr_1.RtfExportSR.EndNoteNumberingFormatUpperLetter)
        .add(list_level_properties_1.NumberingFormat.LowerLetter, rtf_export_sr_1.RtfExportSR.EndNoteNumberingFormatLowerLetter)
        .add(list_level_properties_1.NumberingFormat.Chicago, rtf_export_sr_1.RtfExportSR.EndNoteNumberingFormatChicago)
        .add(list_level_properties_1.NumberingFormat.Chosung, rtf_export_sr_1.RtfExportSR.EndNoteNumberingFormatChosung)
        .add(list_level_properties_1.NumberingFormat.DecimalEnclosedCircle, rtf_export_sr_1.RtfExportSR.EndNoteNumberingFormatDecimalEnclosedCircle)
        .add(list_level_properties_1.NumberingFormat.DecimalFullWidth, rtf_export_sr_1.RtfExportSR.EndNoteNumberingFormatDecimalFullWidth)
        .add(list_level_properties_1.NumberingFormat.Ganada, rtf_export_sr_1.RtfExportSR.EndNoteNumberingFormatGanada)
        .get();
}
function createPredefinedUserGroups() {
    return new map_creator_1.MapCreator()
        .add(0xFFFA, "Current User")
        .add(0xFFFB, "Editors")
        .add(0xFFFC, "Owners")
        .add(0xFFFD, "Contributors")
        .add(0xFFFE, "Administrators")
        .add(0xFFFF, "Everyone")
        .get();
}
function createBorderLineStylesTable() {
    return new map_creator_1.MapCreator()
        .add(enums_1.BorderLineStyle.DashDotStroked, rtf_export_sr_1.RtfExportSR.BorderDashDotStroked)
        .add(enums_1.BorderLineStyle.Dashed, rtf_export_sr_1.RtfExportSR.BorderDashed)
        .add(enums_1.BorderLineStyle.DashSmallGap, rtf_export_sr_1.RtfExportSR.BorderDashedSmall)
        .add(enums_1.BorderLineStyle.DotDash, rtf_export_sr_1.RtfExportSR.BorderDotDashed)
        .add(enums_1.BorderLineStyle.DotDotDash, rtf_export_sr_1.RtfExportSR.BorderDotDotDashed)
        .add(enums_1.BorderLineStyle.Dotted, rtf_export_sr_1.RtfExportSR.BorderDotted)
        .add(enums_1.BorderLineStyle.Double, rtf_export_sr_1.RtfExportSR.BorderDouble)
        .add(enums_1.BorderLineStyle.DoubleWave, rtf_export_sr_1.RtfExportSR.BorderDoubleWavy)
        .add(enums_1.BorderLineStyle.Inset, rtf_export_sr_1.RtfExportSR.BorderInset)
        .add(enums_1.BorderLineStyle.None, rtf_export_sr_1.RtfExportSR.BorderNone)
        .add(enums_1.BorderLineStyle.Nil, rtf_export_sr_1.RtfExportSR.NoBorder)
        .add(enums_1.BorderLineStyle.Outset, rtf_export_sr_1.RtfExportSR.BorderOutset)
        .add(enums_1.BorderLineStyle.Single, rtf_export_sr_1.RtfExportSR.BorderSingle)
        .add(enums_1.BorderLineStyle.ThickThinLargeGap, rtf_export_sr_1.RtfExportSR.BorderThickThinLarge)
        .add(enums_1.BorderLineStyle.ThickThinMediumGap, rtf_export_sr_1.RtfExportSR.BorderThickThinMedium)
        .add(enums_1.BorderLineStyle.ThickThinSmallGap, rtf_export_sr_1.RtfExportSR.BorderThickThinSmall)
        .add(enums_1.BorderLineStyle.ThinThickLargeGap, rtf_export_sr_1.RtfExportSR.BorderThinThickLarge)
        .add(enums_1.BorderLineStyle.ThinThickMediumGap, rtf_export_sr_1.RtfExportSR.BorderThinThickMedium)
        .add(enums_1.BorderLineStyle.ThinThickSmallGap, rtf_export_sr_1.RtfExportSR.BorderThinThickSmall)
        .add(enums_1.BorderLineStyle.ThinThickThinLargeGap, rtf_export_sr_1.RtfExportSR.BorderThinThickThinLarge)
        .add(enums_1.BorderLineStyle.ThinThickThinMediumGap, rtf_export_sr_1.RtfExportSR.BorderThinThickThinMedium)
        .add(enums_1.BorderLineStyle.ThinThickThinSmallGap, rtf_export_sr_1.RtfExportSR.BorderThinThickThinSmall)
        .add(enums_1.BorderLineStyle.ThreeDEmboss, rtf_export_sr_1.RtfExportSR.BorderThreeDEmboss)
        .add(enums_1.BorderLineStyle.ThreeDEngrave, rtf_export_sr_1.RtfExportSR.BorderThreeDEngrave)
        .add(enums_1.BorderLineStyle.Triple, rtf_export_sr_1.RtfExportSR.BorderTriple)
        .add(enums_1.BorderLineStyle.Wave, rtf_export_sr_1.RtfExportSR.BorderWavy)
        .get();
}
function createConditionalStylesTable() {
    return new map_creator_1.MapCreator()
        .add(table_base_structures_1.ConditionalTableStyleFormatting.BottomLeftCell, rtf_export_sr_1.RtfExportSR.TableConditionalStyleBottomLeftCell)
        .add(table_base_structures_1.ConditionalTableStyleFormatting.BottomRightCell, rtf_export_sr_1.RtfExportSR.TableConditionalStyleBottomRightCell)
        .add(table_base_structures_1.ConditionalTableStyleFormatting.EvenColumnBanding, rtf_export_sr_1.RtfExportSR.TableConditionalStyleEvenColumnBanding)
        .add(table_base_structures_1.ConditionalTableStyleFormatting.EvenRowBanding, rtf_export_sr_1.RtfExportSR.TableConditionalStyleEvenRowBanding)
        .add(table_base_structures_1.ConditionalTableStyleFormatting.FirstColumn, rtf_export_sr_1.RtfExportSR.TableConditionalStyleFirstColumn)
        .add(table_base_structures_1.ConditionalTableStyleFormatting.FirstRow, rtf_export_sr_1.RtfExportSR.TableConditionalStyleFirstRow)
        .add(table_base_structures_1.ConditionalTableStyleFormatting.LastColumn, rtf_export_sr_1.RtfExportSR.TableConditionalStyleLastColumn)
        .add(table_base_structures_1.ConditionalTableStyleFormatting.LastRow, rtf_export_sr_1.RtfExportSR.TableConditionalStyleLastRow)
        .add(table_base_structures_1.ConditionalTableStyleFormatting.OddColumnBanding, rtf_export_sr_1.RtfExportSR.TableConditionalStyleOddColumnBanding)
        .add(table_base_structures_1.ConditionalTableStyleFormatting.OddRowBanding, rtf_export_sr_1.RtfExportSR.TableConditionalStyleOddRowBanding)
        .add(table_base_structures_1.ConditionalTableStyleFormatting.TopLeftCell, rtf_export_sr_1.RtfExportSR.TableConditionalStyleTopLeftCell)
        .add(table_base_structures_1.ConditionalTableStyleFormatting.TopRightCell, rtf_export_sr_1.RtfExportSR.TableConditionalStyleTopRightCell)
        .get();
}
