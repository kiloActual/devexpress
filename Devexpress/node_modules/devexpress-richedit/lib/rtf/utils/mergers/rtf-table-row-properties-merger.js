"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var table_row_properties_merger_1 = require("../../../core/model/tables/properties-mergers/table-row-properties-merger");
var table_properties_1 = require("../../../core/model/tables/properties/table-properties");
var table_base_structures_1 = require("../../../core/model/tables/secondary-structures/table-base-structures");
var rtf_table_properties_merger_base_1 = require("./rtf-table-properties-merger-base");
var RtfTableRowPropertiesMerger = (function (_super) {
    tslib_1.__extends(RtfTableRowPropertiesMerger, _super);
    function RtfTableRowPropertiesMerger(model) {
        return _super.call(this, model) || this;
    }
    Object.defineProperty(RtfTableRowPropertiesMerger.prototype, "defaultProperties", {
        get: function () {
            return this.model.defaultTableRowProperties;
        },
        enumerable: true,
        configurable: true
    });
    RtfTableRowPropertiesMerger.prototype.getMergedProperties = function (row) {
        return this.merge(row.properties, row.parentTable.style, row, row.tablePropertiesException, table_base_structures_1.ConditionalTableStyleFormatting.WholeTable);
    };
    RtfTableRowPropertiesMerger.prototype.getStyleMergedProperties = function (style, tableStyle, conditionalFormatting) {
        return this.merge(style.tableRowProperties, tableStyle, null, new table_properties_1.TableProperties(), conditionalFormatting);
    };
    RtfTableRowPropertiesMerger.prototype.merge = function (source, tableStyle, row, tablePropertiesException, conditionalFormatting) {
        var result = source.clone();
        if (row) {
            result.cellSpacing = new table_row_properties_merger_1.TableRowPropertiesMergerCellSpacing(this.model, row.parentTable, tablePropertiesException)
                .getProperty(source, tableStyle, conditionalFormatting, this.defaultProperties);
        }
        result.cantSplit = new table_row_properties_merger_1.TableRowPropertiesMergerCantSplit()
            .getProperty(source, tableStyle, conditionalFormatting, this.defaultProperties);
        result.tableRowAlignment = new table_row_properties_merger_1.TableRowPropertiesMergerHorizontalAlignment(tablePropertiesException)
            .getProperty(source, tableStyle, conditionalFormatting, this.defaultProperties);
        result.divId = new table_row_properties_merger_1.TableRowPropertiesMergerDivId()
            .getProperty(source, tableStyle, conditionalFormatting, this.defaultProperties);
        return result;
    };
    return RtfTableRowPropertiesMerger;
}(rtf_table_properties_merger_base_1.RtfTablePropertiesMergerBase));
exports.RtfTableRowPropertiesMerger = RtfTableRowPropertiesMerger;
