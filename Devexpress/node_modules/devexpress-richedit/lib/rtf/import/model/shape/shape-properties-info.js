"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var drawing_effects_import_helper_1 = require("./rtf-shape-helpers/drawing-effects-import-helper");
var RtfShapePropertiesInfo = (function () {
    function RtfShapePropertiesInfo() {
        this.shapeComplexProperties = {};
    }
    RtfShapePropertiesInfo.prototype.addProperty = function (keyword, value) {
        this.shapeComplexProperties[keyword] = value;
    };
    RtfShapePropertiesInfo.prototype.trySetProperty = function (keyword, action) {
        var _this = this;
        return this.setIfPropertyExist(keyword, function (keyword) { return _this.getPropertyOrNull(keyword); }, action);
    };
    RtfShapePropertiesInfo.prototype.getProperty = function (keyword, defaultValue) {
        var prop = this.getPropertyOrNull(keyword);
        return prop ? prop : defaultValue;
    };
    RtfShapePropertiesInfo.prototype.getNullableColorProperty = function (name) {
        var rawValue = this.getPropertyOrNull(name);
        if (typeof rawValue == 'number')
            return rawValue === null ? null : drawing_effects_import_helper_1.DrawingEffectsImportHelper.getColorProperty(rawValue);
        return rawValue === null ? null : drawing_effects_import_helper_1.DrawingEffectsImportHelper.getColorProperty(rawValue.intColor);
    };
    RtfShapePropertiesInfo.prototype.getPropertyOrNull = function (keyword) {
        var rawValue = this.shapeComplexProperties[keyword];
        if (rawValue === undefined)
            return null;
        if (typeof (rawValue) == 'boolean')
            return (!!rawValue);
        else
            return rawValue;
    };
    RtfShapePropertiesInfo.prototype.setIfPropertyExist = function (keyword, getter, action) {
        var rawValue = getter(keyword);
        if (rawValue == null)
            return false;
        action(rawValue);
        return true;
    };
    return RtfShapePropertiesInfo;
}());
exports.RtfShapePropertiesInfo = RtfShapePropertiesInfo;
