"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var enums_1 = require("../../../../../core/model/floating-objects/enums");
var unit_converter_1 = require("@devexpress/utils/lib/class/unit-converter");
var common_1 = require("@devexpress/utils/lib/utils/common");
var number_1 = require("@devexpress/utils/lib/utils/map/number");
var rtf_drawing_keywords_1 = require("../../../../translation-table/rtf-drawing-keywords");
var shape_properties_destination_base_1 = require("../../../destination/shape/shape-properties-destination-base");
var RtfContainerPropertiesHelper = (function () {
    function RtfContainerPropertiesHelper(shapeProperties) {
        this.shapeProperties = shapeProperties;
    }
    RtfContainerPropertiesHelper.prototype.applyProperties = function (anchorInfo, size) {
        this.processLeftDistance(anchorInfo);
        this.processRightDistance(anchorInfo);
        this.processLocked(anchorInfo);
        this.processHorizontalPositionType(anchorInfo);
        this.processVerticalPositionType(anchorInfo);
        this.processZOrder(anchorInfo);
        this.processDrawingObjectHorizontalPositionAlignment(anchorInfo);
        this.processDrawingObjectHorizontalPositionType(anchorInfo);
        this.processDrawingObjectVerticalPositionAlignment(anchorInfo);
        this.processDrawingObjectVerticalPositionType(anchorInfo);
        this.processPercentHorizontalOffset(anchorInfo);
        this.processPercentVerticalOffset(anchorInfo);
        this.processLayoutInTableCell(anchorInfo);
        this.processAllowOverlap(anchorInfo);
        this.processDisplayBehindDocumentText(anchorInfo);
        this.processTopDistance(anchorInfo);
        this.processBottomDistance(anchorInfo);
        if (size) {
            this.processRelativeHorizontalSize(size);
            this.processRelativeVerticalSize(size);
        }
    };
    RtfContainerPropertiesHelper.prototype.processLocked = function (anchorInfo) {
        this.shapeProperties.trySetProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.ShapeLocked, function (value) { return anchorInfo.locked = value; });
    };
    RtfContainerPropertiesHelper.prototype.processHorizontalPositionType = function (anchorInfo) {
        this.shapeProperties.trySetProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.DXInternalLegacyHorizontalPositionAlignment, function (value) { return anchorInfo.horizontalPositionType = value; });
    };
    RtfContainerPropertiesHelper.prototype.processVerticalPositionType = function (anchorInfo) {
        this.shapeProperties.trySetProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.DXInternalLegacyVerticalPositionAlignment, function (value) { return anchorInfo.verticalPositionType = value; });
    };
    RtfContainerPropertiesHelper.prototype.processZOrder = function (anchorInfo) {
        if (!this.shapeProperties.trySetProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.Dhgt, function (value) { return anchorInfo.zOrder = value; }))
            this.shapeProperties.trySetProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.ShapeZOrder, function (value) { return anchorInfo.zOrder = value; });
    };
    RtfContainerPropertiesHelper.prototype.processDrawingObjectHorizontalPositionAlignment = function (anchorInfo) {
        var _this = this;
        this.shapeProperties.trySetProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.HorizontalPositionAlignment, function (value) { return _this.importDrawingObjectHorizontalPositionAlignment(anchorInfo, value); });
    };
    RtfContainerPropertiesHelper.prototype.processDrawingObjectHorizontalPositionType = function (anchorInfo) {
        var _this = this;
        var ignoreHPos = this.shapeProperties.getPropertyOrNull(rtf_drawing_keywords_1.RtfDrawingKeywords.ShapeIgnoreLegacyHorizontalPositionType);
        if (ignoreHPos)
            anchorInfo.horizontalPositionType = enums_1.AnchorObjectHorizontalPositionType.Column;
        this.shapeProperties.trySetProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.HorizontalPositionType, function (value) {
            return _this.importDrawingObjectHorizontalPositionType(anchorInfo, value);
        });
    };
    RtfContainerPropertiesHelper.prototype.processPercentHorizontalOffset = function (anchorInfo) {
        this.shapeProperties.trySetProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.PctHorizPos, function (value) { return anchorInfo.percentOffset.x = value * 100; });
    };
    RtfContainerPropertiesHelper.prototype.processPercentVerticalOffset = function (anchorInfo) {
        this.shapeProperties.trySetProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.PctVertPos, function (value) { return anchorInfo.percentOffset.y = value * 100; });
    };
    RtfContainerPropertiesHelper.prototype.processDrawingObjectVerticalPositionAlignment = function (anchorInfo) {
        var _this = this;
        this.shapeProperties.trySetProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.VerticalPositionAlignment, function (value) {
            return _this.importDrawingObjectVerticalPositionAlignment(anchorInfo, value);
        });
    };
    RtfContainerPropertiesHelper.prototype.processDrawingObjectVerticalPositionType = function (anchorInfo) {
        var _this = this;
        var ignoreVPos = this.shapeProperties.getPropertyOrNull(rtf_drawing_keywords_1.RtfDrawingKeywords.ShapeIgnoreLegacyVerticalPositionType);
        if (ignoreVPos)
            anchorInfo.verticalPositionType = enums_1.AnchorObjectVerticalPositionType.Paragraph;
        this.shapeProperties.trySetProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.VerticalPositionType, function (value) {
            return _this.importDrawingObjectVerticalPositionType(anchorInfo, value);
        });
    };
    RtfContainerPropertiesHelper.prototype.processLayoutInTableCell = function (anchorInfo) {
        this.shapeProperties.trySetProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.LayoutInCell, function (value) { return anchorInfo.layoutTableCell = value; });
    };
    RtfContainerPropertiesHelper.prototype.processAllowOverlap = function (anchorInfo) {
        this.shapeProperties.trySetProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.AllowOverlap, function (value) { return anchorInfo.allowOverlap = value; });
    };
    RtfContainerPropertiesHelper.prototype.processDisplayBehindDocumentText = function (anchorInfo) {
        if (!this.shapeProperties.trySetProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.ShapeWrapTextTypeZOrder, function (value) { return anchorInfo.isBehindDoc = value; }))
            this.shapeProperties.trySetProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.BehindDocument, function (value) { return anchorInfo.isBehindDoc = value; });
    };
    RtfContainerPropertiesHelper.prototype.processLeftDistance = function (anchorInfo) {
        var isPseudoInline = this.shapeProperties.getPropertyOrNull(rtf_drawing_keywords_1.RtfDrawingKeywords.PseudoInline);
        if (isPseudoInline)
            return;
        anchorInfo.leftDistance = unit_converter_1.UnitConverter.emuToTwips(this.shapeProperties.getProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.WrapDistLeft, shape_properties_destination_base_1.ShapePropertiesDestinationBase.distanceFromText));
    };
    RtfContainerPropertiesHelper.prototype.processRightDistance = function (anchorInfo) {
        var isPseudoInline = this.shapeProperties.getPropertyOrNull(rtf_drawing_keywords_1.RtfDrawingKeywords.PseudoInline);
        if (isPseudoInline)
            return;
        anchorInfo.rightDistance = unit_converter_1.UnitConverter.emuToTwips(this.shapeProperties.getProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.WrapDistRight, shape_properties_destination_base_1.ShapePropertiesDestinationBase.distanceFromText));
    };
    RtfContainerPropertiesHelper.prototype.processTopDistance = function (anchorInfo) {
        this.shapeProperties.trySetProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.WrapDistTop, function (value) { return anchorInfo.topDistance = unit_converter_1.UnitConverter.emuToTwips(value); });
    };
    RtfContainerPropertiesHelper.prototype.processBottomDistance = function (anchorInfo) {
        this.shapeProperties.trySetProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.WrapDistBottom, function (value) { return anchorInfo.bottomDistance = unit_converter_1.UnitConverter.emuToTwips(value); });
    };
    RtfContainerPropertiesHelper.prototype.processRelativeHorizontalSize = function (size) {
        var rawPercentageWidth = this.shapeProperties.getPropertyOrNull(rtf_drawing_keywords_1.RtfDrawingKeywords.RelativeHorizontalSizeWidth);
        if (rawPercentageWidth == null)
            return;
        size.relativeSize.width = rawPercentageWidth * 100;
        size.relativeWidthType = this.getDrawingObjectRelativeFromHorizontal();
        size.setUseAbsoluteWidth(false);
    };
    RtfContainerPropertiesHelper.prototype.processRelativeVerticalSize = function (size) {
        var rawPercentageHeight = this.shapeProperties.getPropertyOrNull(rtf_drawing_keywords_1.RtfDrawingKeywords.RelativeVerticalSizeHeight);
        if (rawPercentageHeight == null)
            return;
        size.relativeSize.height = rawPercentageHeight * 100;
        size.relativeHeightType = this.getDrawingObjectRelativeFromVertical();
        size.setUseAbsoluteHeight(false);
    };
    RtfContainerPropertiesHelper.prototype.getDrawingObjectRelativeFromHorizontal = function () {
        var rawValue = this.shapeProperties.getPropertyOrNull(rtf_drawing_keywords_1.RtfDrawingKeywords.RelativeHorizontalSizeFrom);
        if (rawValue == null)
            return enums_1.RelativeWidthType.Page;
        return rawValue;
    };
    RtfContainerPropertiesHelper.prototype.getDrawingObjectRelativeFromVertical = function () {
        var rawValue = this.shapeProperties.getPropertyOrNull(rtf_drawing_keywords_1.RtfDrawingKeywords.RelativeVerticalSizeFrom);
        if (rawValue == null)
            return enums_1.RelativeHeightType.Page;
        return rawValue;
    };
    RtfContainerPropertiesHelper.prototype.importDrawingObjectHorizontalPositionAlignment = function (anchorInfo, propertyValue) {
        anchorInfo.horizontalPositionAlignment = propertyValue;
    };
    RtfContainerPropertiesHelper.prototype.importDrawingObjectHorizontalPositionType = function (anchorInfo, propertyValue) {
        var table = rtf_drawing_keywords_1.RtfDrawingKeywords.DrawingObjectHorizontalPositionTypeTable;
        var index = number_1.NumberMapUtils.keyBy(table, function (value) { return value == propertyValue; });
        if (common_1.isDefined(index))
            anchorInfo.horizontalPositionType = (index);
    };
    RtfContainerPropertiesHelper.prototype.importDrawingObjectVerticalPositionAlignment = function (anchorInfo, propertyValue) {
        anchorInfo.verticalPositionAlignment = propertyValue;
    };
    RtfContainerPropertiesHelper.prototype.importDrawingObjectVerticalPositionType = function (anchorInfo, propertyValue) {
        var table = rtf_drawing_keywords_1.RtfDrawingKeywords.DrawingObjectVerticalPositionTypeTable;
        var index = number_1.NumberMapUtils.keyBy(table, function (value) { return value == propertyValue; });
        if (common_1.isDefined(index))
            anchorInfo.verticalPositionType = (index);
    };
    return RtfContainerPropertiesHelper;
}());
exports.RtfContainerPropertiesHelper = RtfContainerPropertiesHelper;
