"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var enums_1 = require("../../../../../core/model/floating-objects/enums");
var rtf_drawing_keywords_1 = require("../../../../translation-table/rtf-drawing-keywords");
var rtf_container_properties_helper_1 = require("./rtf-container-properties-helper");
var rtf_drawing_object_run_properties_helper_1 = require("./rtf-drawing-object-run-properties-helper");
var rtf_drawing_text_body_properties_helper_1 = require("./rtf-drawing-text-body-properties-helper");
var rtf_outline_properties_helper_1 = require("./rtf-outline-properties-helper");
var RtfShapeImportHelper = (function () {
    function RtfShapeImportHelper(shapeProperties) {
        this.shapeProperties = shapeProperties;
    }
    RtfShapeImportHelper.prototype.setDefaults = function (anchorInfo) {
        anchorInfo.horizontalPositionType = enums_1.AnchorObjectHorizontalPositionType.Margin;
        anchorInfo.verticalPositionType = enums_1.AnchorObjectVerticalPositionType.Margin;
        anchorInfo.wrapType = enums_1.AnchorObjectTextWrapType.None;
        anchorInfo.horizontalPositionAlignment = enums_1.AnchorObjectHorizontalPositionAlignment.None;
        anchorInfo.verticalPositionAlignment = enums_1.AnchorObjectVerticalPositionAlignment.None;
    };
    RtfShapeImportHelper.prototype.applyDrawingObjectRunProperties = function (anchorInfo, nonVisualDrawingObjectProperties, size) {
        this.setDefaults(anchorInfo);
        this.applyRunProperties(anchorInfo);
        this.applyContainerProperties(anchorInfo, size);
        this.applyNonVisualDrawingObjectProperties(anchorInfo, nonVisualDrawingObjectProperties);
    };
    RtfShapeImportHelper.prototype.applyAnchoredTextBoxRunProperties = function (run) {
        this.applyBodyProperties(run.textBoxProperties);
        this.applyNonVisualDrawingObjectProperties(run.anchorInfo, run.containerProperties);
        this.applyShapeProperties(run.shape);
        this.applyDrawingObjectRunProperties(run.anchorInfo, run.containerProperties, run.size);
    };
    RtfShapeImportHelper.prototype.applyAnchoredPictureRunProperties = function (run) {
        this.applyNonVisualDrawingObjectProperties(run.anchorInfo, run.info.containerProperties);
        this.applyShapeProperties(run.shape);
        this.applyDrawingObjectRunProperties(run.anchorInfo, run.info.nonVisualDrawingProperties, null);
    };
    RtfShapeImportHelper.prototype.applyInlinePictureRunProperties = function (run) {
        this.applyNonVisualDrawingObjectPropertiesCore(run.info.containerProperties);
        this.applyShapeProperties(run.shape);
        this.applyNonVisualDrawingObjectPropertiesCore(run.info.nonVisualDrawingProperties);
    };
    RtfShapeImportHelper.prototype.applyRunProperties = function (anchorInfo) {
        new rtf_drawing_object_run_properties_helper_1.RtfDrawingObjectRunPropertiesHelper(this.shapeProperties).applyProperties(anchorInfo);
    };
    RtfShapeImportHelper.prototype.applyContainerProperties = function (anchorInfo, size) {
        new rtf_container_properties_helper_1.RtfContainerPropertiesHelper(this.shapeProperties).applyProperties(anchorInfo, size);
    };
    RtfShapeImportHelper.prototype.applyNonVisualDrawingObjectProperties = function (anchorInfo, constainerProperties) {
        this.applyNonVisualDrawingObjectPropertiesCore(constainerProperties);
        this.shapeProperties.trySetProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.Hidden, function (value) { return anchorInfo.hidden = value; });
    };
    RtfShapeImportHelper.prototype.applyNonVisualDrawingObjectPropertiesCore = function (constainerProperties) {
        this.shapeProperties.trySetProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.Name, function (value) { return constainerProperties.name = value; });
        this.shapeProperties.trySetProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.Description, function (value) { return constainerProperties.description = value; });
    };
    RtfShapeImportHelper.prototype.applyShapeProperties = function (shape) {
        var filled = this.shapeProperties.getNullableColorProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.Filled);
        var fillColor = this.shapeProperties.getNullableColorProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.FillColor);
        if (filled && fillColor)
            shape.fillColor = fillColor;
        new rtf_outline_properties_helper_1.RtfOutlinePropertiesHelper(this.shapeProperties).applyProperties(shape);
    };
    RtfShapeImportHelper.prototype.applyBodyProperties = function (textBoxProperties) {
        new rtf_drawing_text_body_properties_helper_1.RtfDrawingTextBodyPropertiesHelper(this.shapeProperties).applyProperties(textBoxProperties);
    };
    return RtfShapeImportHelper;
}());
exports.RtfShapeImportHelper = RtfShapeImportHelper;
