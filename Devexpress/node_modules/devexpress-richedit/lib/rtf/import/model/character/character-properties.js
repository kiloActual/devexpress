"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var character_properties_1 = require("../../../../core/model/character/character-properties");
var character_property_descriptor_1 = require("../../../../core/model/character/character-property-descriptor");
var string_1 = require("@devexpress/utils/lib/utils/string");
var enums_1 = require("./enums");
var rtf_formatting_info_1 = require("./rtf-formatting-info");
var RtfCharacterProperties = (function () {
    function RtfCharacterProperties() {
        this.coreProperties = new character_properties_1.MaskedCharacterProperties();
        this.parentStyleIndex = -1;
        this.fontType = enums_1.RtfFontType.Undefined;
        this.rtfFormattingInfo = new rtf_formatting_info_1.RtfFormattingInfo();
    }
    RtfCharacterProperties.prototype.setFont = function (rtfFontInfo, fontInfo) {
        var fontName = rtfFontInfo.name;
        this.coreProperties.setValue(character_property_descriptor_1.CharacterPropertyDescriptor.fontInfo, fontInfo);
        if (this.fontType == enums_1.RtfFontType.Undefined) {
            this.resetUseAssociatedProperties();
        }
        else {
            if (this.fontType == enums_1.RtfFontType.DoubleByteCharactersFont)
                this.doubleByteCharactersFontName = fontName;
            else if (this.fontType == enums_1.RtfFontType.HighAnsiCharactersFont)
                this.highAnsiCharactersFontName = fontName;
            else if (this.fontType == enums_1.RtfFontType.LowAnsiCharactersFont)
                this.lowAnsiCharactersFontName = fontName;
            this.recalcUseAssociatedProperties();
            this.fontType = enums_1.RtfFontType.Undefined;
        }
    };
    RtfCharacterProperties.prototype.resetUseAssociatedProperties = function () {
        this.highAnsiCharactersFontName = '';
        this.lowAnsiCharactersFontName = '';
        this.doubleByteCharactersFontName = '';
        this.useHighAnsiCharactersFontName = false;
        this.useLowAnsiCharactersFontName = false;
        this.useDoubleByteCharactersFontName = false;
    };
    RtfCharacterProperties.prototype.recalcUseAssociatedProperties = function () {
        this.useHighAnsiCharactersFontName = !string_1.StringUtils.isNullOrEmpty(this.highAnsiCharactersFontName);
        this.useLowAnsiCharactersFontName = !string_1.StringUtils.isNullOrEmpty(this.lowAnsiCharactersFontName);
        this.useDoubleByteCharactersFontName = !string_1.StringUtils.isNullOrEmpty(this.doubleByteCharactersFontName);
    };
    RtfCharacterProperties.prototype.clone = function () {
        var obj = new RtfCharacterProperties();
        obj.copyFrom(this);
        return obj;
    };
    RtfCharacterProperties.prototype.copyFrom = function (obj) {
        this.coreProperties = obj.coreProperties.clone();
        this.parentStyleIndex = obj.parentStyleIndex;
        this.fontType = obj.fontType;
        this.doubleByteCharactersFontName = obj.doubleByteCharactersFontName;
        this.lowAnsiCharactersFontName = obj.lowAnsiCharactersFontName;
        this.highAnsiCharactersFontName = obj.highAnsiCharactersFontName;
        this.useDoubleByteCharactersFontName = obj.useDoubleByteCharactersFontName;
        this.useLowAnsiCharactersFontName = obj.useLowAnsiCharactersFontName;
        this.useHighAnsiCharactersFontName = obj.useHighAnsiCharactersFontName;
        this.rtfFormattingInfo = obj.rtfFormattingInfo.clone();
    };
    return RtfCharacterProperties;
}());
exports.RtfCharacterProperties = RtfCharacterProperties;
