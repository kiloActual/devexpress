"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var code_page_character_decoder_1 = require("../../encoding/code-page-character-decoder");
var code_pages_1 = require("../../encoding/code-pages");
var rtf_import_data_1 = require("../../rtf-import-data");
var RtfFormattingInfo = (function () {
    function RtfFormattingInfo() {
        this._unicodeCharacterByteCount = 1;
        this.codePage = code_pages_1.CodePages.default;
    }
    RtfFormattingInfo.prototype.setDecoder = function (_obj) {
    };
    Object.defineProperty(RtfFormattingInfo.prototype, "unicodeCharacterByteCount", {
        get: function () { return this._unicodeCharacterByteCount; },
        set: function (value) {
            if (value < 0)
                rtf_import_data_1.RtfImportData.throwInvalidRtfFile();
            this._unicodeCharacterByteCount = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfFormattingInfo.prototype, "codePage", {
        get: function () { return this._codePage; },
        set: function (value) {
            if (this._codePage == value)
                return;
            this._codePage = value;
            this.decoder = this.chooseDecoder();
        },
        enumerable: true,
        configurable: true
    });
    RtfFormattingInfo.prototype.chooseDecoder = function () {
        return new code_page_character_decoder_1.CodePageCharacterDecoder(this.codePage);
    };
    RtfFormattingInfo.prototype.clone = function () {
        var clone = this.createEmptyClone();
        clone.copyFrom(this);
        return clone;
    };
    RtfFormattingInfo.prototype.createEmptyClone = function () {
        return new RtfFormattingInfo();
    };
    RtfFormattingInfo.prototype.copyFrom = function (info) {
        this.unicodeCharacterByteCount = info.unicodeCharacterByteCount;
        this.codePage = info.codePage;
        this.deleted = info.deleted;
    };
    return RtfFormattingInfo;
}());
exports.RtfFormattingInfo = RtfFormattingInfo;
