"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var shading_info_1 = require("../../../../../core/model/shadings/shading-info");
var shading_pattern_1 = require("../../../../../core/model/shadings/shading-pattern");
var table_cell_properties_1 = require("../../../../../core/model/tables/properties/table-cell-properties");
var table_units_1 = require("../../../../../core/model/tables/secondary-structures/table-units");
var RtfTableCellProperties = (function () {
    function RtfTableCellProperties() {
        this.shadingPattern = shading_pattern_1.ShadingPattern.Clear;
        this.preferredWidth = table_units_1.TableWidthUnit.createDefault();
        this.coreProperties = new table_cell_properties_1.TableCellProperties();
    }
    RtfTableCellProperties.prototype.copyFrom = function (obj) {
        this.coreProperties.copyFrom(obj.coreProperties);
        this.right = obj.right;
        this.horizontalMerging = obj.horizontalMerging;
        this.shadingPattern = obj.shadingPattern;
        this.foreColor = obj.foreColor;
        this.backColor = obj.backColor;
        this.verticalMerging = obj.verticalMerging;
        this.preferredWidth = obj.preferredWidth;
    };
    RtfTableCellProperties.prototype.apply = function (cell) {
        if (this.verticalMerging)
            cell.verticalMerging = this.verticalMerging;
        if (this.backColor || this.foreColor) {
            cell.properties.setValue(table_cell_properties_1.TableCellPropertyDescriptor.shadingInfo, new shading_info_1.ShadingInfo(this.shadingPattern, this.backColor ? this.backColor : cell.properties.shadingInfo.backColor, this.foreColor ? this.foreColor : cell.properties.shadingInfo.foreColor));
        }
        cell.preferredWidth = this.preferredWidth;
    };
    return RtfTableCellProperties;
}());
exports.RtfTableCellProperties = RtfTableCellProperties;
