"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var table_properties_1 = require("../../../../../core/model/tables/properties/table-properties");
var table_base_structures_1 = require("../../../../../core/model/tables/secondary-structures/table-base-structures");
var table_units_1 = require("../../../../../core/model/tables/secondary-structures/table-units");
var RtfTableProperties = (function () {
    function RtfTableProperties() {
        this.style = 0;
        this.preferredWidth = table_units_1.TableWidthUnit.createDefault();
        this.lookTypes = table_base_structures_1.TableLookTypes.None;
        this.coreProperties = new table_properties_1.TableProperties();
        this.coreProperties.layoutType = table_base_structures_1.TableLayoutType.Fixed;
        this.coreProperties.setUseValue(table_properties_1.TablePropertiesMask.UseTableLayout, true);
    }
    Object.defineProperty(RtfTableProperties.prototype, "halfSpace", {
        get: function () { return this._halfSpace; },
        set: function (value) {
            this._halfSpace = value;
            this.useHalfSpace = true;
        },
        enumerable: true,
        configurable: true
    });
    RtfTableProperties.prototype.isChanged = function () {
        return this.useHalfSpace ||
            (this.coreProperties.layoutType == table_base_structures_1.TableLayoutType.Autofit) ||
            this.coreProperties.getUseValue(table_properties_1.TablePropertiesMask.UseLeftMargin) ||
            this.coreProperties.getUseValue(table_properties_1.TablePropertiesMask.UseRightMargin) ||
            this.coreProperties.getUseValue(table_properties_1.TablePropertiesMask.UseTopMargin) ||
            this.coreProperties.getUseValue(table_properties_1.TablePropertiesMask.UseBottomMargin) ||
            this.coreProperties.getUseValue(table_properties_1.TablePropertiesMask.UseCellSpacing) ||
            this.coreProperties.getUseValue(table_properties_1.TablePropertiesMask.UseIsTableOverlap) ||
            this.coreProperties.getUseValue(table_properties_1.TablePropertiesMask.UseTableIndent) ||
            this.coreProperties.getUseValue(table_properties_1.TablePropertiesMask.UseTableStyleColBandSize) ||
            this.coreProperties.getUseValue(table_properties_1.TablePropertiesMask.UseTableStyleRowBandSize) ||
            this.coreProperties.getUseValue(table_properties_1.TablePropertiesMask.UseBottomBorder) ||
            this.coreProperties.getUseValue(table_properties_1.TablePropertiesMask.UseInsideHorizontalBorder) ||
            this.coreProperties.getUseValue(table_properties_1.TablePropertiesMask.UseInsideVerticalBorder) ||
            this.coreProperties.getUseValue(table_properties_1.TablePropertiesMask.UseLeftBorder) ||
            this.coreProperties.getUseValue(table_properties_1.TablePropertiesMask.UseRightBorder) ||
            this.coreProperties.getUseValue(table_properties_1.TablePropertiesMask.UseTopBorder);
    };
    RtfTableProperties.prototype.copyFrom = function (obj) {
        this.coreProperties.copyFrom(obj.coreProperties);
        this._halfSpace = obj._halfSpace;
        this.useHalfSpace = obj.useHalfSpace;
        this.rightToLeft = obj.rightToLeft;
        this.style = obj.style;
        this.preferredWidth = obj.preferredWidth;
        this.lookTypes = obj.lookTypes;
    };
    RtfTableProperties.prototype.apply = function (table) {
        table.lookTypes = this.lookTypes;
        table.preferredWidth = this.preferredWidth;
    };
    return RtfTableProperties;
}());
exports.RtfTableProperties = RtfTableProperties;
