"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layout_tab_space_box_1 = require("../../../../core/layout/main-structures/layout-boxes/layout-tab-space-box");
var border_info_1 = require("../../../../core/model/borders/border-info");
var paragraph_1 = require("../../../../core/model/paragraph/paragraph");
var paragraph_properties_1 = require("../../../../core/model/paragraph/paragraph-properties");
var paragraph_style_1 = require("../../../../core/model/paragraph/paragraph-style");
var shading_info_1 = require("../../../../core/model/shadings/shading-info");
var properties_bundle_1 = require("../../../../core/rich-utils/properties-bundle");
var RtfParagraphProperties = (function () {
    function RtfParagraphProperties() {
        this.coreProperties = new paragraph_properties_1.MaskedParagraphProperties();
        this.paragraphListInfo = properties_bundle_1.ParagraphListInfo.default;
        this.tabs = new paragraph_style_1.TabProperties();
        this.tabAlignment = paragraph_1.TabAlign.Left;
        this.tabLeader = layout_tab_space_box_1.TabLeaderType.None;
        this.rtfLineSpacingType = 0;
        this.rtfLineSpacingMultiplier = 1;
        this.useLineSpacingMultiplier = false;
        this.inTableParagraph = false;
        this.nestingLevel = 0;
        this.styleLink = -1;
        this.nextStyle = -1;
        this.processedBorder = new border_info_1.BorderInfo();
        this.paragraphFrameFormattingInfo = null;
    }
    Object.defineProperty(RtfParagraphProperties.prototype, "numberingListIndex", {
        get: function () { return this.paragraphListInfo.numberingListIndex; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfParagraphProperties.prototype, "listLevelIndex", {
        get: function () { return this.paragraphListInfo.listLevelIndex; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfParagraphProperties.prototype, "shadingPattern", {
        set: function (value) { this.coreProperties.setValue(paragraph_properties_1.ParagraphPropertyDescriptor.shadingInfo, new shading_info_1.ShadingInfo(value, this.coreProperties.shadingInfo.backColor, this.coreProperties.shadingInfo.foreColor)); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfParagraphProperties.prototype, "backColor", {
        set: function (value) { this.coreProperties.setValue(paragraph_properties_1.ParagraphPropertyDescriptor.shadingInfo, new shading_info_1.ShadingInfo(this.coreProperties.shadingInfo.shadingPattern, value, this.coreProperties.shadingInfo.foreColor)); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfParagraphProperties.prototype, "foreColor", {
        set: function (value) { this.coreProperties.setValue(paragraph_properties_1.ParagraphPropertyDescriptor.shadingInfo, new shading_info_1.ShadingInfo(this.coreProperties.shadingInfo.shadingPattern, this.coreProperties.shadingInfo.backColor, value)); },
        enumerable: true,
        configurable: true
    });
    RtfParagraphProperties.prototype.getCoreProperties = function () {
        this.applyLineSpacing();
        return this.coreProperties;
    };
    RtfParagraphProperties.prototype.applyLineSpacing = function () {
        this.coreProperties.setValue(paragraph_properties_1.ParagraphPropertyDescriptor.lineSpacingType, this.calcLineSpacingType());
        this.coreProperties.setValue(paragraph_properties_1.ParagraphPropertyDescriptor.lineSpacing, this.calcLineSpacing());
    };
    RtfParagraphProperties.prototype.calcLineSpacingType = function () {
        if (this.rtfLineSpacingType < 0)
            return paragraph_properties_1.ParagraphLineSpacingType.Exactly;
        if (this.rtfLineSpacingType > 0) {
            if (this.rtfLineSpacingMultiplier == 0)
                return paragraph_properties_1.ParagraphLineSpacingType.AtLeast;
            else {
                if (this.rtfLineSpacingType == 240)
                    return paragraph_properties_1.ParagraphLineSpacingType.Single;
                else if (this.rtfLineSpacingType == 360)
                    return paragraph_properties_1.ParagraphLineSpacingType.Sesquialteral;
                else if (this.rtfLineSpacingType == 480)
                    return paragraph_properties_1.ParagraphLineSpacingType.Double;
                else
                    return paragraph_properties_1.ParagraphLineSpacingType.Multiple;
            }
        }
        else {
            if (this.rtfLineSpacingMultiplier == 0 && this.useLineSpacingMultiplier)
                return paragraph_properties_1.ParagraphLineSpacingType.AtLeast;
            else
                return paragraph_properties_1.ParagraphLineSpacingType.Single;
        }
    };
    RtfParagraphProperties.prototype.calcLineSpacing = function () {
        if (this.rtfLineSpacingMultiplier == 0) {
            if (this.rtfLineSpacingType == 0 && this.useLineSpacingMultiplier)
                return 240;
            else
                return this.rtfLineSpacingType != 0 ? Math.max(Math.abs(this.rtfLineSpacingType), 1) : 0;
        }
        else {
            if (this.rtfLineSpacingType < 0)
                return Math.max(Math.abs(this.rtfLineSpacingType), 1);
            else
                return this.rtfLineSpacingType / 240.0;
        }
    };
    RtfParagraphProperties.prototype.clone = function () {
        var obj = new RtfParagraphProperties();
        obj.copyFrom(this);
        return obj;
    };
    RtfParagraphProperties.prototype.copyFrom = function (obj) {
        this.coreProperties = obj.coreProperties.clone();
        this.paragraphListInfo = obj.paragraphListInfo.clone();
        this.tabs = obj.tabs.clone();
        this.tabAlignment = obj.tabAlignment;
        this.tabLeader = obj.tabLeader;
        this.rtfLineSpacingType = obj.rtfLineSpacingType;
        this.rtfLineSpacingMultiplier = obj.rtfLineSpacingMultiplier;
        this.useLineSpacingMultiplier = obj.useLineSpacingMultiplier;
        this.inTableParagraph = obj.inTableParagraph;
        this.nestingLevel = obj.nestingLevel;
        this.styleLink = obj.styleLink ? obj.styleLink : null;
        this.nextStyle = obj.nextStyle ? obj.nextStyle : null;
        this.processedBorder = obj.processedBorder ? obj.processedBorder.clone() : null;
        this.rtfTableStyleIndexForRowOrCell = obj.rtfTableStyleIndexForRowOrCell;
        this.paragraphFrameFormattingInfo = obj.paragraphFrameFormattingInfo ? obj.paragraphFrameFormattingInfo.clone() : null;
    };
    return RtfParagraphProperties;
}());
exports.RtfParagraphProperties = RtfParagraphProperties;
