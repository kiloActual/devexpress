import { AnchorObjectTextWrapType } from '../../../../core/model/floating-objects/enums';
import { RtfShapePropertiesInfo } from '../../model/shape/shape-properties-info';
import { RtfImportData } from '../../rtf-import-data';
import { ControlCharTranslatorTable, DestinationBase } from '../base/destination';
import { DestinationType } from '../utils/destination-type';
import { DrawingObjectHorizontalPositionType, DrawingObjectVerticalPositionType } from './enums';
export declare abstract class ShapePropertiesDestinationBase extends DestinationBase {
    static distanceFromText: number;
    static trueIntValue: number;
    readonly shapeProperties: RtfShapePropertiesInfo;
    constructor(importer: RtfImportData, shapeProperties?: RtfShapePropertiesInfo);
    static getThis(rtfImporter: RtfImportData): ShapePropertiesDestinationBase;
    static onShapeId(_importer: RtfImportData, _parameterValue: number, _hasParameter: boolean): void;
    static onShapeTextKeyword(importer: RtfImportData, _parameterValue: number, _hasParameter: boolean): void;
    static onShapePropertyKeyword(importer: RtfImportData, _parameterValue: number, _hasParameter: boolean): void;
    static onShapeResultKeyword(importer: RtfImportData, _parameterValue: number, _hasParameter: boolean): void;
    static onShapeLockedKeyword(importer: RtfImportData, _parameterValue: number, _hasParameter: boolean): void;
    static onShapeWrapTextSideKeyword(importer: RtfImportData, parameterValue: number, hasParameter: boolean): void;
    static onShapeWrapTextTypeZOrderKeyword(importer: RtfImportData, parameterValue: number, hasParameter: boolean): void;
    static onShapeWrapTextTypeKeyword(importer: RtfImportData, parameterValue: number, hasParameter: boolean): void;
    static convertDrawingObjectTextWrapType(parameterValue: number): AnchorObjectTextWrapType;
    static onShapeHorizontalPositionTypePageKeyword(importer: RtfImportData, _parameterValue: number, _hasParameter: boolean): void;
    static onShapeHorizontalPositionTypeMarginKeyword(importer: RtfImportData, _parameterValue: number, _hasParameter: boolean): void;
    static onShapeHorizontalPositionTypeColumnKeyword(importer: RtfImportData, _parameterValue: number, _hasParameter: boolean): void;
    static onShapeHorizontalPositionTypeIgnoreKeyword(importer: RtfImportData, _parameterValue: number, _hasParameter: boolean): void;
    static onShapeVerticalPositionTypePageKeyword(importer: RtfImportData, _parameterValue: number, _hasParameter: boolean): void;
    static onShapeVerticalPositionTypeMarginKeyword(importer: RtfImportData, _parameterValue: number, _hasParameter: boolean): void;
    static onShapeVerticalPositionTypeParagraphKeyword(importer: RtfImportData, _parameterValue: number, _hasParameter: boolean): void;
    static onShapeVerticalPositionTypeIgnoreKeyword(importer: RtfImportData, _parameterValue: number, _hasParameter: boolean): void;
    static onShapeLeftKeyword(importer: RtfImportData, parameterValue: number, hasParameter: boolean): void;
    static onShapeTopKeyword(importer: RtfImportData, parameterValue: number, hasParameter: boolean): void;
    static onShapeRightKeyword(importer: RtfImportData, parameterValue: number, hasParameter: boolean): void;
    static onShapeBottomKeyword(importer: RtfImportData, parameterValue: number, hasParameter: boolean): void;
    static onShapeZOrderKeyword(importer: RtfImportData, parameterValue: number, hasParameter: boolean): void;
    static setDrawingObjectVerticalPositionType(shapePropertiesInfo: RtfShapePropertiesInfo, drawingObjectVerticalPositionType: DrawingObjectVerticalPositionType): void;
    static setDrawingObjectHorizontalPositionType(shapePropertiesInfo: RtfShapePropertiesInfo, drawingObjectHorizontalPositionType: DrawingObjectHorizontalPositionType): void;
    protected processControlCharCore(_ch: string): void;
    protected processCharCore(_ch: string): void;
    protected processKeywordCore(keyword: string, parameterValue: number, hasParameter: boolean): boolean;
    hasColorProperty(name: string): boolean;
    getColorPropertyValue(name: string): number;
    onShapeLeftKeyword(parameterValue: number): void;
    onShapeTopKeyword(parameterValue: number): void;
    onShapeRightKeyword(parameterValue: number): void;
    onShapeBottomKeyword(parameterValue: number): void;
    markAsShape(): void;
    protected readonly destinationType: DestinationType;
    protected readonly controlCharHT: ControlCharTranslatorTable;
}
//# sourceMappingURL=shape-properties-destination-base.d.ts.map
