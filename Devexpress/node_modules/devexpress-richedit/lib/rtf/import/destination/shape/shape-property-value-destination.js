"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var string_1 = require("@devexpress/utils/lib/utils/string");
var destination_1 = require("../base/destination");
var picture_destination_1 = require("../picture/picture-destination");
var destination_type_1 = require("../utils/destination-type");
var shape_property_hyperlink_destination_1 = require("./shape-property-hyperlink-destination");
var ShapePropertyValueDestination = (function (_super) {
    tslib_1.__extends(ShapePropertyValueDestination, _super);
    function ShapePropertyValueDestination() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.buffer = [];
        return _this;
    }
    Object.defineProperty(ShapePropertyValueDestination.prototype, "destinationType", {
        get: function () { return destination_type_1.DestinationType.ShapePropertyValueDestination; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShapePropertyValueDestination.prototype, "controlCharHT", {
        get: function () { return null; },
        enumerable: true,
        configurable: true
    });
    ShapePropertyValueDestination.prototype.processCharCore = function (ch) {
        this.buffer.push(ch);
    };
    ShapePropertyValueDestination.prototype.beforePopRtfState = function () {
        var stringValue = this.buffer.join("");
        if (string_1.StringUtils.isNullOrEmpty(stringValue))
            return;
        var numberValue = parseInt(stringValue);
        if (!isNaN(numberValue))
            this.value = numberValue;
        else
            this.value = stringValue;
    };
    ShapePropertyValueDestination.prototype.nestedGroupFinished = function (nestedDestination) {
        if (nestedDestination instanceof picture_destination_1.PictureDestination)
            this.value = nestedDestination.getImageInfo();
        else if (nestedDestination instanceof shape_property_hyperlink_destination_1.ShapePropertyHyperlinkDestination)
            this.value = nestedDestination.hyperlinkInfo;
    };
    ShapePropertyValueDestination.prototype.createClone = function () {
        var clone = new ShapePropertyValueDestination(this.importer);
        clone.buffer = this.buffer;
        return clone;
    };
    return ShapePropertyValueDestination;
}(destination_1.DestinationBase));
exports.ShapePropertyValueDestination = ShapePropertyValueDestination;
