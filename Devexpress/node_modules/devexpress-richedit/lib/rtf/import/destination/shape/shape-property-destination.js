"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var string_1 = require("@devexpress/utils/lib/utils/string");
var destination_1 = require("../base/destination");
var destination_type_1 = require("../utils/destination-type");
var shape_property_hsv_value_destination_1 = require("./shape-property-hsv-value-destination");
var shape_property_name_destination_1 = require("./shape-property-name-destination");
var shape_property_value_destination_1 = require("./shape-property-value-destination");
var ShapePropertyDestination = (function (_super) {
    tslib_1.__extends(ShapePropertyDestination, _super);
    function ShapePropertyDestination(rtfImporter, properties) {
        var _this = _super.call(this, rtfImporter) || this;
        _this.properties = properties;
        return _this;
    }
    Object.defineProperty(ShapePropertyDestination.prototype, "destinationType", {
        get: function () { return destination_type_1.DestinationType.ShapePropertyDestination; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShapePropertyDestination.prototype, "controlCharHT", {
        get: function () { return null; },
        enumerable: true,
        configurable: true
    });
    ShapePropertyDestination.prototype.processControlCharCore = function (_ch) { };
    ShapePropertyDestination.prototype.processKeywordCore = function (keyword, parameterValue, hasParameter) {
        var translator = this.keywordHT[keyword];
        if (translator) {
            translator(this.importer, parameterValue, hasParameter);
            return true;
        }
        return false;
    };
    ShapePropertyDestination.prototype.processCharCore = function (_ch) { };
    ShapePropertyDestination.prototype.createClone = function () {
        var clone = new ShapePropertyDestination(this.importer, this.properties);
        clone.propertyName = this.propertyName;
        return clone;
    };
    ShapePropertyDestination.prototype.nestedGroupFinished = function (nestedDestination) {
        if (nestedDestination instanceof shape_property_name_destination_1.ShapePropertyNameDestination) {
            this.propertyName = nestedDestination.value;
            return;
        }
        if (nestedDestination instanceof shape_property_value_destination_1.ShapePropertyValueDestination) {
            this.value = nestedDestination.value;
            return;
        }
        if (nestedDestination instanceof shape_property_hsv_value_destination_1.ShapePropertyHsvValueDestination) {
            var hsvInfo = nestedDestination.hsvInfo;
            if (typeof (this.value) == 'number')
                hsvInfo.intColor = this.value;
            this.value = hsvInfo;
            return;
        }
    };
    ShapePropertyDestination.prototype.beforePopRtfState = function () {
        if (string_1.StringUtils.isNullOrEmpty(this.propertyName))
            return;
        if (typeof (this.value) == 'number')
            this.properties.addProperty(this.propertyName, this.value);
        else
            this.properties.addProperty(this.propertyName, this.value);
    };
    return ShapePropertyDestination;
}(destination_1.DestinationBase));
exports.ShapePropertyDestination = ShapePropertyDestination;
