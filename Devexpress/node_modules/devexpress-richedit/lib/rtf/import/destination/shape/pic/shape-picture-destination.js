"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var rtf_drawing_keywords_1 = require("../../../../translation-table/rtf-drawing-keywords");
var shape_type_code_1 = require("../../../model/shape/shape-type-code");
var destination_1 = require("../../base/destination");
var picture_destination_1 = require("../../picture/picture-destination");
var destination_type_1 = require("../../utils/destination-type");
var ShapePictureDestination = (function (_super) {
    tslib_1.__extends(ShapePictureDestination, _super);
    function ShapePictureDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ShapePictureDestination.prototype, "destinationType", {
        get: function () { return destination_type_1.DestinationType.ShapePictureDestination; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShapePictureDestination.prototype, "controlCharHT", {
        get: function () { return null; },
        enumerable: true,
        configurable: true
    });
    ShapePictureDestination.onPictKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new picture_destination_1.PictureDestination(importer);
    };
    ShapePictureDestination.prototype.createClone = function () {
        return new ShapePictureDestination(this.importer);
    };
    ShapePictureDestination.prototype.nestedGroupFinished = function (nestedDestination) {
        if (nestedDestination instanceof picture_destination_1.PictureDestination) {
            this.imageInfo = nestedDestination.getImageInfo();
            this.shapeProperties = nestedDestination.info.properties;
        }
    };
    ShapePictureDestination.prototype.beforePopRtfState = function () {
        this.prepareInfo();
        this.importer.importers.image.insertImageShape(this.imageInfo, this.shapeProperties);
    };
    ShapePictureDestination.prototype.prepareInfo = function () {
        if (!this.imageInfo || !this.imageInfo.actualSize)
            return;
        this.shapeProperties.addProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.ShapeLeft, 0);
        this.shapeProperties.addProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.ShapeRight, this.imageInfo.actualSize.width);
        this.shapeProperties.addProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.ShapeTop, 0);
        this.shapeProperties.addProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.ShapeBottom, this.imageInfo.actualSize.height);
        this.shapeProperties.addProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.ShapeType, shape_type_code_1.ShapeTypeCode.PictureFrame);
        this.shapeProperties.addProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.PseudoInline, ShapePictureDestination.trueIntValue);
        this.shapeProperties.addProperty(rtf_drawing_keywords_1.RtfDrawingKeywords.PictureBinaryData, this.imageInfo);
    };
    ShapePictureDestination.trueIntValue = 1;
    return ShapePictureDestination;
}(destination_1.DestinationBase));
exports.ShapePictureDestination = ShapePictureDestination;
