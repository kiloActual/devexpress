"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var constants_1 = require("@devexpress/utils/lib/constants");
var string_1 = require("@devexpress/utils/lib/utils/string");
var rtf_content_exporter_1 = require("../../../translation-table/rtf-content-exporter");
var import_range_permission_info_1 = require("../../model/range-permission/import-range-permission-info");
var string_value_destination_1 = require("../base/string-value-destination");
var destination_type_1 = require("../utils/destination-type");
var RangePermissionDestinationBase = (function (_super) {
    tslib_1.__extends(RangePermissionDestinationBase, _super);
    function RangePermissionDestinationBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(RangePermissionDestinationBase.prototype, "destinationType", {
        get: function () { return destination_type_1.DestinationType.RangePermissionDestinationBase; },
        enumerable: true,
        configurable: true
    });
    RangePermissionDestinationBase.prototype.afterPopRtfState = function () {
        var data = string_1.StringUtils.trim(this.value);
        if (!string_1.StringUtils.isNullOrEmpty(data) && data.length == 16) {
            var rangePermission = this.importer.importers.rangePermission.rangePermissions[data];
            if (!rangePermission) {
                rangePermission = new import_range_permission_info_1.ImportRangePermissionInfo();
                rangePermission.userName = this.obtainUserName(data);
                rangePermission.group = this.obtainGroupName(data);
                this.importer.importers.rangePermission.rangePermissions[data] = rangePermission;
            }
            this.assignRangePermissionPosition(rangePermission);
        }
    };
    RangePermissionDestinationBase.prototype.obtainUserName = function (data) {
        var value = this.obtainUserId(data);
        return this.importer.importers.rangePermission.getUserNameById(value);
    };
    RangePermissionDestinationBase.prototype.obtainGroupName = function (data) {
        var value = this.obtainUserId(data);
        var result = rtf_content_exporter_1.RtfContentExporter.predefinedUserGroups[value];
        return result != undefined ? result : "";
    };
    RangePermissionDestinationBase.prototype.obtainUserId = function (data) {
        var valueLow = parseInt(data.substr(0, 2), 16);
        if (isNaN(valueLow))
            return constants_1.Constants.MIN_SAFE_INTEGER;
        var valueHigh = parseInt(data.substr(2, 2), 16);
        if (isNaN(valueHigh))
            return constants_1.Constants.MIN_SAFE_INTEGER;
        return (valueHigh << 8) | valueLow;
    };
    return RangePermissionDestinationBase;
}(string_value_destination_1.StringValueDestination));
exports.RangePermissionDestinationBase = RangePermissionDestinationBase;
