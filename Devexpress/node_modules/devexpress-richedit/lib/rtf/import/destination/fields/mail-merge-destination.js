"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var destination_1 = require("../base/destination");
var string_property_base_destination_1 = require("../base/string-property-base-destination");
var destination_type_1 = require("../utils/destination-type");
var field_map_data_destination_1 = require("./field-map-data-destination");
var MailMergeProperties = (function () {
    function MailMergeProperties() {
    }
    return MailMergeProperties;
}());
exports.MailMergeProperties = MailMergeProperties;
var MailMergeDestination = (function (_super) {
    tslib_1.__extends(MailMergeDestination, _super);
    function MailMergeDestination() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.mmProps = new MailMergeProperties();
        return _this;
    }
    Object.defineProperty(MailMergeDestination.prototype, "destinationType", {
        get: function () { return destination_type_1.DestinationType.MailMergeDestination; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MailMergeDestination.prototype, "controlCharHT", {
        get: function () { return null; },
        enumerable: true,
        configurable: true
    });
    MailMergeDestination.onConnectionStringKeyword = function (importer, _parameterValue, _hasParameter) {
        var properties = importer.destination.mmProps;
        importer.destination = new string_property_base_destination_1.StringPropertyBaseDestination(importer, function (value) {
            properties.connectionString = value;
        });
    };
    MailMergeDestination.onQueryKeyword = function (importer, _parameterValue, _hasParameter) {
        var properties = importer.destination.mmProps;
        importer.destination = new string_property_base_destination_1.StringPropertyBaseDestination(importer, function (value) {
            properties.query = value;
        });
    };
    MailMergeDestination.onDataSourceKeyword = function (importer, _parameterValue, _hasParameter) {
        var properties = importer.destination.mmProps;
        importer.destination = new string_property_base_destination_1.StringPropertyBaseDestination(importer, function (value) {
            properties.dataSource = value;
        });
    };
    MailMergeDestination.onFieldMapDataKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new field_map_data_destination_1.FieldMapDataDestination(importer);
    };
    MailMergeDestination.prototype.createClone = function () {
        return new MailMergeDestination(this.importer);
    };
    return MailMergeDestination;
}(destination_1.DestinationBase));
exports.MailMergeDestination = MailMergeDestination;
