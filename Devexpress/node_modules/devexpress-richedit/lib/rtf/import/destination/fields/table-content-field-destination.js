"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var destination_type_1 = require("../utils/destination-type");
var enums_1 = require("./enums");
var field_sub_destination_1 = require("./field-sub-destination");
var TableContentFieldDestination = (function (_super) {
    tslib_1.__extends(TableContentFieldDestination, _super);
    function TableContentFieldDestination(importer, createField) {
        var _this = _super.call(this, importer) || this;
        if (!createField)
            return _this;
        _this.insertTextCore(TableContentFieldDestination.tcFieldName);
        return _this;
    }
    Object.defineProperty(TableContentFieldDestination.prototype, "destinationType", {
        get: function () { return destination_type_1.DestinationType.TableContentFieldDestination; },
        enumerable: true,
        configurable: true
    });
    TableContentFieldDestination.prototype.tableOfContentsEntryLevelNumberKeyword = function (parameterValue, hasParameter) {
        this.closeQuotes();
        _super.prototype.tableOfContentsEntryLevelNumberKeyword.call(this, parameterValue, hasParameter);
        this.insertSpace();
    };
    TableContentFieldDestination.prototype.tableOfContentsEntryTypeTableKeyword = function (parameterValue, hasParameter) {
        this.closeQuotes();
        _super.prototype.tableOfContentsEntryTypeTableKeyword.call(this, parameterValue, hasParameter);
        this.insertSpace();
    };
    TableContentFieldDestination.prototype.processTextCore = function (text) {
        this.openQuotes();
        _super.prototype.processTextCore.call(this, text);
    };
    TableContentFieldDestination.prototype.createInstance = function () {
        return this.importer.createTableContentFieldDestination(false);
    };
    TableContentFieldDestination.prototype.onDestinationClose = function () {
        this.openQuotes();
        this.closeQuotes();
        var info = this.importer.importers.field.fields.pop();
        info.insertInstructionBeforeFieldCode = !this.importer.importers.character.characterFormatting.coreProperties.hidden;
        this.importer.importers.field.TCFieldState = enums_1.TCFieldState.None;
    };
    TableContentFieldDestination.prototype.openQuotes = function () {
        if (this.importer.importers.field.TCFieldState == enums_1.TCFieldState.None) {
            this.importer.importers.field.TCFieldState = enums_1.TCFieldState.QuotesOpened;
            this.insertTextCore(TableContentFieldDestination.quote);
        }
    };
    TableContentFieldDestination.prototype.closeQuotes = function () {
        if (this.importer.importers.field.TCFieldState == enums_1.TCFieldState.QuotesOpened) {
            this.insertTextCore(TableContentFieldDestination.quote);
            this.importer.importers.field.TCFieldState = enums_1.TCFieldState.QuotesClosed;
        }
    };
    TableContentFieldDestination.prototype.insertSpace = function () {
        if (this.importer.importers.field.TCFieldState == enums_1.TCFieldState.None)
            this.insertTextCore(TableContentFieldDestination.space);
    };
    TableContentFieldDestination.tcFieldName = "tc ";
    TableContentFieldDestination.quote = "\"";
    TableContentFieldDestination.space = " ";
    return TableContentFieldDestination;
}(field_sub_destination_1.FieldSubDestination));
exports.TableContentFieldDestination = TableContentFieldDestination;
