"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var check_box_properties_1 = require("../../../../core/model/fields/check-box-properties");
var destination_type_1 = require("../utils/destination-type");
var field_status_bar_text_destination_1 = require("./field-status-bar-text-destination");
var field_sub_destination_1 = require("./field-sub-destination");
var form_field_entry_macro_destination_1 = require("./form-field-entry-macro-destination");
var form_field_exit_macro_destination_1 = require("./form-field-exit-macro-destination");
var form_field_help_text_destination_1 = require("./form-field-help-text-destination");
var form_field_name_destination_1 = require("./form-field-name-destination");
var FormFieldDestination = (function (_super) {
    tslib_1.__extends(FormFieldDestination, _super);
    function FormFieldDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(FormFieldDestination.prototype, "destinationType", {
        get: function () { return destination_type_1.DestinationType.FormFieldDestination; },
        enumerable: true,
        configurable: true
    });
    FormFieldDestination.prototype.createInstance = function () {
        return new FormFieldDestination(this.importer);
    };
    FormFieldDestination.getFormFieldProperties = function (importer) {
        return importer.importers.field.fields.peek().formFieldProperties;
    };
    FormFieldDestination.getCheckBoxProperties = function (importer) {
        return importer.importers.field.fields.peek().checkBoxProperties;
    };
    FormFieldDestination.onFormFieldTypeKeyword = function (importer, parameterValue, _hasParameter) {
        if (parameterValue == 1)
            importer.importers.field.fields.peek().checkBoxProperties = new check_box_properties_1.CheckBoxProperties();
    };
    FormFieldDestination.onFormFieldListFieldResultKeyword = function (importer, parameterValue, _hasParameter) {
        var checkBoxProperties = FormFieldDestination.getCheckBoxProperties(importer);
        if (checkBoxProperties != null)
            checkBoxProperties.checkBoxState = parameterValue;
    };
    FormFieldDestination.onFormFieldProtectedKeyword = function (importer, _parameterValue, _hasParameter) {
        FormFieldDestination.getFormFieldProperties(importer).enabled = false;
    };
    FormFieldDestination.onFormFieldCheckBoxFieldSizeTypeKeyword = function (importer, parameterValue, _hasParameter) {
        var checkBoxProperties = FormFieldDestination.getCheckBoxProperties(importer);
        if (checkBoxProperties != null)
            checkBoxProperties.sizeType = parameterValue;
    };
    FormFieldDestination.onFormFieldCalculatedOnExitKeyword = function (importer, _parameterValue, _hasParameter) {
        FormFieldDestination.getFormFieldProperties(importer).calculateOnExit = true;
    };
    FormFieldDestination.onFormFieldCheckBoxFieldSizeKeyword = function (importer, parameterValue, _hasParameter) {
        var checkBoxProperties = FormFieldDestination.getCheckBoxProperties(importer);
        if (checkBoxProperties != null)
            checkBoxProperties.size = parameterValue;
    };
    FormFieldDestination.onFormFieldNameKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new form_field_name_destination_1.FormFieldNameDestination(importer);
    };
    FormFieldDestination.onFormFieldListFieldDefaultKeyword = function (importer, parameterValue, _hasParameter) {
        var checkBoxProperties = FormFieldDestination.getCheckBoxProperties(importer);
        if (checkBoxProperties != null)
            checkBoxProperties.defaultState = parameterValue != 0;
    };
    FormFieldDestination.onFormFieldHelpTextCustomKeyword = function (importer, _parameterValue, _hasParameter) {
        FormFieldDestination.getFormFieldProperties(importer).helpTextType = check_box_properties_1.FormFieldTextType.Custom;
    };
    FormFieldDestination.onFormFieldHelpTextKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new form_field_help_text_destination_1.FormFieldHelpTextDestination(importer);
    };
    FormFieldDestination.onFormFieldStatusBarTextCustomKeyword = function (importer, _parameterValue, _hasParameter) {
        FormFieldDestination.getFormFieldProperties(importer).statusTextType = check_box_properties_1.FormFieldTextType.Custom;
    };
    FormFieldDestination.onFormFieldStatusBarTextKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new field_status_bar_text_destination_1.FieldStatusBarTextDestination(importer);
    };
    FormFieldDestination.onFormFieldEntryMacroKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new form_field_entry_macro_destination_1.FormFieldEntryMacroDestination(importer);
    };
    FormFieldDestination.onFormFieldExitMacroKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new form_field_exit_macro_destination_1.FormFieldExitMacroDestination(importer);
    };
    return FormFieldDestination;
}(field_sub_destination_1.FieldSubDestination));
exports.FormFieldDestination = FormFieldDestination;
