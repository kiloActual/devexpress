"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var destination_1 = require("./base/destination");
var destination_type_1 = require("./utils/destination-type");
var DestinationRevisionAuthorTable = (function (_super) {
    tslib_1.__extends(DestinationRevisionAuthorTable, _super);
    function DestinationRevisionAuthorTable() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.author = "";
        return _this;
    }
    Object.defineProperty(DestinationRevisionAuthorTable.prototype, "destinationType", {
        get: function () { return destination_type_1.DestinationType.DestinationRevisionAuthorTable; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DestinationRevisionAuthorTable.prototype, "controlCharHT", {
        get: function () { return null; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DestinationRevisionAuthorTable.prototype, "keywordHT", {
        get: function () { return null; },
        enumerable: true,
        configurable: true
    });
    DestinationRevisionAuthorTable.prototype.processCharCore = function (ch) {
        if (ch == ';') {
            this.importer.importers.rangePermission.revisionAuthors.authors.push(this.author);
            this.author = "";
        }
        else
            this.author += ch;
    };
    DestinationRevisionAuthorTable.prototype.createClone = function () {
        return new DestinationRevisionAuthorTable(this.importer);
    };
    return DestinationRevisionAuthorTable;
}(destination_1.DestinationBase));
exports.DestinationRevisionAuthorTable = DestinationRevisionAuthorTable;
