"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var string_1 = require("@devexpress/utils/lib/utils/string");
var string_value_destination_1 = require("./base/string-value-destination");
var destination_type_1 = require("./utils/destination-type");
var DocumentVariableDestination = (function (_super) {
    tslib_1.__extends(DocumentVariableDestination, _super);
    function DocumentVariableDestination() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isNameRead = true;
        return _this;
    }
    Object.defineProperty(DocumentVariableDestination.prototype, "destinationType", {
        get: function () { return destination_type_1.DestinationType.DocumentVariableDestination; },
        enumerable: true,
        configurable: true
    });
    DocumentVariableDestination.prototype.createEmptyClone = function () {
        return new DocumentVariableDestination(this.importer);
    };
    DocumentVariableDestination.prototype.afterPopRtfState = function () {
        _super.prototype.afterPopRtfState.call(this);
        if (!string_1.StringUtils.isNullOrEmpty(this.name) && !string_1.StringUtils.isNullOrEmpty(this.ownValue))
            this.importer.documentModel.docVariables.addValue(this.name, this.ownValue);
    };
    DocumentVariableDestination.prototype.nestedGroupFinished = function (nestedDestination) {
        _super.prototype.nestedGroupFinished.call(this, nestedDestination);
        if (!(nestedDestination instanceof DocumentVariableDestination))
            return;
        var nestedValue = string_1.StringUtils.trim(nestedDestination.value);
        if (this.isNameRead) {
            this.name = nestedValue;
            this.isNameRead = false;
        }
        else
            this.ownValue = nestedValue;
    };
    return DocumentVariableDestination;
}(string_value_destination_1.StringValueDestination));
exports.DocumentVariableDestination = DocumentVariableDestination;
