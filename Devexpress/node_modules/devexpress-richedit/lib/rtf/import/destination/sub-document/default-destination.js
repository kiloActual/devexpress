"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var enums_1 = require("../../../../core/model/character/enums");
var json_document_enums_1 = require("../../../../core/model/json/enums/json-document-enums");
var rich_utils_1 = require("../../../../core/model/rich-utils");
var enums_2 = require("../../../../core/model/section/enums");
var rtf_list_converter_1 = require("../../model/numbering-lists/rtf-list-converter");
var skip_destination_1 = require("../base/skip-destination");
var custom_properties_destination_1 = require("../custom-properties-destination");
var info_destination_1 = require("../info/info-destination");
var list_override_table_destination_1 = require("../numbering-list/list-override-table-destination");
var list_table_destination_1 = require("../numbering-list/list-table-destination");
var page_background_destination_1 = require("../page-background-destination");
var default_character_properties_destination_1 = require("../properties/default-character-properties-destination");
var default_paragraph_properties_destination_1 = require("../properties/default-paragraph-properties-destination");
var style_sheet_destination_1 = require("../styles/style-sheet-destination");
var destination_type_1 = require("../utils/destination-type");
var destination_sub_document_1 = require("./destination-sub-document");
var DefaultDestination = (function (_super) {
    tslib_1.__extends(DefaultDestination, _super);
    function DefaultDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DefaultDestination.prototype, "destinationType", {
        get: function () { return destination_type_1.DestinationType.DefaultDestination; },
        enumerable: true,
        configurable: true
    });
    DefaultDestination.onDeffKeyword = function (importer, parameterValue, _hasParameter) {
        importer.importers.font.defaultFontNumber = parameterValue;
    };
    DefaultDestination.onInfoKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new info_destination_1.InfoDestination(importer);
    };
    DefaultDestination.onUserPropKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new custom_properties_destination_1.CustomPropertiesDestination(importer);
    };
    DefaultDestination.onDefaultCharacterPropertiesKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new default_character_properties_destination_1.DefaultCharacterPropertiesDestination(importer);
    };
    DefaultDestination.onDefaultParagraphPropertiesKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new default_paragraph_properties_destination_1.DefaultParagraphPropertiesDestination(importer);
    };
    DefaultDestination.onPageBackground = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new page_background_destination_1.PageBackgroundDestination(importer);
    };
    DefaultDestination.onThemeData = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new skip_destination_1.SkipDestination(importer);
    };
    DefaultDestination.onColorsSchemeMapping = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new skip_destination_1.SkipDestination(importer);
    };
    DefaultDestination.onNoFeatureThrottle = function (importer, parameterValue, _hasParameter) {
        importer.importerOptions.enableNotCompatibleUIFunctionality = parameterValue == 1;
    };
    DefaultDestination.onNoUICompat = function (importer, _parameterValue, _hasParameter) {
        importer.importerOptions.enableNotCompatibleUIFunctionality = true;
    };
    DefaultDestination.onDefaultTabKeyword = function (importer, parameterValue, hasParameter) {
        if (!hasParameter || parameterValue <= 0)
            parameterValue = 720;
        importer.documentModel.defaultTabWidth = parameterValue;
    };
    DefaultDestination.onRemovePersonalInformation = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onEnforceDocumentProtection = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onFormProtection = function (importer, _parameterValue, _hasParameter) {
        var protectionProperties = importer.documentModel.documentProtectionProperties;
        protectionProperties.enforceProtection = true;
        protectionProperties.protectionType = json_document_enums_1.DocumentProtectionType.ReadOnly;
    };
    DefaultDestination.onRevisionProtection = function (importer, _parameterValue, _hasParameter) {
        var protectionProperties = importer.documentModel.documentProtectionProperties;
        protectionProperties.enforceProtection = true;
        protectionProperties.protectionType = json_document_enums_1.DocumentProtectionType.TrackedChanges;
    };
    DefaultDestination.onAnnotationProtection = function (importer, _parameterValue, _hasParameter) {
        var protectionProperties = importer.documentModel.documentProtectionProperties;
        protectionProperties.enforceProtection = true;
        protectionProperties.protectionType = json_document_enums_1.DocumentProtectionType.AllowComments;
    };
    DefaultDestination.onReadOnlyProtection = function (importer, _parameterValue, _hasParameter) {
        var protectionProperties = importer.documentModel.documentProtectionProperties;
        if (!protectionProperties.enforceProtection)
            return;
        protectionProperties.protectionType = json_document_enums_1.DocumentProtectionType.ReadOnly;
    };
    DefaultDestination.onDocumentProtectionLevel = function (importer, parameterValue, hasParameter) {
        var protectionProperties = importer.documentModel.documentProtectionProperties;
        if (!hasParameter || protectionProperties.protectionType != json_document_enums_1.DocumentProtectionType.None)
            return;
        switch (parameterValue) {
            case 0:
                protectionProperties.protectionType = json_document_enums_1.DocumentProtectionType.TrackedChanges;
                break;
            case 1:
                protectionProperties.protectionType = json_document_enums_1.DocumentProtectionType.AllowComments;
                break;
            case 2:
            case 3:
                protectionProperties.protectionType = json_document_enums_1.DocumentProtectionType.ReadOnly;
                break;
            case 7:
                protectionProperties.protectionType = json_document_enums_1.DocumentProtectionType.None;
                break;
        }
    };
    DefaultDestination.onPageBreakKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.parseCharWithoutDecoding(rich_utils_1.RichUtils.specialCharacters.PageBreak);
    };
    DefaultDestination.onColumnBreakKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.parseCharWithoutDecoding(rich_utils_1.RichUtils.specialCharacters.ColumnBreak);
    };
    DefaultDestination.onPaperWidthKeyword = function (importer, parameterValue, hasParameter) {
        if (!hasParameter)
            parameterValue = 12240;
        var value = parameterValue;
        importer.importers.section.defaultSectionProperties.coreProperties.pageWidth = value;
        importer.importers.section.currentProperties.coreProperties.pageWidth = value;
    };
    DefaultDestination.onPaperHeightKeyword = function (importer, parameterValue, hasParameter) {
        if (!hasParameter)
            parameterValue = 15840;
        var value = parameterValue;
        importer.importers.section.defaultSectionProperties.coreProperties.pageHeight = value;
        importer.importers.section.currentProperties.coreProperties.pageHeight = value;
    };
    DefaultDestination.onPaperSizeKeyword = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onLandscapeKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.importers.section.defaultSectionProperties.coreProperties.landscape = true;
        importer.importers.section.currentProperties.coreProperties.landscape = true;
    };
    DefaultDestination.onGutterKeyword = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onLeftMarginKeyword = function (importer, parameterValue, hasParameter) {
        if (!hasParameter)
            parameterValue = 1800;
        var value = parameterValue;
        importer.importers.section.defaultSectionProperties.coreProperties.marginLeft = value;
        importer.importers.section.currentProperties.coreProperties.marginLeft = value;
    };
    DefaultDestination.onRightMarginKeyword = function (importer, parameterValue, hasParameter) {
        if (!hasParameter)
            parameterValue = 1800;
        var value = parameterValue;
        importer.importers.section.defaultSectionProperties.coreProperties.marginRight = value;
        importer.importers.section.currentProperties.coreProperties.marginRight = value;
    };
    DefaultDestination.onTopMarginKeyword = function (importer, parameterValue, hasParameter) {
        if (!hasParameter)
            parameterValue = 1440;
        var value = parameterValue;
        importer.importers.section.defaultSectionProperties.coreProperties.marginTop = value;
        importer.importers.section.currentProperties.coreProperties.marginTop = value;
    };
    DefaultDestination.onBottomMarginKeyword = function (importer, parameterValue, hasParameter) {
        if (!hasParameter)
            parameterValue = 1440;
        var value = parameterValue;
        importer.importers.section.defaultSectionProperties.coreProperties.marginBottom = value;
        importer.importers.section.currentProperties.coreProperties.marginBottom = value;
    };
    DefaultDestination.onGutterAtRight = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingStart = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageFacing = function (importer, _parameterValue, _hasParameter) {
        importer.documentModel.differentOddAndEvenPages = true;
    };
    DefaultDestination.onNoColumnBalance = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onDoNotAlignTableRowsIndependently = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onDoNotExpandShiftReturn = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSplitPageBreakAndParagraphMark = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onAllowTablesToExtendIntoMargin = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onDisplayBackgroundShape = function (importer, parameterValue, _hasParameter) {
        importer.documentModel.displayBackgroundShape = parameterValue == 1 ? true : false;
    };
    DefaultDestination.onPageNumberingDecimal = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingUpperRoman = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingLowerRoman = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingUpperLetter = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingLowerLetter = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingArabicAbjad = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingArabicAlpha = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingChosung = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingDecimalEnclosedCircle = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingDecimalFullWidth = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingGanada = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingHindiVowels = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingHindiConsonants = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingHindiNumbers = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingHindiDescriptive = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingThaiLetters = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingThaiNumbers = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingThaiDescriptive = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingVietnameseDescriptive = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingChapterHeaderStyle = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingChapterSeparatorHyphen = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingChapterSeparatorPeriod = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingChapterSeparatorColon = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingChapterSeparatorEmDash = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onPageNumberingChapterSeparatorEnDash = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onVerticalTextAlignmentBottom = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onVerticalTextAlignmentTop = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onVerticalTextAlignmentCenter = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onVerticalTextAlignmentJustify = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionPageNumberingStart = function (importer, parameterValue, hasParameter) {
        if (!hasParameter)
            parameterValue = 1;
        importer.importers.section.currentProperties.pageNumbering.firstPageNumber = parameterValue;
        importer.importers.section.currentProperties.pageNumbering.continueNumbering = false;
    };
    DefaultDestination.onSectionPageNumberingContinuous = function (importer, _parameterValue, _hasParameter) {
        importer.importers.section.currentProperties.restartPageNumbering = false;
    };
    DefaultDestination.onSectionPageNumberingRestart = function (importer, _parameterValue, _hasParameter) {
        importer.importers.section.currentProperties.restartPageNumbering = true;
    };
    DefaultDestination.onSectionTextFlow = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onLineNumberingStep = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onLineNumberingDistance = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onLineNumberingStartingLineNumber = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onLineNumberingRestart = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onLineNumberingRestartOnEachPage = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onLineNumberingContinuous = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionPaperWidth = function (importer, parameterValue, _hasParameter) {
        importer.importers.section.currentProperties.coreProperties.pageWidth = parameterValue;
    };
    DefaultDestination.onSectionPaperHeight = function (importer, parameterValue, _hasParameter) {
        importer.importers.section.currentProperties.coreProperties.pageHeight = parameterValue;
    };
    DefaultDestination.onSectionLandscape = function (importer, _parameterValue, _hasParameter) {
        importer.importers.section.currentProperties.coreProperties.landscape = true;
    };
    DefaultDestination.onSectionLeftMargin = function (importer, parameterValue, _hasParameter) {
        importer.importers.section.currentProperties.coreProperties.marginLeft = parameterValue;
    };
    DefaultDestination.onSectionRightMargin = function (importer, parameterValue, _hasParameter) {
        importer.importers.section.currentProperties.coreProperties.marginRight = parameterValue;
    };
    DefaultDestination.onSectionTopMargin = function (importer, parameterValue, _hasParameter) {
        importer.importers.section.currentProperties.coreProperties.marginTop = parameterValue;
    };
    DefaultDestination.onSectionBottomMargin = function (importer, parameterValue, _hasParameter) {
        importer.importers.section.currentProperties.coreProperties.marginBottom = parameterValue;
    };
    DefaultDestination.onSectionGutter = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionHeaderOffset = function (importer, parameterValue, hasParameter) {
        if (!hasParameter)
            parameterValue = 720;
        importer.importers.section.currentProperties.coreProperties.headerOffset = parameterValue;
    };
    DefaultDestination.onSectionFooterOffset = function (importer, parameterValue, hasParameter) {
        if (!hasParameter)
            parameterValue = 720;
        importer.importers.section.currentProperties.coreProperties.footerOffset = parameterValue;
    };
    DefaultDestination.onSectionFirstPagePaperSource = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionOtherPagePaperSource = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onOnlyAllowEditingOfFormFields = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionColumnCount = function (importer, parameterValue, hasParameter) {
        if (!hasParameter)
            parameterValue = 1;
        importer.importers.section.currentProperties.coreProperties.columnCount = parameterValue;
        importer.importers.section.currentProperties.coreProperties.equalWidthColumns = true;
    };
    DefaultDestination.onSectionColumnSpace = function (importer, parameterValue, hasParameter) {
        if (!hasParameter)
            parameterValue = 720;
        importer.importers.section.currentProperties.coreProperties.space = parameterValue;
        importer.importers.section.currentProperties.coreProperties.equalWidthColumns = true;
    };
    DefaultDestination.onSectionCurrentColumnIndex = function (importer, parameterValue, _hasParameter) {
        importer.importers.section.currentProperties.currentColumnIndex = parameterValue - 1;
        importer.importers.section.currentProperties.coreProperties.equalWidthColumns = false;
    };
    DefaultDestination.onSectionCurrentColumnSpace = function (importer, parameterValue, _hasParameter) {
        importer.importers.section.currentProperties.setCurrentColumnSpace(parameterValue);
        importer.importers.section.currentProperties.coreProperties.equalWidthColumns = false;
    };
    DefaultDestination.onSectionCurrentColumnWidth = function (importer, parameterValue, _hasParameter) {
        importer.importers.section.currentProperties.setCurrentColumnWidth(parameterValue);
        importer.importers.section.currentProperties.coreProperties.equalWidthColumns = false;
    };
    DefaultDestination.onSectionDrawVerticalSeparator = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionBreakNone = function (importer, _parameterValue, _hasParameter) {
        importer.importers.section.currentProperties.coreProperties.startType = enums_2.SectionStartType.Continuous;
    };
    DefaultDestination.onSectionBreakColumn = function (importer, _parameterValue, _hasParameter) {
        importer.importers.section.currentProperties.coreProperties.startType = enums_2.SectionStartType.Column;
    };
    DefaultDestination.onSectionBreakPage = function (importer, _parameterValue, _hasParameter) {
        importer.importers.section.currentProperties.coreProperties.startType = enums_2.SectionStartType.NextPage;
    };
    DefaultDestination.onSectionBreakEvenPage = function (importer, _parameterValue, _hasParameter) {
        importer.importers.section.currentProperties.coreProperties.startType = enums_2.SectionStartType.EvenPage;
    };
    DefaultDestination.onSectionBreakOddPage = function (importer, _parameterValue, _hasParameter) {
        importer.importers.section.currentProperties.coreProperties.startType = enums_2.SectionStartType.OddPage;
    };
    DefaultDestination.onSectionDefault = function (importer, _parameterValue, _hasParameter) {
        importer.importers.section.currentProperties.copyFrom(importer.importers.section.defaultSectionProperties);
    };
    DefaultDestination.onNewSection = function (importer, _parameterValue, _hasParameter) {
        importer.importers.section.insertSection();
        importer.importers.table.tableReader.resetState();
    };
    DefaultDestination.onHeaderKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.importers.section.insertHeaderFooter(true, enums_2.HeaderFooterType.Odd);
    };
    DefaultDestination.onHeaderForLeftPagesKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.importers.section.insertHeaderFooter(true, enums_2.HeaderFooterType.Even);
    };
    DefaultDestination.onHeaderForRightPagesKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.importers.section.insertHeaderFooter(true, enums_2.HeaderFooterType.Odd);
    };
    DefaultDestination.onHeaderForFirstPageKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.importers.section.insertHeaderFooter(true, enums_2.HeaderFooterType.First);
    };
    DefaultDestination.onFooterKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.importers.section.insertHeaderFooter(false, enums_2.HeaderFooterType.Odd);
    };
    DefaultDestination.onFooterForLeftPagesKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.importers.section.insertHeaderFooter(false, enums_2.HeaderFooterType.Even);
    };
    DefaultDestination.onFooterForRightPagesKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.importers.section.insertHeaderFooter(false, enums_2.HeaderFooterType.Odd);
    };
    DefaultDestination.onFooterForFirstPageKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.importers.section.insertHeaderFooter(false, enums_2.HeaderFooterType.First);
    };
    DefaultDestination.onSectionDifferentFirstPage = function (importer, _parameterValue, _hasParameter) {
        importer.importers.section.currentProperties.coreProperties.differentFirstPage = true;
    };
    DefaultDestination.onListTableKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new list_table_destination_1.ListTableDestination(importer);
        importer.importers.character.characterFormatting.coreProperties.useValue = enums_1.CharacterPropertiesMask.UseNone;
    };
    DefaultDestination.onListOverrideTableKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new list_override_table_destination_1.ListOverrideTableDestination(importer);
        importer.importers.character.characterFormatting.coreProperties.useValue = enums_1.CharacterPropertiesMask.UseNone;
    };
    DefaultDestination.onLtrSectionKeyword = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onRtlSectionKeyword = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionFootNotePlacementBelowText = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionFootNotePlacementPageBottom = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionFootNoteNumberingStart = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionFootNoteNumberingRestartEachPage = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionFootNoteNumberingRestartEachSection = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionFootNoteNumberingRestartContinuous = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionFootNoteNumberingDecimal = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionFootNoteNumberingLowerCaseLetter = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionFootNoteNumberingUpperCaseLetter = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionFootNoteNumberingLowerCaseRoman = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionFootNoteNumberingUpperCaseRoman = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionFootNoteNumberingChicago = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionFootNoteNumberingChosung = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionFootNoteNumberingDecimalEnclosedCircle = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionFootNoteNumberingDecimalFullWidth = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionFootNoteNumberingGanada = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionEndNoteNumberingStart = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionEndNoteNumberingRestartEachSection = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionEndNoteNumberingRestartContinuous = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionEndNoteNumberingDecimal = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionEndNoteNumberingLowerCaseLetter = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionEndNoteNumberingUpperCaseLetter = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionEndNoteNumberingLowerCaseRoman = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionEndNoteNumberingUpperCaseRoman = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionEndNoteNumberingChicago = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionEndNoteNumberingChosung = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionEndNoteNumberingDecimalEnclosedCircle = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionEndNoteNumberingDecimalFullWidth = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onSectionEndNoteNumberingGanada = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onFootNotePlacementEndOfSection = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onFootNotePlacementEndOfDocument = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onFootNotePlacementBelowText = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onFootNotePlacementPageBottom = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onFootNoteNumberingStart = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onFootNoteNumberingRestartEachPage = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onFootNoteNumberingRestartEachSection = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onFootNoteNumberingRestartContinuous = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onFootNoteNumberingDecimal = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onFootNoteNumberingLowerCaseLetter = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onFootNoteNumberingUpperCaseLetter = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onFootNoteNumberingLowerCaseRoman = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onFootNoteNumberingUpperCaseRoman = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onFootNoteNumberingChicago = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onFootNoteNumberingChosung = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onFootNoteNumberingDecimalEnclosedCircle = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onFootNoteNumberingDecimalFullWidth = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onFootNoteNumberingGanada = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onEndNotePlacementEndOfSection = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onEndNotePlacementEndOfDocument = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onEndNotePlacementBelowText = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onEndNotePlacementPageBottom = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onEndNoteNumberingStart = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onEndNoteNumberingRestartEachSection = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onEndNoteNumberingRestartContinuous = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onEndNoteNumberingDecimal = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onEndNoteNumberingLowerCaseLetter = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onEndNoteNumberingUpperCaseLetter = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onEndNoteNumberingLowerCaseRoman = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onEndNoteNumberingUpperCaseRoman = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onEndNoteNumberingChicago = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onEndNoteNumberingChosung = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onEndNoteNumberingDecimalEnclosedCircle = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onEndNoteNumberingDecimalFullWidth = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onEndNoteNumberingGanada = function (_importer, _parameterValue, _hasParameter) {
    };
    DefaultDestination.onFootNoteKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new skip_destination_1.SkipDestination(importer);
    };
    DefaultDestination.onCommentStartPositionKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new skip_destination_1.SkipDestination(importer);
    };
    DefaultDestination.onCommentEndPositionKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new skip_destination_1.SkipDestination(importer);
    };
    DefaultDestination.onCommentIdKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new skip_destination_1.SkipDestination(importer);
    };
    DefaultDestination.onCommentAuthorKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new skip_destination_1.SkipDestination(importer);
    };
    DefaultDestination.onCommentAnnotationKeyword = function (importer, _parameterValue, _hasParameter) {
        importer.destination = new skip_destination_1.SkipDestination(importer);
    };
    DefaultDestination.prototype.beforeNestedGroupFinishedCore = function (_nestedDestination) {
    };
    DefaultDestination.prototype.nestedGroupFinished = function (nestedDestination) {
        _super.prototype.nestedGroupFinished.call(this, nestedDestination);
        if (nestedDestination instanceof list_table_destination_1.ListTableDestination)
            this.importer.documentProperties.listTableComplete = true;
        if (nestedDestination instanceof list_override_table_destination_1.ListOverrideTableDestination)
            this.importer.documentProperties.listOverrideTableComplete = true;
        if (this.importer.documentProperties.listOverrideTableComplete && this.importer.documentProperties.listTableComplete) {
            var converter = new rtf_list_converter_1.RtfListConverter(this.importer);
            converter.convert(this.importer.documentProperties.listTable, this.importer.documentProperties.listOverrideTable);
            this.importer.documentProperties.listTableComplete = false;
            this.importer.documentProperties.listOverrideTableComplete = false;
        }
        if (nestedDestination instanceof style_sheet_destination_1.StyleSheetDestination)
            this.importer.importers.style.applyStyleLinks();
    };
    DefaultDestination.prototype.afterNestedGroupFinished = function (_nestedDestination) {
    };
    DefaultDestination.prototype.createClone = function () {
        return new DefaultDestination(this.importer, this.subDocument);
    };
    return DefaultDestination;
}(destination_sub_document_1.DestinationSubDocument));
exports.DefaultDestination = DefaultDestination;
