"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var string_value_destination_1 = require("../base/string-value-destination");
var destination_type_1 = require("../utils/destination-type");
var ListLevelTextDestination = (function (_super) {
    tslib_1.__extends(ListLevelTextDestination, _super);
    function ListLevelTextDestination() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.levelTemplateId = 0;
        return _this;
    }
    Object.defineProperty(ListLevelTextDestination.prototype, "destinationType", {
        get: function () { return destination_type_1.DestinationType.ListLevelTextDestination; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListLevelTextDestination.prototype, "controlCharHT", {
        get: function () { return null; },
        enumerable: true,
        configurable: true
    });
    ListLevelTextDestination.prototype.createEmptyClone = function () {
        return new ListLevelTextDestination(this.importer);
    };
    ListLevelTextDestination.prototype.createClone = function () {
        var clone = _super.prototype.createClone.call(this);
        clone.levelTemplateId = this.levelTemplateId;
        return clone;
    };
    ListLevelTextDestination.onListLevelTemplateIdKeyword = function (importer, parameterValue, hasParameter) {
        importer.destination.levelTemplateId = hasParameter ?
            ListLevelTextDestination.fixLevelTemplateId(parameterValue) : 0;
    };
    ListLevelTextDestination.fixLevelTemplateId = function (levelTemplateId) {
        return Math.abs(levelTemplateId);
    };
    return ListLevelTextDestination;
}(string_value_destination_1.StringValueDestination));
exports.ListLevelTextDestination = ListLevelTextDestination;
