"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var number_converter_1 = require("../../../base-utils/number-converter");
var list_1 = require("@devexpress/utils/lib/utils/list");
var specified_symbols_1 = require("./specified-symbols");
var GB2315DecoderHelper = (function () {
    function GB2315DecoderHelper() {
    }
    Object.defineProperty(GB2315DecoderHelper, "specifiedPairSymbols", {
        get: function () {
            if (!GB2315DecoderHelper._specifiedPairSymbols) {
                var date = specified_symbols_1.gb2312date.match(/.{1,4}/g);
                var result_1 = {};
                var gbDate_1;
                list_1.ListUtils.forEach(date, function (item) {
                    if (!gbDate_1)
                        gbDate_1 = item;
                    else {
                        result_1[gbDate_1.toLowerCase()] = parseInt(item, 16);
                        gbDate_1 = null;
                    }
                });
                GB2315DecoderHelper._specifiedPairSymbols = result_1;
            }
            return GB2315DecoderHelper._specifiedPairSymbols;
        },
        enumerable: true,
        configurable: true
    });
    GB2315DecoderHelper.getChars = function (bytes) {
        var result = [];
        var firstByte = 0;
        var bytesLength = bytes.length;
        list_1.ListUtils.forEach(bytes, function (currentByte, index) {
            var isLast = bytesLength - 1 == index;
            if (firstByte < 128) {
                firstByte = currentByte.charCodeAt(0);
                if (firstByte < 128 || isLast)
                    result.push(currentByte);
            }
            else {
                var secondByte = number_converter_1.RichNumberConverter.numberToHex(currentByte.charCodeAt(0));
                var charCode = GB2315DecoderHelper.specifiedPairSymbols[number_converter_1.RichNumberConverter.numberToHex(firstByte) + secondByte];
                result.push(charCode ? String.fromCharCode(charCode) : '');
                firstByte = 0;
            }
        });
        return result;
    };
    GB2315DecoderHelper._specifiedPairSymbols = null;
    return GB2315DecoderHelper;
}());
exports.GB2315DecoderHelper = GB2315DecoderHelper;
