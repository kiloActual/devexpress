"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var bookmarks_1 = require("../../../core/model/bookmarks");
var boundary_1 = require("@devexpress/utils/lib/intervals/boundary");
var string_1 = require("@devexpress/utils/lib/utils/map/string");
var import_bookmark_info_1 = require("../model/bookmark/import-bookmark-info");
var importer_base_1 = require("./importer-base");
var RtfBookmarkImporter = (function (_super) {
    tslib_1.__extends(RtfBookmarkImporter, _super);
    function RtfBookmarkImporter(data) {
        return _super.call(this, data) || this;
    }
    Object.defineProperty(RtfBookmarkImporter.prototype, "bookmarks", {
        get: function () { return this.data.positionStates.last.bookmarks; },
        enumerable: true,
        configurable: true
    });
    ;
    RtfBookmarkImporter.prototype.getBookmarkByName = function (bookmarkName) {
        var bookmark = this.bookmarks[bookmarkName];
        if (!bookmark) {
            bookmark = new import_bookmark_info_1.ImportBookmarkInfo();
            bookmark.name = bookmarkName;
            this.bookmarks[bookmarkName] = bookmark;
        }
        return bookmark;
    };
    RtfBookmarkImporter.prototype.insertBookmarks = function () {
        var _this = this;
        string_1.StringMapUtils.forEach(this.bookmarks, function (bookmark, name) {
            if (bookmark.validate(_this.subDocument))
                _this.subDocument.bookmarks.push(new bookmarks_1.Bookmark(_this.subDocument.positionManager, new boundary_1.BoundaryInterval(bookmark.start, bookmark.end), name));
        });
    };
    RtfBookmarkImporter.prototype.pushState = function () {
    };
    RtfBookmarkImporter.prototype.popState = function () {
    };
    RtfBookmarkImporter.prototype.startImportSubDocument = function () {
    };
    RtfBookmarkImporter.prototype.finalizeSubDocument = function () {
        this.insertBookmarks();
    };
    return RtfBookmarkImporter;
}(importer_base_1.RtfBaseImporter));
exports.RtfBookmarkImporter = RtfBookmarkImporter;
