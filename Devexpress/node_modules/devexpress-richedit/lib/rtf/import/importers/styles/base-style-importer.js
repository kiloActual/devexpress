"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var stack_1 = require("@devexpress/utils/lib/class/stack");
var list_1 = require("@devexpress/utils/lib/utils/list");
var importer_base_1 = require("../importer-base");
var rtf_style_importer_state_1 = require("./rtf-style-importer-state");
var RtfBaseStyleImporter = (function (_super) {
    tslib_1.__extends(RtfBaseStyleImporter, _super);
    function RtfBaseStyleImporter(data, resetStates) {
        var _this = _super.call(this, data) || this;
        _this.mapRtfIndexToModelIndex = {};
        _this.states = new stack_1.Stack();
        _this.states.push(new rtf_style_importer_state_1.RtfStyleImporterState(0, 0));
        _this.resetStates = resetStates;
        _this.mapRtfIndexToModelIndex[0] = 0;
        return _this;
    }
    Object.defineProperty(RtfBaseStyleImporter.prototype, "rtfStyleIndex", {
        get: function () { return this.states.last.rtfStyleIndex; },
        set: function (value) { this.states.last.rtfStyleIndex = value; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfBaseStyleImporter.prototype, "rtfParentStyleIndex", {
        get: function () { return this.states.last.rtfParentStyleIndex; },
        set: function (value) { this.states.last.rtfParentStyleIndex = value; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfBaseStyleImporter.prototype, "styleExists", {
        get: function () {
            return this.mapRtfIndexToModelIndex[this.rtfStyleIndex] != undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfBaseStyleImporter.prototype, "style", {
        get: function () {
            return this.styleCollection[this.getModelIndex(this.rtfStyleIndex)];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfBaseStyleImporter.prototype, "parentStyleExists", {
        get: function () {
            return this.mapRtfIndexToModelIndex[this.rtfParentStyleIndex] != undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfBaseStyleImporter.prototype, "parentStyle", {
        get: function () {
            return this.styleCollection[this.getModelIndex(this.rtfParentStyleIndex)];
        },
        enumerable: true,
        configurable: true
    });
    RtfBaseStyleImporter.prototype.getModelIndex = function (rtfIndex) {
        var modelIndex = this.mapRtfIndexToModelIndex[rtfIndex];
        return modelIndex !== undefined ? modelIndex : 0;
    };
    RtfBaseStyleImporter.prototype.getOrCreateStyleByName = function (styleName) {
        var styleIndex = list_1.ListUtils.indexBy(this.styleCollection, function (currentStyle) { return currentStyle.styleName == styleName; });
        if (styleIndex >= 0) {
            this.mapRtfIndexToModelIndex[this.rtfStyleIndex] = styleIndex;
            return this.styleCollection[styleIndex];
        }
        var instance = this.createEmpty();
        instance.styleName = styleName;
        instance.parent = this.parentStyleExists ? this.parentStyle : null;
        var result = this.addStyle(instance);
        this.mapRtfIndexToModelIndex[this.rtfStyleIndex] = list_1.ListUtils.indexBy(this.styleCollection, function (style) { return style.styleName == styleName; });
        return result;
    };
    RtfBaseStyleImporter.prototype.pushState = function () {
        this.states.push(new rtf_style_importer_state_1.RtfStyleImporterState(this.rtfStyleIndex, this.rtfParentStyleIndex));
    };
    RtfBaseStyleImporter.prototype.popState = function () {
        if (this.states.count <= 1)
            return;
        var state = this.states.pop();
        if (!this.resetStates)
            this.applyState(this.states, state);
    };
    RtfBaseStyleImporter.prototype.startImportSubDocument = function () {
    };
    RtfBaseStyleImporter.prototype.finalizeSubDocument = function () {
    };
    return RtfBaseStyleImporter;
}(importer_base_1.RtfBaseImporter));
exports.RtfBaseStyleImporter = RtfBaseStyleImporter;
