"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var numbering_list_index_constants_1 = require("../../../../core/formats/utils/numbering-list-index-constants");
var character_properties_1 = require("../../../../core/model/character/character-properties");
var paragraph_properties_1 = require("../../../../core/model/paragraph/paragraph-properties");
var paragraph_style_1 = require("../../../../core/model/paragraph/paragraph-style");
var base_style_importer_1 = require("./base-style-importer");
var styles_manager_1 = require("../../../../core/model/styles-manager");
var RtfParagraphStyleImporter = (function (_super) {
    tslib_1.__extends(RtfParagraphStyleImporter, _super);
    function RtfParagraphStyleImporter(data) {
        var _this = _super.call(this, data, false) || this;
        _this.paragraphTableStyles = {};
        return _this;
    }
    RtfParagraphStyleImporter.prototype.addStyle = function (style) {
        var result = this.documentModel.stylesManager.addParagraphStyle(style);
        result.localizedName = styles_manager_1.StylesManager.getPresetParagraphStyleLocalizedName(style.styleName);
        return result;
    };
    RtfParagraphStyleImporter.prototype.ensureStyleExist = function () {
        this.rtfStyleIndex = Math.max(0, this.rtfStyleIndex);
        this.rtfParentStyleIndex = Math.max(0, this.rtfParentStyleIndex);
    };
    Object.defineProperty(RtfParagraphStyleImporter.prototype, "styleCollection", {
        get: function () { return this.data.documentModel.paragraphStyles; },
        enumerable: true,
        configurable: true
    });
    ;
    RtfParagraphStyleImporter.prototype.createEmpty = function () {
        return new paragraph_style_1.ParagraphStyle("", "", false, false, false, false, new character_properties_1.MaskedCharacterProperties(), new paragraph_properties_1.MaskedParagraphProperties(), new paragraph_style_1.TabProperties(), false, numbering_list_index_constants_1.NumberingListIndexConstants.listIndexNotSetted, -1, "");
    };
    return RtfParagraphStyleImporter;
}(base_style_importer_1.RtfBaseStyleImporter));
exports.RtfParagraphStyleImporter = RtfParagraphStyleImporter;
