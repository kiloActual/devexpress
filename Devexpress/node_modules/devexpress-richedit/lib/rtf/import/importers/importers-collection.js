"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var list_1 = require("@devexpress/utils/lib/utils/list");
var bookmark_importer_1 = require("./bookmark-importer");
var character_importer_1 = require("./character-importer");
var comments_importer_1 = require("./comments-importer");
var field_importer_1 = require("./field-importer");
var font_importer_1 = require("./font-importer");
var image_importer_1 = require("./image-importer");
var numbering_lists_importer_1 = require("./numbering-lists-importer");
var paragraph_importer_1 = require("./paragraph-importer");
var range_permission_importer_1 = require("./range-permission-importer");
var section_importer_1 = require("./section-importer");
var shape_importer_1 = require("./shape-importer");
var styles_importer_1 = require("./styles-importer");
var table_importer_1 = require("./table-importer");
var ImportersCollection = (function () {
    function ImportersCollection(data) {
        this.importers = [];
        this.style = new styles_importer_1.RtfStylesImporter(data);
        this.paragraph = new paragraph_importer_1.RtfParagraphImporter(data);
        this.section = new section_importer_1.RtfSectionImporter(data);
        this.numbering = new numbering_lists_importer_1.NumberingListsImporter(data);
        this.character = new character_importer_1.RtfCharacterImporter(data);
        this.image = new image_importer_1.RtfImageImporter(data);
        this.field = new field_importer_1.RtfFieldImporter(data);
        this.bookmark = new bookmark_importer_1.RtfBookmarkImporter(data);
        this.rangePermission = new range_permission_importer_1.RtfRangePermissionImporter(data);
        this.comment = new comments_importer_1.RtfCommentsImporter(data);
        this.font = new font_importer_1.RtfFontImporter(data);
        this.table = new table_importer_1.RtfTableImporter(data);
        this.shape = new shape_importer_1.RtfShapeImporter(data);
        this.importers = [
            this.style,
            this.paragraph,
            this.section,
            this.numbering,
            this.character,
            this.image,
            this.field,
            this.bookmark,
            this.rangePermission,
            this.comment,
            this.font,
            this.table,
            this.shape,
        ];
    }
    ImportersCollection.prototype.pushState = function () {
        for (var _i = 0, _a = this.importers; _i < _a.length; _i++) {
            var imp = _a[_i];
            imp.pushState();
        }
    };
    ImportersCollection.prototype.popState = function () {
        list_1.ListUtils.reverseForEach(this.importers, function (imp) { return imp.popState(); });
    };
    ImportersCollection.prototype.startImportSubDocument = function () {
        for (var _i = 0, _a = this.importers; _i < _a.length; _i++) {
            var imp = _a[_i];
            imp.startImportSubDocument();
        }
    };
    ImportersCollection.prototype.finalizeSubDocument = function () {
        for (var _i = 0, _a = this.importers; _i < _a.length; _i++) {
            var imp = _a[_i];
            imp.finalizeSubDocument();
        }
    };
    return ImportersCollection;
}());
exports.ImportersCollection = ImportersCollection;
