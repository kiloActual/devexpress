"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var table_restorer_1 = require("../../../core/formats/model-restorer/table-restorer");
var table_1 = require("../../../core/model/tables/main-structures/table");
var table_converter_1 = require("../table/table-converter");
var importer_base_1 = require("./importer-base");
var RtfTableImporter = (function (_super) {
    tslib_1.__extends(RtfTableImporter, _super);
    function RtfTableImporter(data) {
        return _super.call(this, data) || this;
    }
    Object.defineProperty(RtfTableImporter.prototype, "tableReader", {
        get: function () { return this.data.positionStates.last.tableReader; },
        enumerable: true,
        configurable: true
    });
    ;
    RtfTableImporter.prototype.insertTables = function () {
        if (this.tableReader.tables.length == 0)
            return;
        new table_converter_1.RtfTableConverter(this.tableReader).convertTables(this.tableReader.tables, false);
    };
    RtfTableImporter.prototype.pushState = function () {
    };
    RtfTableImporter.prototype.popState = function () {
    };
    RtfTableImporter.prototype.startImportSubDocument = function () {
    };
    RtfTableImporter.prototype.finalizeSubDocument = function () {
        this.insertTables();
        table_1.Table.fillTableByLevels(this.subDocument);
        table_restorer_1.TableRestorer.fixTables(this.subDocument);
        table_restorer_1.TableRestorer.fixLastParagraph(this.subDocument);
        if (this.subDocument.isMain())
            table_restorer_1.TableRestorer.paragraphMarkBetween(this.subDocument.documentModel);
    };
    return RtfTableImporter;
}(importer_base_1.RtfBaseImporter));
exports.RtfTableImporter = RtfTableImporter;
