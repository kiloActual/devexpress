"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var range_permissions_1 = require("../../../core/model/range-permissions");
var boundary_1 = require("@devexpress/utils/lib/intervals/boundary");
var string_1 = require("@devexpress/utils/lib/utils/map/string");
var rtf_revision_authors_1 = require("../model/rtf-revision-authors");
var importer_base_1 = require("./importer-base");
var RtfRangePermissionImporter = (function (_super) {
    tslib_1.__extends(RtfRangePermissionImporter, _super);
    function RtfRangePermissionImporter(data) {
        var _this = _super.call(this, data) || this;
        _this.revisionAuthors = new rtf_revision_authors_1.RtfRevisionAuthors();
        _this.userNames = [];
        return _this;
    }
    Object.defineProperty(RtfRangePermissionImporter.prototype, "rangePermissions", {
        get: function () { return this.data.positionStates.last.rangePermissions; },
        enumerable: true,
        configurable: true
    });
    RtfRangePermissionImporter.prototype.insertRangePermissions = function () {
        var _this = this;
        string_1.StringMapUtils.forEach(this.data.importers.rangePermission.rangePermissions, function (rangePermission, _name) {
            if (rangePermission.validate(_this.subDocument))
                _this.subDocument.rangePermissions.push(new range_permissions_1.RangePermission(_this.subDocument.positionManager, new boundary_1.BoundaryInterval(rangePermission.start, rangePermission.end), rangePermission.userName, rangePermission.group));
        });
        this.data.subDocument.rangePermissions.sort(function (a, b) { return a.start != b.start ? a.start - b.start : a.end - b.end; });
    };
    RtfRangePermissionImporter.prototype.getUserNameById = function (id) {
        var userName = this.userNames[id - 1];
        return userName !== undefined ? userName : "";
    };
    RtfRangePermissionImporter.prototype.pushState = function () {
    };
    RtfRangePermissionImporter.prototype.popState = function () {
    };
    RtfRangePermissionImporter.prototype.startImportSubDocument = function () {
    };
    RtfRangePermissionImporter.prototype.finalizeSubDocument = function () {
        this.insertRangePermissions();
    };
    return RtfRangePermissionImporter;
}(importer_base_1.RtfBaseImporter));
exports.RtfRangePermissionImporter = RtfRangePermissionImporter;
