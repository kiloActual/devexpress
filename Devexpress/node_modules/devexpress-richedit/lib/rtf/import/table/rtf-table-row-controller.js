"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var list_1 = require("@devexpress/utils/lib/utils/list");
var rtf_table_row_1 = require("../model/table/rtf-table-row");
var rtf_import_data_1 = require("../rtf-import-data");
var rtf_table_cell_controller_1 = require("./rtf-table-cell-controller");
var RtfTableRowController = (function () {
    function RtfTableRowController(tableController) {
        this.tableController = tableController;
        this.cellController = this.createCellController();
    }
    RtfTableRowController.prototype.createCellController = function () {
        return new rtf_table_cell_controller_1.RtfTableCellController(this);
    };
    RtfTableRowController.prototype.startNewRow = function () {
        var table = this.tableController.currentTable;
        this.currentRow = new rtf_table_row_1.RtfTableRow(table);
        this.cellController.startNewCell();
    };
    RtfTableRowController.prototype.isCurrentRowNotComplete = function () {
        var _this = this;
        return !list_1.ListUtils.elementBy(this.tableController.currentTable.rows, function (r) { return r == _this.currentRow; }) &&
            (this.currentRow.cells.length > 0 || this.cellController.isCurrentCellNotComplete());
    };
    RtfTableRowController.prototype.isCurrentRowValid = function () {
        var _this = this;
        return list_1.ListUtils.elementBy(this.tableController.currentTable.rows, function (r) { return r == _this.currentRow; }) && this.currentRow.cells.length > 0;
    };
    RtfTableRowController.prototype.assignLastRowAsCurrent = function () {
        this.currentRow = list_1.ListUtils.last(this.tableController.currentTable.rows);
        this.cellController.assignLastCellAsCurrent();
    };
    RtfTableRowController.prototype.finishRow = function () {
        this.finishRowCore();
        this.assignRowProperties();
    };
    RtfTableRowController.prototype.finishRowCore = function () {
        var currentTable = this.tableController.currentTable;
        this.splitTables(currentTable);
        var rows = this.tableController.currentTable.rows;
        if (rows.length == 0 || list_1.ListUtils.last(rows) != this.currentRow) {
            this.currentRow.index = rows.length;
            rows.push(this.currentRow);
        }
    };
    RtfTableRowController.prototype.splitTables = function (currentTable) {
        var rows = currentTable.rows;
        if (rows.length == 0 || list_1.ListUtils.last(rows) == this.currentRow)
            return;
        if (currentTable.properties.style != this.tableController.reader.tableProperties.style) {
            this.tableController.changeCurrentTable();
            this.currentRow.table = this.tableController.currentTable;
        }
    };
    RtfTableRowController.prototype.assignRowProperties = function () {
        var reader = this.tableController.reader;
        var tableProperties = this.tableController.currentTable.properties;
        if (!tableProperties.isChanged())
            tableProperties.copyFrom(reader.tableProperties);
        tableProperties.style = reader.tableProperties.style;
        var properties = reader.rowProperties;
        this.currentRow.properties.copyFrom(properties);
        this.assignCellProperties();
    };
    RtfTableRowController.prototype.assignCellProperties = function () {
        var reader = this.tableController.reader;
        var cellPropertiesCount = reader.cellPropertiesCollection.length;
        if (cellPropertiesCount == 0)
            rtf_import_data_1.RtfImportData.throwInvalidRtfFile();
        var cells = this.currentRow.cells;
        while (cells.length > cellPropertiesCount && cells.length > 1) {
            cells[1].startPos = cells[0].startPos;
            cells.shift();
        }
        cells.forEach(function (cell, index) {
            cell.properties.copyFrom(reader.cellPropertiesCollection[index]);
        });
    };
    RtfTableRowController.prototype.reset = function () {
        this.currentRow = null;
        this.cellController.reset();
    };
    return RtfTableRowController;
}());
exports.RtfTableRowController = RtfTableRowController;
