"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var stack_1 = require("@devexpress/utils/lib/class/stack");
var list_1 = require("@devexpress/utils/lib/utils/list");
var rtf_table_cell_properties_1 = require("../model/table/properties/rtf-table-cell-properties");
var rtf_table_properties_1 = require("../model/table/properties/rtf-table-properties");
var table_row_properties_1 = require("../model/table/properties/table-row-properties");
var rtf_table_controller_1 = require("./rtf-table-controller");
var no_table_state_1 = require("./states/no-table-state");
var RtfTableReader = (function () {
    function RtfTableReader(importer) {
        this.isNestedTableProperetiesReading = false;
        this._state = new no_table_state_1.NoTableRtfTableReaderState(this);
        this.data = importer;
        this.tableStack = new stack_1.Stack();
        this.tables = [];
        this.tableController = this.createTableController();
        this.parentCellMap = {};
        this.resetProperties();
    }
    Object.defineProperty(RtfTableReader.prototype, "state", {
        get: function () { return this._state; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableReader.prototype, "tableProperties", {
        get: function () {
            {
                if (this._tableProperties == null)
                    this._tableProperties = new rtf_table_properties_1.RtfTableProperties();
                return this._tableProperties;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableReader.prototype, "rowProperties", {
        get: function () {
            if (this._rowProperties == null)
                this._rowProperties = new table_row_properties_1.RtfTableRowProperties();
            return this._rowProperties;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RtfTableReader.prototype, "cellProperties", {
        get: function () {
            if (this._cellProperties == null)
                this.createCellProperties();
            return this._cellProperties;
        },
        enumerable: true,
        configurable: true
    });
    RtfTableReader.prototype.createCellProperties = function () {
        this._cellProperties = new rtf_table_cell_properties_1.RtfTableCellProperties();
    };
    RtfTableReader.prototype.restoreProperties = function (state) {
        this._tableProperties = state.tableProperties;
        this._rowProperties = state.rowProperties;
        this.cellPropertiesCollection = state.cellPropertiesCollection;
        if (this.cellPropertiesCollection.length > 0)
            this._cellProperties = list_1.ListUtils.last(this.cellPropertiesCollection);
        else
            this.createCellProperties();
    };
    RtfTableReader.prototype.resetProperties = function () {
        this._tableProperties = null;
        this._rowProperties = null;
        this._cellProperties = null;
        this.cellPropertiesCollection = [];
        this.processedBorder = null;
    };
    RtfTableReader.prototype.createTableController = function () {
        return new rtf_table_controller_1.RtfTableController(this);
    };
    RtfTableReader.prototype.onStartNestedTableProperties = function () {
        this.isNestedTableProperetiesReading = true;
        this.state.onStartNestedTableProperties();
    };
    RtfTableReader.prototype.onEndParagraph = function () {
        this.state.onEndParagraph(this.data.importers.paragraph.paragraphFormatting);
    };
    RtfTableReader.prototype.onEndRow = function () {
        this.state.onEndRow();
    };
    RtfTableReader.prototype.onEndCell = function () {
        this.state.onEndCell();
    };
    RtfTableReader.prototype.onEndNestedRow = function () {
        this.isNestedTableProperetiesReading = false;
        this.state.onEndNestedRow();
    };
    RtfTableReader.prototype.onEndNestedCell = function () {
        this.state.onEndNestedCell();
    };
    RtfTableReader.prototype.onTableRowDefaults = function () {
        this.state.onTableRowDefaults();
        this.resetProperties();
    };
    RtfTableReader.prototype.onCellxProperty = function (value) {
        this.cellProperties.right = value;
        if (this.cellPropertiesCollection.length == 0 || list_1.ListUtils.last(this.cellPropertiesCollection) != this.cellProperties)
            this.cellPropertiesCollection.push(this.cellProperties);
        this.createCellProperties();
        this.processedBorder = null;
    };
    RtfTableReader.prototype.resetState = function () {
        this.changeState(new no_table_state_1.NoTableRtfTableReaderState(this));
        this.tableController.reset();
    };
    RtfTableReader.prototype.changeState = function (newState) {
        this._state = newState;
    };
    return RtfTableReader;
}());
exports.RtfTableReader = RtfTableReader;
