"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var rtf_import_data_1 = require("../../rtf-import-data");
var manager_state_1 = require("./manager-state");
var state_base_1 = require("./state-base");
var NoTableRtfTableReaderState = (function (_super) {
    tslib_1.__extends(NoTableRtfTableReaderState, _super);
    function NoTableRtfTableReaderState() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.defaultNestingLevel = 1;
        return _this;
    }
    NoTableRtfTableReaderState.prototype.onEndParagraph = function (paragraphFormattingInfo) {
        if (!paragraphFormattingInfo.inTableParagraph)
            return;
        var newState = this.changeState();
        newState.onEndParagraph(paragraphFormattingInfo);
    };
    NoTableRtfTableReaderState.prototype.onStartNestedTableProperties = function () {
        rtf_import_data_1.RtfImportData.throwInvalidRtfFile();
    };
    NoTableRtfTableReaderState.prototype.onEndRow = function () {
        rtf_import_data_1.RtfImportData.throwInvalidRtfFile();
    };
    NoTableRtfTableReaderState.prototype.onEndCell = function () {
        var newState = this.changeState();
        newState.onEndCell();
    };
    NoTableRtfTableReaderState.prototype.onEndNestedRow = function () {
        rtf_import_data_1.RtfImportData.throwInvalidRtfFile();
    };
    NoTableRtfTableReaderState.prototype.onEndNestedCell = function () {
        var newState = this.changeState();
        newState.onEndNestedCell();
    };
    NoTableRtfTableReaderState.prototype.onTableRowDefaults = function () {
    };
    NoTableRtfTableReaderState.prototype.changeState = function () {
        var newState = new manager_state_1.TableRtfTableManagerState(this.reader);
        this.reader.changeState(newState);
        return newState;
    };
    return NoTableRtfTableReaderState;
}(state_base_1.RtfTableReaderStateBase));
exports.NoTableRtfTableReaderState = NoTableRtfTableReaderState;
